

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 06 20:33:15 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  00175A                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _anio
    40  00175A  000F               	dw	15
    41                           
    42                           ;initializer for _dia
    43  00175C  0008               	dw	8
    44                           
    45                           ;initializer for _diasem
    46  00175E  0003               	dw	3
    47                           
    48                           ;initializer for _hora
    49  001760  0012               	dw	18
    50                           
    51                           ;initializer for _mes
    52  001762  0009               	dw	9
    53                           
    54                           ;initializer for _minuto
    55  001764  001E               	dw	30
    56                           
    57                           	psect	smallconst
    58  000F00                     __psmallconst:
    59                           	opt stack 0
    60  000F00  00                 	db	0
    61  000F01                     _LCD_INIT_STRING:
    62                           	opt stack 0
    63  000F01  28                 	db	40
    64  000F02  0C                 	db	12
    65  000F03  01                 	db	1
    66  000F04  06                 	db	6
    67  000F05                     __end_of_LCD_INIT_STRING:
    68                           	opt stack 0
    69  000F05  00                 	db	0	; dummy byte at the end
    70  0000                     
    71                           	psect	nvCOMRAM
    72  000046                     __pnvCOMRAM:
    73                           	opt stack 0
    74  000046                     _anio_d:
    75                           	opt stack 0
    76  000046                     	ds	1
    77  000047                     _anio_u:
    78                           	opt stack 0
    79  000047                     	ds	1
    80  000048                     _dia_semana:
    81                           	opt stack 0
    82  000048                     	ds	1
    83  000049                     _fecha_d:
    84                           	opt stack 0
    85  000049                     	ds	1
    86  00004A                     _fecha_u:
    87                           	opt stack 0
    88  00004A                     	ds	1
    89  00004B                     _hora_d:
    90                           	opt stack 0
    91  00004B                     	ds	1
    92  00004C                     _hora_u:
    93                           	opt stack 0
    94  00004C                     	ds	1
    95  00004D                     _mes_d:
    96                           	opt stack 0
    97  00004D                     	ds	1
    98  00004E                     _mes_u:
    99                           	opt stack 0
   100  00004E                     	ds	1
   101  00004F                     _minuto_d:
   102                           	opt stack 0
   103  00004F                     	ds	1
   104  000050                     _minuto_u:
   105                           	opt stack 0
   106  000050                     	ds	1
   107  000051                     _segundo_d:
   108                           	opt stack 0
   109  000051                     	ds	1
   110  000052                     _segundo_u:
   111                           	opt stack 0
   112  000052                     	ds	1
   113  0000                     _ANCON0	set	3912
   114  0000                     _ANCON1	set	3913
   115  0000                     _RTCCFG	set	3903
   116  0000                     _RTCCFGbits	set	3903
   117  0000                     _ADCON0	set	4034
   118  0000                     _ADCON1	set	4033
   119  0000                     _ALRMCFGbits	set	3985
   120  0000                     _EECON2	set	4007
   121  0000                     _INTCONbits	set	4082
   122  0000                     _LATBbits	set	3978
   123  0000                     _OSCCONbits	set	4051
   124  0000                     _OSCTUNEbits	set	3995
   125  0000                     _PIE3bits	set	4003
   126  0000                     _PORTBbits	set	3969
   127  0000                     _PORTCbits	set	3970
   128  0000                     _RTCVALH	set	3993
   129  0000                     _RTCVALL	set	3992
   130  0000                     _T1CONbits	set	4045
   131  0000                     _TRISA	set	3986
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISBbits	set	3987
   134  0000                     _TRISC	set	3988
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  0015D8                     __pcinit:
   140                           	opt stack 0
   141  0015D8                     start_initialization:
   142                           	opt stack 0
   143  0015D8                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK0 (20 bytes)
   147  0015D8  EE00  F060         	lfsr	0,__pbssBANK0
   148  0015DC  0E14               	movlw	20
   149  0015DE                     clear_0:
   150  0015DE  6AEE               	clrf	postinc0,c
   151  0015E0  06E8               	decf	wreg,f,c
   152  0015E2  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   155  0015E4  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   156                           
   157                           ; Clear objects allocated to COMRAM (50 bytes)
   158  0015E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   159  0015EA  0E32               	movlw	50
   160  0015EC                     clear_1:
   161  0015EC  6AEE               	clrf	postinc0,c
   162  0015EE  06E8               	decf	wreg,f,c
   163  0015F0  E1FD               	bnz	clear_1
   164                           
   165                           ; Initialize objects allocated to COMRAM (12 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  0015F2  0E5A               	movlw	low __pidataCOMRAM
   168  0015F4  6EF6               	movwf	tblptrl,c
   169  0015F6  0E17               	movlw	high __pidataCOMRAM
   170  0015F8  6EF7               	movwf	tblptrh,c
   171  0015FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  0015FC  6EF8               	movwf	tblptru,c
   173  0015FE  EE00  F053         	lfsr	0,__pdataCOMRAM
   174  001602  EE10 F00C          	lfsr	1,12
   175  001606                     copy_data0:
   176  001606  0009               	tblrd		*+
   177  001608  CFF5 FFEE          	movff	tablat,postinc0
   178  00160C  50E5               	movf	postdec1,w,c
   179  00160E  50E1               	movf	fsr1l,w,c
   180  001610  E1FA               	bnz	copy_data0
   181  001612                     end_of_initialization:
   182                           	opt stack 0
   183  001612                     __end_of__initialization:
   184                           	opt stack 0
   185  001612  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  001614  6EF8               	movwf	tblptru,c
   187  001616  0100               	movlb	0
   188  001618  EF2E  F00B         	goto	_main	;jump to C main() function
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	bitbssCOMRAM
   199  0002F8                     __pbitbssCOMRAM:
   200                           	opt stack 0
   201  0002F8                     _flag:
   202                           	opt stack 0
   203  0002F8                     	ds	1
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           postdec1	equ	0xFE5
   211                           fsr1l	equ	0xFE1
   212                           
   213                           	psect	bssCOMRAM
   214  000001                     __pbssCOMRAM:
   215                           	opt stack 0
   216  000001                     _RtccAlrmTimeDate:
   217                           	opt stack 0
   218  000001                     	ds	8
   219  000009                     _RtccTimeDate:
   220                           	opt stack 0
   221  000009                     	ds	8
   222  000011                     _Rtcc_read_TimeDate:
   223                           	opt stack 0
   224  000011                     	ds	8
   225  000019                     _RtccTimeVal:
   226                           	opt stack 0
   227  000019                     	ds	4
   228  00001D                     _a:
   229                           	opt stack 0
   230  00001D                     	ds	2
   231  00001F                     _b:
   232                           	opt stack 0
   233  00001F                     	ds	2
   234  000021                     _c:
   235                           	opt stack 0
   236  000021                     	ds	2
   237  000023                     _i:
   238                           	opt stack 0
   239  000023                     	ds	2
   240  000025                     _j:
   241                           	opt stack 0
   242  000025                     	ds	2
   243  000027                     _k:
   244                           	opt stack 0
   245  000027                     	ds	2
   246  000029                     _segundo:
   247                           	opt stack 0
   248  000029                     	ds	2
   249  00002B                     _RtccDate:
   250                           	opt stack 0
   251  00002B                     	ds	4
   252  00002F                     _RtccTime:
   253                           	opt stack 0
   254  00002F                     	ds	4
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	dataCOMRAM
   265  000053                     __pdataCOMRAM:
   266                           	opt stack 0
   267  000053                     _anio:
   268                           	opt stack 0
   269  000053                     	ds	2
   270  000055                     _dia:
   271                           	opt stack 0
   272  000055                     	ds	2
   273  000057                     _diasem:
   274                           	opt stack 0
   275  000057                     	ds	2
   276  000059                     _hora:
   277                           	opt stack 0
   278  000059                     	ds	2
   279  00005B                     _mes:
   280                           	opt stack 0
   281  00005B                     	ds	2
   282  00005D                     _minuto:
   283                           	opt stack 0
   284  00005D                     	ds	2
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	bssBANK0
   295  000060                     __pbssBANK0:
   296                           	opt stack 0
   297  000060                     _buffer2:
   298                           	opt stack 0
   299  000060                     	ds	20
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           	psect	cstackCOMRAM
   310  000033                     __pcstackCOMRAM:
   311                           	opt stack 0
   312  000033                     ??_lcd_send_nibble:
   313  000033                     ?___wmul:
   314                           	opt stack 0
   315  000033                     ?___awdiv:
   316                           	opt stack 0
   317  000033                     Delay100TCYx@unit:
   318                           	opt stack 0
   319  000033                     Delay1KTCYx@unit:
   320                           	opt stack 0
   321  000033                     on_number@number:
   322                           	opt stack 0
   323  000033                     RtccWriteDate@pDt:
   324                           	opt stack 0
   325  000033                     RtccWriteTime@pTm:
   326                           	opt stack 0
   327  000033                     ___wmul@multiplier:
   328                           	opt stack 0
   329  000033                     ___awdiv@dividend:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000033                     	ds	1
   334  000034                     lcd_send_nibble@nibble:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000034                     	ds	1
   339  000035                     ??_on_number:
   340  000035                     lcd_send_byte@n:
   341                           	opt stack 0
   342  000035                     RtccWriteDate@di:
   343                           	opt stack 0
   344  000035                     RtccWriteTime@di:
   345                           	opt stack 0
   346  000035                     ___wmul@multiplicand:
   347                           	opt stack 0
   348  000035                     ___awdiv@divisor:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000035                     	ds	1
   353  000036                     lcd_send_byte@address:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x3
   357  000036                     	ds	1
   358  000037                     lcd_init@i:
   359                           	opt stack 0
   360  000037                     RtccWriteDate@wasOn:
   361                           	opt stack 0
   362  000037                     RtccWriteTime@wasOn:
   363                           	opt stack 0
   364  000037                     ___awdiv@counter:
   365                           	opt stack 0
   366  000037                     on_numbers@number:
   367                           	opt stack 0
   368  000037                     ___wmul@product:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372  000037                     	ds	1
   373  000038                     RtccWriteDate@wasAlrm:
   374                           	opt stack 0
   375  000038                     RtccWriteTime@wasAlrm:
   376                           	opt stack 0
   377  000038                     ___awdiv@sign:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x5
   381  000038                     	ds	1
   382  000039                     on_numbers@uni:
   383                           	opt stack 0
   384  000039                     RtccWriteTime@wasWrEn:
   385                           	opt stack 0
   386  000039                     RtccWriteDate@tempYear:
   387                           	opt stack 0
   388  000039                     ___awdiv@quotient:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x6
   392  000039                     	ds	1
   393  00003A                     RtccWriteTime@tempMinSec:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x7
   397  00003A                     	ds	1
   398  00003B                     RtccWriteDate@wasWrEn:
   399                           	opt stack 0
   400  00003B                     write@number:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x8
   404  00003B                     	ds	1
   405  00003C                     RtccWriteDate@tempDayMonth:
   406                           	opt stack 0
   407  00003C                     RtccWriteTime@tempHourWDay:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x9
   411  00003C                     	ds	1
   412  00003D                     ??_write:
   413                           
   414                           ; 0 bytes @ 0xA
   415  00003D                     	ds	1
   416  00003E                     write@uni:
   417                           	opt stack 0
   418  00003E                     RtccWriteDate@tempHourWDay:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xB
   422  00003E                     	ds	2
   423  000040                     write@dec:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xD
   427  000040                     	ds	2
   428  000042                     write@time:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xF
   432  000042                     	ds	2
   433  000044                     main@count:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x11
   437  000044                     	ds	2
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 78 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  count           2   17[COMRAM] short 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  2  118[None  ] int 
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;Total ram usage:        2 bytes
   471 ;; Hardware stack levels required when called:    4
   472 ;; This function calls:
   473 ;;		_Setup
   474 ;;		_caratula
   475 ;;		_write
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  00165C                     __ptext0:
   483                           	opt stack 0
   484  00165C                     _main:
   485                           	opt stack 27
   486                           
   487                           ;main.c: 79: Setup();
   488                           
   489                           ; BSR set to: 15
   490                           ;incstack = 0
   491  00165C  EC0E  F00B         	call	_Setup	;wreg free
   492                           
   493                           ;main.c: 80: caratula();
   494  001660  ECB3  F00B         	call	_caratula	;wreg free
   495                           
   496                           ;main.c: 82: short count = 0;
   497  001664  0E00               	movlw	0
   498  001666  6E45               	movwf	main@count+1,c
   499  001668  0E00               	movlw	0
   500  00166A  6E44               	movwf	main@count,c
   501                           
   502                           ;main.c: 84: PORTCbits.RC7 = 1;
   503  00166C  8E82               	bsf	3970,7,c	;volatile
   504                           
   505                           ;main.c: 85: PORTBbits.RB0 = 1;
   506  00166E  8081               	bsf	3969,0,c	;volatile
   507  001670  D000               	goto	l1995
   508  001672                     l1995:
   509                           
   510                           ;main.c: 92: write(count);
   511  001672  C044  F03B         	movff	main@count,write@number
   512  001676  C045  F03C         	movff	main@count+1,write@number+1
   513  00167A  ECCA  F009         	call	_write	;wreg free
   514                           
   515                           ;main.c: 94: count++;
   516  00167E  4A44               	infsnz	main@count,f,c
   517  001680  2A45               	incf	main@count+1,f,c
   518                           
   519                           ;main.c: 96: if ( count == 100) count = 0;
   520  001682  0E64               	movlw	100
   521  001684  1844               	xorwf	main@count,w,c
   522  001686  1045               	iorwf	main@count+1,w,c
   523  001688  A4D8               	btfss	status,2,c
   524  00168A  D7F3               	goto	l1995
   525  00168C  0E00               	movlw	0
   526  00168E  6E45               	movwf	main@count+1,c
   527  001690  0E00               	movlw	0
   528  001692  6E44               	movwf	main@count,c
   529  001694  D7EE               	goto	l1995
   530                           
   531                           ;main.c: 99: }
   532                           ;main.c: 101: return 0;
   533                           ;	Return value of _main is never used
   534  001696  EF00  F000         	goto	start
   535  00169A                     __end_of_main:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           status	equ	0xFD8
   546                           
   547 ;; *************** function _write *****************
   548 ;; Defined at:
   549 ;;		line 73 in file "display7seg.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  number          2    8[COMRAM] short 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  time            2   15[COMRAM] int 
   554 ;;  dec             2   13[COMRAM] short 
   555 ;;  uni             2   11[COMRAM] short 
   556 ;; Return value:  Size  Location     Type
   557 ;;		None               void
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   566 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   568 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   569 ;;Total ram usage:        9 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		___awdiv
   574 ;;		___wmul
   575 ;;		_clear_Segment
   576 ;;		_on_numbers
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text1
   583  001394                     __ptext1:
   584                           	opt stack 0
   585  001394                     _write:
   586                           	opt stack 28
   587                           
   588                           ;display7seg.c: 74: int time = 0;
   589                           
   590                           ;incstack = 0
   591  001394  0E00               	movlw	0
   592  001396  6E43               	movwf	write@time+1,c
   593  001398  0E00               	movlw	0
   594  00139A  6E42               	movwf	write@time,c
   595                           
   596                           ;display7seg.c: 75: short dec = number/10;
   597  00139C  C03B  F033         	movff	write@number,___awdiv@dividend
   598  0013A0  C03C  F034         	movff	write@number+1,___awdiv@dividend+1
   599  0013A4  0E00               	movlw	0
   600  0013A6  6E36               	movwf	___awdiv@divisor+1,c
   601  0013A8  0E0A               	movlw	10
   602  0013AA  6E35               	movwf	___awdiv@divisor,c
   603  0013AC  EC26  F00A         	call	___awdiv	;wreg free
   604  0013B0  C033  F040         	movff	?___awdiv,write@dec
   605  0013B4  C034  F041         	movff	?___awdiv+1,write@dec+1
   606                           
   607                           ;display7seg.c: 76: short uni = number - dec*10;
   608  0013B8  C040  F033         	movff	write@dec,___wmul@multiplier
   609  0013BC  C041  F034         	movff	write@dec+1,___wmul@multiplier+1
   610  0013C0  0E00               	movlw	0
   611  0013C2  6E36               	movwf	___wmul@multiplicand+1,c
   612  0013C4  0E0A               	movlw	10
   613  0013C6  6E35               	movwf	___wmul@multiplicand,c
   614  0013C8  EC66  F00B         	call	___wmul	;wreg free
   615  0013CC  1E33               	comf	?___wmul,f,c
   616  0013CE  1E34               	comf	?___wmul+1,f,c
   617  0013D0  4A33               	infsnz	?___wmul,f,c
   618  0013D2  2A34               	incf	?___wmul+1,f,c
   619  0013D4  503B               	movf	write@number,w,c
   620  0013D6  2433               	addwf	?___wmul,w,c
   621  0013D8  6E3E               	movwf	write@uni,c
   622  0013DA  503C               	movf	write@number+1,w,c
   623  0013DC  2034               	addwfc	?___wmul+1,w,c
   624  0013DE  6E3F               	movwf	write@uni+1,c
   625                           
   626                           ;display7seg.c: 77: clear_Segment();
   627  0013E0  ECA5  F00B         	call	_clear_Segment	;wreg free
   628                           
   629                           ;display7seg.c: 78: while(time < 500){
   630  0013E4  D02A               	goto	l1959
   631  0013E6                     l1945:
   632                           
   633                           ;display7seg.c: 80: on_numbers(uni, 1);
   634  0013E6  C03E  F037         	movff	write@uni,on_numbers@number
   635  0013EA  C03F  F038         	movff	write@uni+1,on_numbers@number+1
   636  0013EE  0E01               	movlw	1
   637  0013F0  6E39               	movwf	on_numbers@uni,c
   638  0013F2  EC7A  F00B         	call	_on_numbers	;wreg free
   639                           
   640                           ;display7seg.c: 85: _delay((unsigned long)((10)*(8000000/4000.0)));
   641  0013F6  0E1A               	movlw	26
   642  0013F8  6E3D               	movwf	??_write& (0+255),c
   643  0013FA  0EF8               	movlw	248
   644  0013FC                     u937:
   645  0013FC  2EE8               	decfsz	wreg,f,c
   646  0013FE  D7FE               	goto	u937
   647  001400  2E3D               	decfsz	??_write& (0+255),f,c
   648  001402  D7FC               	goto	u937
   649  001404  D000               	nop2	
   650                           
   651                           ;display7seg.c: 86: PORTCbits.RC7 = 1;
   652  001406  8E82               	bsf	3970,7,c	;volatile
   653                           
   654                           ;display7seg.c: 87: on_numbers(dec, 0);
   655  001408  C040  F037         	movff	write@dec,on_numbers@number
   656  00140C  C041  F038         	movff	write@dec+1,on_numbers@number+1
   657  001410  0E00               	movlw	0
   658  001412  6E39               	movwf	on_numbers@uni,c
   659  001414  EC7A  F00B         	call	_on_numbers	;wreg free
   660                           
   661                           ;display7seg.c: 89: PORTBbits.RB0 = 0;
   662  001418  9081               	bcf	3969,0,c	;volatile
   663                           
   664                           ;display7seg.c: 90: _delay((unsigned long)((10)*(8000000/4000.0)));
   665  00141A  0E1A               	movlw	26
   666  00141C  6E3D               	movwf	??_write& (0+255),c
   667  00141E  0EF8               	movlw	248
   668  001420                     u947:
   669  001420  2EE8               	decfsz	wreg,f,c
   670  001422  D7FE               	goto	u947
   671  001424  2E3D               	decfsz	??_write& (0+255),f,c
   672  001426  D7FC               	goto	u947
   673  001428  D000               	nop2	
   674                           
   675                           ;display7seg.c: 91: PORTBbits.RB0 = 1;
   676  00142A  8081               	bsf	3969,0,c	;volatile
   677                           
   678                           ;display7seg.c: 93: time = time + 20;
   679  00142C  0E14               	movlw	20
   680  00142E  2442               	addwf	write@time,w,c
   681  001430  6E42               	movwf	write@time,c
   682  001432  0E00               	movlw	0
   683  001434  2043               	addwfc	write@time+1,w,c
   684  001436  6E43               	movwf	write@time+1,c
   685  001438  D000               	goto	l1959
   686  00143A                     l1959:
   687  00143A  BE43               	btfsc	write@time+1,7,c
   688  00143C  D7D4               	goto	l1945
   689  00143E  0EF4               	movlw	244
   690  001440  5C42               	subwf	write@time,w,c
   691  001442  0E01               	movlw	1
   692  001444  5843               	subwfb	write@time+1,w,c
   693  001446  A0D8               	btfss	status,0,c
   694  001448  D7CE               	goto	l1945
   695  00144A  0012               	return		;funcret
   696  00144C                     __end_of_write:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           postdec1	equ	0xFE5
   705                           fsr1l	equ	0xFE1
   706                           status	equ	0xFD8
   707                           
   708 ;; *************** function _on_numbers *****************
   709 ;; Defined at:
   710 ;;		line 58 in file "display7seg.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  number          2    4[COMRAM] short 
   713 ;;  uni             1    6[COMRAM] unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;		None               void
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    1
   732 ;; This function calls:
   733 ;;		_on_number
   734 ;; This function is called by:
   735 ;;		_write
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text2
   740  0016F4                     __ptext2:
   741                           	opt stack 0
   742  0016F4                     _on_numbers:
   743                           	opt stack 28
   744                           
   745                           ;display7seg.c: 60: on_number(number);
   746                           
   747                           ;incstack = 0
   748  0016F4  C037  F033         	movff	on_numbers@number,on_number@number
   749  0016F8  C038  F034         	movff	on_numbers@number+1,on_number@number+1
   750  0016FC  EC50  F009         	call	_on_number	;wreg free
   751                           
   752                           ;display7seg.c: 62: if(uni){
   753  001700  5039               	movf	on_numbers@uni,w,c
   754  001702  B4D8               	btfsc	status,2,c
   755  001704  D003               	goto	l375
   756                           
   757                           ;display7seg.c: 63: PORTCbits.RC7 = 0;
   758  001706  9E82               	bcf	3970,7,c	;volatile
   759                           
   760                           ;display7seg.c: 64: PORTBbits.RB0 = 1;
   761  001708  8081               	bsf	3969,0,c	;volatile
   762                           
   763                           ;display7seg.c: 65: }else{
   764  00170A  0012               	return	
   765  00170C                     l375:
   766                           
   767                           ;display7seg.c: 66: PORTCbits.RC7 = 1;
   768  00170C  8E82               	bsf	3970,7,c	;volatile
   769                           
   770                           ;display7seg.c: 67: PORTBbits.RB0 = 0;
   771  00170E  9081               	bcf	3969,0,c	;volatile
   772  001710  0012               	return	
   773  001712  0012               	return		;funcret
   774  001714                     __end_of_on_numbers:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           status	equ	0xFD8
   785                           
   786 ;; *************** function _on_number *****************
   787 ;; Defined at:
   788 ;;		line 3 in file "display7seg.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  number          2    0[COMRAM] short 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;		None               void
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;Total ram usage:        4 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_on_numbers
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text3
   816  0012A0                     __ptext3:
   817                           	opt stack 0
   818  0012A0                     _on_number:
   819                           	opt stack 28
   820                           
   821                           ;display7seg.c: 5: switch (number){
   822                           
   823                           ;incstack = 0
   824  0012A0  D050               	goto	l1763
   825  0012A2                     l358:
   826                           
   827                           ;display7seg.c: 7: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.RB
      +                          4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 0;
   828  0012A2  8E81               	bsf	3969,7,c	;volatile
   829  0012A4  8C81               	bsf	3969,6,c	;volatile
   830  0012A6  8A81               	bsf	3969,5,c	;volatile
   831  0012A8  8881               	bsf	3969,4,c	;volatile
   832  0012AA  8681               	bsf	3969,3,c	;volatile
   833  0012AC  8481               	bsf	3969,2,c	;volatile
   834  0012AE  9281               	bcf	3969,1,c	;volatile
   835                           
   836                           ;display7seg.c: 8: break;
   837  0012B0  0012               	return	
   838  0012B2                     l360:
   839                           
   840                           ;display7seg.c: 11: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   841  0012B2  9E81               	bcf	3969,7,c	;volatile
   842  0012B4  8C81               	bsf	3969,6,c	;volatile
   843  0012B6  8A81               	bsf	3969,5,c	;volatile
   844  0012B8  9881               	bcf	3969,4,c	;volatile
   845  0012BA  9681               	bcf	3969,3,c	;volatile
   846  0012BC  9481               	bcf	3969,2,c	;volatile
   847  0012BE  9281               	bcf	3969,1,c	;volatile
   848                           
   849                           ;display7seg.c: 12: break;
   850  0012C0  0012               	return	
   851  0012C2                     l361:
   852                           
   853                           ;display7seg.c: 15: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 0; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   854  0012C2  8E81               	bsf	3969,7,c	;volatile
   855  0012C4  8C81               	bsf	3969,6,c	;volatile
   856  0012C6  9A81               	bcf	3969,5,c	;volatile
   857  0012C8  8881               	bsf	3969,4,c	;volatile
   858  0012CA  8681               	bsf	3969,3,c	;volatile
   859  0012CC  9481               	bcf	3969,2,c	;volatile
   860  0012CE  8281               	bsf	3969,1,c	;volatile
   861                           
   862                           ;display7seg.c: 16: break;
   863  0012D0  0012               	return	
   864  0012D2                     l362:
   865                           
   866                           ;display7seg.c: 19: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   867  0012D2  8E81               	bsf	3969,7,c	;volatile
   868  0012D4  8C81               	bsf	3969,6,c	;volatile
   869  0012D6  8A81               	bsf	3969,5,c	;volatile
   870  0012D8  8881               	bsf	3969,4,c	;volatile
   871  0012DA  9681               	bcf	3969,3,c	;volatile
   872  0012DC  9481               	bcf	3969,2,c	;volatile
   873  0012DE  8281               	bsf	3969,1,c	;volatile
   874                           
   875                           ;display7seg.c: 20: break;
   876  0012E0  0012               	return	
   877  0012E2                     l363:
   878                           
   879                           ;display7seg.c: 23: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   880  0012E2  9E81               	bcf	3969,7,c	;volatile
   881  0012E4  8C81               	bsf	3969,6,c	;volatile
   882  0012E6  8A81               	bsf	3969,5,c	;volatile
   883  0012E8  9881               	bcf	3969,4,c	;volatile
   884  0012EA  9681               	bcf	3969,3,c	;volatile
   885  0012EC  8481               	bsf	3969,2,c	;volatile
   886  0012EE  8281               	bsf	3969,1,c	;volatile
   887                           
   888                           ;display7seg.c: 24: break;
   889  0012F0  0012               	return	
   890  0012F2                     l364:
   891                           
   892                           ;display7seg.c: 27: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   893  0012F2  8E81               	bsf	3969,7,c	;volatile
   894  0012F4  9C81               	bcf	3969,6,c	;volatile
   895  0012F6  8A81               	bsf	3969,5,c	;volatile
   896  0012F8  8881               	bsf	3969,4,c	;volatile
   897  0012FA  9681               	bcf	3969,3,c	;volatile
   898  0012FC  8481               	bsf	3969,2,c	;volatile
   899  0012FE  8281               	bsf	3969,1,c	;volatile
   900                           
   901                           ;display7seg.c: 28: break;
   902  001300  0012               	return	
   903  001302                     l365:
   904                           
   905                           ;display7seg.c: 31: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   906  001302  8E81               	bsf	3969,7,c	;volatile
   907  001304  9C81               	bcf	3969,6,c	;volatile
   908  001306  8A81               	bsf	3969,5,c	;volatile
   909  001308  8881               	bsf	3969,4,c	;volatile
   910  00130A  8681               	bsf	3969,3,c	;volatile
   911  00130C  8481               	bsf	3969,2,c	;volatile
   912  00130E  8281               	bsf	3969,1,c	;volatile
   913                           
   914                           ;display7seg.c: 32: break;
   915  001310  0012               	return	
   916  001312                     l366:
   917                           
   918                           ;display7seg.c: 35: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   919  001312  8E81               	bsf	3969,7,c	;volatile
   920  001314  8C81               	bsf	3969,6,c	;volatile
   921  001316  8A81               	bsf	3969,5,c	;volatile
   922  001318  9881               	bcf	3969,4,c	;volatile
   923  00131A  9681               	bcf	3969,3,c	;volatile
   924  00131C  9481               	bcf	3969,2,c	;volatile
   925  00131E  9281               	bcf	3969,1,c	;volatile
   926                           
   927                           ;display7seg.c: 36: break;
   928  001320  0012               	return	
   929  001322                     l367:
   930                           
   931                           ;display7seg.c: 39: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   932  001322  8E81               	bsf	3969,7,c	;volatile
   933  001324  8C81               	bsf	3969,6,c	;volatile
   934  001326  8A81               	bsf	3969,5,c	;volatile
   935  001328  8881               	bsf	3969,4,c	;volatile
   936  00132A  8681               	bsf	3969,3,c	;volatile
   937  00132C  8481               	bsf	3969,2,c	;volatile
   938  00132E  8281               	bsf	3969,1,c	;volatile
   939                           
   940                           ;display7seg.c: 40: break;
   941  001330  0012               	return	
   942  001332                     l368:
   943                           
   944                           ;display7seg.c: 43: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   945  001332  8E81               	bsf	3969,7,c	;volatile
   946  001334  8C81               	bsf	3969,6,c	;volatile
   947  001336  8A81               	bsf	3969,5,c	;volatile
   948  001338  8881               	bsf	3969,4,c	;volatile
   949  00133A  9681               	bcf	3969,3,c	;volatile
   950  00133C  8481               	bsf	3969,2,c	;volatile
   951  00133E  8281               	bsf	3969,1,c	;volatile
   952                           
   953                           ;display7seg.c: 45: }
   954                           
   955                           ;display7seg.c: 44: break;
   956  001340  0012               	return	
   957  001342                     l1763:
   958  001342  C033  F035         	movff	on_number@number,??_on_number
   959  001346  C034  F036         	movff	on_number@number+1,??_on_number+1
   960                           
   961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   962                           ; Switch size 1, requested type "space"
   963                           ; Number of cases is 1, Range of values is 0 to 0
   964                           ; switch strategies available:
   965                           ; Name         Instructions Cycles
   966                           ; simple_byte            4     3 (average)
   967                           ;	Chosen strategy is simple_byte
   968  00134A  5036               	movf	??_on_number+1,w,c
   969  00134C  0A00               	xorlw	0	; case 0
   970  00134E  A4D8               	btfss	status,2,c
   971  001350  0012               	return	
   972                           
   973                           ; Switch size 1, requested type "space"
   974                           ; Number of cases is 10, Range of values is 0 to 9
   975                           ; switch strategies available:
   976                           ; Name         Instructions Cycles
   977                           ; simple_byte           31    16 (average)
   978                           ;	Chosen strategy is simple_byte
   979  001352  5035               	movf	??_on_number,w,c
   980  001354  0A00               	xorlw	0	; case 0
   981  001356  B4D8               	btfsc	status,2,c
   982  001358  D7A4               	goto	l358
   983  00135A  0A01               	xorlw	1	; case 1
   984  00135C  B4D8               	btfsc	status,2,c
   985  00135E  D7A9               	goto	l360
   986  001360  0A03               	xorlw	3	; case 2
   987  001362  B4D8               	btfsc	status,2,c
   988  001364  D7AE               	goto	l361
   989  001366  0A01               	xorlw	1	; case 3
   990  001368  B4D8               	btfsc	status,2,c
   991  00136A  D7B3               	goto	l362
   992  00136C  0A07               	xorlw	7	; case 4
   993  00136E  B4D8               	btfsc	status,2,c
   994  001370  D7B8               	goto	l363
   995  001372  0A01               	xorlw	1	; case 5
   996  001374  B4D8               	btfsc	status,2,c
   997  001376  D7BD               	goto	l364
   998  001378  0A03               	xorlw	3	; case 6
   999  00137A  B4D8               	btfsc	status,2,c
  1000  00137C  D7C2               	goto	l365
  1001  00137E  0A01               	xorlw	1	; case 7
  1002  001380  B4D8               	btfsc	status,2,c
  1003  001382  D7C7               	goto	l366
  1004  001384  0A0F               	xorlw	15	; case 8
  1005  001386  B4D8               	btfsc	status,2,c
  1006  001388  D7CC               	goto	l367
  1007  00138A  0A01               	xorlw	1	; case 9
  1008  00138C  A4D8               	btfss	status,2,c
  1009  00138E  0012               	return	
  1010  001390  D7D0               	goto	l368
  1011  001392  0012               	return		;funcret
  1012  001394                     __end_of_on_number:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _clear_Segment *****************
  1025 ;; Defined at:
  1026 ;;		line 48 in file "display7seg.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;		None               void
  1033 ;; Registers used:
  1034 ;;		None
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_write
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text4
  1054  00174A                     __ptext4:
  1055                           	opt stack 0
  1056  00174A                     _clear_Segment:
  1057                           	opt stack 29
  1058                           
  1059                           ;display7seg.c: 49: PORTBbits.RB7 = 0;
  1060                           
  1061                           ;incstack = 0
  1062  00174A  9E81               	bcf	3969,7,c	;volatile
  1063                           
  1064                           ;display7seg.c: 50: PORTBbits.RB6 = 0;
  1065  00174C  9C81               	bcf	3969,6,c	;volatile
  1066                           
  1067                           ;display7seg.c: 51: PORTBbits.RB5 = 0;
  1068  00174E  9A81               	bcf	3969,5,c	;volatile
  1069                           
  1070                           ;display7seg.c: 52: PORTBbits.RB4 = 0;
  1071  001750  9881               	bcf	3969,4,c	;volatile
  1072                           
  1073                           ;display7seg.c: 53: PORTBbits.RB3 = 0;
  1074  001752  9681               	bcf	3969,3,c	;volatile
  1075                           
  1076                           ;display7seg.c: 54: PORTBbits.RB2 = 0;
  1077  001754  9481               	bcf	3969,2,c	;volatile
  1078                           
  1079                           ;display7seg.c: 55: PORTBbits.RB1 = 0;
  1080  001756  9281               	bcf	3969,1,c	;volatile
  1081  001758  0012               	return		;funcret
  1082  00175A                     __end_of_clear_Segment:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function ___wmul *****************
  1095 ;; Defined at:
  1096 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  multiplier      2    0[COMRAM] unsigned int 
  1099 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  product         2    4[COMRAM] unsigned int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  2    0[COMRAM] unsigned int 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, prodl, prodh
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;Total ram usage:        6 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_write
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125  0016CC                     __ptext5:
  1126                           	opt stack 0
  1127  0016CC                     ___wmul:
  1128                           	opt stack 29
  1129                           
  1130                           ;incstack = 0
  1131  0016CC  5033               	movf	___wmul@multiplier,w,c
  1132  0016CE  0235               	mulwf	___wmul@multiplicand,c
  1133  0016D0  CFF3 F037          	movff	prodl,___wmul@product
  1134  0016D4  CFF4 F038          	movff	prodh,___wmul@product+1
  1135  0016D8  5033               	movf	___wmul@multiplier,w,c
  1136  0016DA  0236               	mulwf	___wmul@multiplicand+1,c
  1137  0016DC  50F3               	movf	prodl,w,c
  1138  0016DE  2638               	addwf	___wmul@product+1,f,c
  1139  0016E0  5034               	movf	___wmul@multiplier+1,w,c
  1140  0016E2  0235               	mulwf	___wmul@multiplicand,c
  1141  0016E4  50F3               	movf	prodl,w,c
  1142  0016E6  2638               	addwf	___wmul@product+1,f,c
  1143  0016E8  C037  F033         	movff	___wmul@product,?___wmul
  1144  0016EC  C038  F034         	movff	___wmul@product+1,?___wmul+1
  1145  0016F0  0012               	return	
  1146  0016F2  0012               	return		;funcret
  1147  0016F4                     __end_of___wmul:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1l	equ	0xFE1
  1159                           status	equ	0xFD8
  1160                           
  1161 ;; *************** function _caratula *****************
  1162 ;; Defined at:
  1163 ;;		line 13 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;		None               void
  1170 ;; Registers used:
  1171 ;;		None
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text6
  1191  001766                     __ptext6:
  1192                           	opt stack 0
  1193  001766                     _caratula:
  1194                           	opt stack 30
  1195                           
  1196                           ;incstack = 0
  1197  001766  0012               	return		;funcret
  1198  001768                     __end_of_caratula:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           prodh	equ	0xFF4
  1205                           prodl	equ	0xFF3
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _Setup *****************
  1213 ;; Defined at:
  1214 ;;		line 33 in file "main.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    3
  1235 ;; This function calls:
  1236 ;;		_Write_RTC
  1237 ;;		_lcd_init
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text7
  1244  00161C                     __ptext7:
  1245                           	opt stack 0
  1246  00161C                     _Setup:
  1247                           	opt stack 27
  1248                           
  1249                           ;main.c: 35: OSCTUNEbits.INTSRC=1;
  1250                           
  1251                           ;incstack = 0
  1252  00161C  8E9B               	bsf	3995,7,c	;volatile
  1253                           
  1254                           ;main.c: 36: OSCTUNEbits.PLLEN=0;
  1255  00161E  9C9B               	bcf	3995,6,c	;volatile
  1256                           
  1257                           ;main.c: 37: OSCCONbits.IRCF0=1;
  1258  001620  88D3               	bsf	4051,4,c	;volatile
  1259                           
  1260                           ;main.c: 38: OSCCONbits.IRCF1=1;
  1261  001622  8AD3               	bsf	4051,5,c	;volatile
  1262                           
  1263                           ;main.c: 39: OSCCONbits.IRCF2=1;
  1264  001624  8CD3               	bsf	4051,6,c	;volatile
  1265                           
  1266                           ;main.c: 40: OSCCONbits.SCS0=0;
  1267  001626  90D3               	bcf	4051,0,c	;volatile
  1268                           
  1269                           ;main.c: 41: OSCCONbits.SCS1=0;
  1270  001628  92D3               	bcf	4051,1,c	;volatile
  1271                           
  1272                           ;main.c: 42: TRISA = 0b11110000;
  1273  00162A  0EF0               	movlw	240
  1274  00162C  6E92               	movwf	3986,c	;volatile
  1275                           
  1276                           ;main.c: 43: TRISB = 0;
  1277  00162E  0E00               	movlw	0
  1278  001630  6E93               	movwf	3987,c	;volatile
  1279                           
  1280                           ;main.c: 44: TRISC = 0b0110111;
  1281  001632  0E37               	movlw	55
  1282  001634  6E94               	movwf	3988,c	;volatile
  1283                           
  1284                           ;main.c: 48: ANCON0=0b11111111;
  1285  001636  010F               	movlb	15	; () banked
  1286  001638  6948               	setf	72,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 50: ANCON1=0b11111111;
  1290  00163A  010F               	movlb	15	; () banked
  1291  00163C  6949               	setf	73,b	;volatile
  1292                           
  1293                           ;main.c: 51: ADCON0=0b00101101;
  1294  00163E  0E2D               	movlw	45
  1295  001640  6EC2               	movwf	4034,c	;volatile
  1296                           
  1297                           ;main.c: 52: ADCON1=0b00010000;
  1298  001642  0E10               	movlw	16
  1299  001644  6EC1               	movwf	4033,c	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;main.c: 53: RTCCFGbits.RTCEN=1;
  1303  001646  010F               	movlb	15	; () banked
  1304  001648  8F3F               	bsf	63,7,b	;volatile
  1305                           
  1306                           ; BSR set to: 15
  1307                           ;main.c: 54: RTCCFGbits.RTCWREN=1;
  1308  00164A  010F               	movlb	15	; () banked
  1309  00164C  8B3F               	bsf	63,5,b	;volatile
  1310                           
  1311                           ; BSR set to: 15
  1312                           ;main.c: 55: T1CONbits.T1OSCEN=1;
  1313  00164E  86CD               	bsf	4045,3,c	;volatile
  1314                           
  1315                           ; BSR set to: 15
  1316                           ;main.c: 56: Write_RTC();
  1317  001650  EC83  F007         	call	_Write_RTC	;wreg free
  1318                           
  1319                           ;main.c: 57: lcd_init();
  1320  001654  EC71  F00A         	call	_lcd_init	;wreg free
  1321                           
  1322                           ;main.c: 59: LATBbits.LATB1 = 1;;
  1323  001658  828A               	bsf	3978,1,c	;volatile
  1324  00165A  0012               	return		;funcret
  1325  00165C                     __end_of_Setup:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           prodh	equ	0xFF4
  1332                           prodl	equ	0xFF3
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1l	equ	0xFE1
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function _lcd_init *****************
  1340 ;; Defined at:
  1341 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  i               1    4[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    2
  1362 ;; This function calls:
  1363 ;;		_Delay1KTCYx
  1364 ;;		_lcd_send_byte
  1365 ;;		_lcd_send_nibble
  1366 ;; This function is called by:
  1367 ;;		_Setup
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text8
  1372  0014E2                     __ptext8:
  1373                           	opt stack 0
  1374  0014E2                     _lcd_init:
  1375                           	opt stack 27
  1376                           
  1377                           ;unmc_lcd_216.c: 120: int8 i;
  1378                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1379                           
  1380                           ;incstack = 0
  1381  0014E2  9693               	bcf	3987,3,c	;volatile
  1382                           
  1383                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1384  0014E4  9493               	bcf	3987,2,c	;volatile
  1385                           
  1386                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1387  0014E6  968A               	bcf	3978,3,c	;volatile
  1388                           
  1389                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1390  0014E8  948A               	bcf	3978,2,c	;volatile
  1391                           
  1392                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1393  0014EA  9893               	bcf	3987,4,c	;volatile
  1394                           
  1395                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1396  0014EC  9A93               	bcf	3987,5,c	;volatile
  1397                           
  1398                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1399  0014EE  9C93               	bcf	3987,6,c	;volatile
  1400                           
  1401                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1402  0014F0  9E93               	bcf	3987,7,c	;volatile
  1403                           
  1404                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1405  0014F2  0E0A               	movlw	10
  1406  0014F4  EC93  F00B         	call	_Delay1KTCYx
  1407                           
  1408                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1409  0014F8  0E0A               	movlw	10
  1410  0014FA  EC93  F00B         	call	_Delay1KTCYx
  1411                           
  1412                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1413  0014FE  0E0A               	movlw	10
  1414  001500  EC93  F00B         	call	_Delay1KTCYx
  1415                           
  1416                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1417  001504  0E00               	movlw	0
  1418  001506  6E37               	movwf	lcd_init@i,c
  1419  001508                     l1869:
  1420  001508  0E02               	movlw	2
  1421  00150A  6437               	cpfsgt	lcd_init@i,c
  1422  00150C  D001               	goto	l1873
  1423  00150E  D008               	goto	l1879
  1424  001510                     l1873:
  1425                           
  1426                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1427  001510  0E03               	movlw	3
  1428  001512  ECB1  F00A         	call	_lcd_send_nibble
  1429                           
  1430                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1431  001516  0E0A               	movlw	10
  1432  001518  EC93  F00B         	call	_Delay1KTCYx
  1433  00151C  2A37               	incf	lcd_init@i,f,c
  1434  00151E  D7F4               	goto	l1869
  1435  001520                     l1879:
  1436                           
  1437                           ;unmc_lcd_216.c: 146: }
  1438                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1439  001520  0E02               	movlw	2
  1440  001522  ECB1  F00A         	call	_lcd_send_nibble
  1441                           
  1442                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1443  001526  0E00               	movlw	0
  1444  001528  6E37               	movwf	lcd_init@i,c
  1445  00152A  0E03               	movlw	3
  1446  00152C  6437               	cpfsgt	lcd_init@i,c
  1447  00152E  D002               	goto	l1887
  1448  001530  0012               	return	
  1449  001532  0012               	return	
  1450  001534                     l1887:
  1451                           
  1452                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1453  001534  5037               	movf	lcd_init@i,w,c
  1454  001536  0D01               	mullw	1
  1455  001538  0E01               	movlw	low _LCD_INIT_STRING
  1456  00153A  24F3               	addwf	prodl,w,c
  1457  00153C  6EF6               	movwf	tblptrl,c
  1458  00153E  0E0F               	movlw	high _LCD_INIT_STRING
  1459  001540  20F4               	addwfc	prodh,w,c
  1460  001542  6EF7               	movwf	tblptrh,c
  1461  001544                     	if	0	;There are less than 3 active tblptr bytes
  1462  001544                     	endif
  1463  001544  0008               	tblrd		*
  1464  001546  CFF5 F035          	movff	tablat,lcd_send_byte@n
  1465  00154A  0E00               	movlw	0
  1466  00154C  EC4D  F00B         	call	_lcd_send_byte
  1467                           
  1468                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1469  001550  0E0A               	movlw	10
  1470  001552  EC93  F00B         	call	_Delay1KTCYx
  1471  001556  2A37               	incf	lcd_init@i,f,c
  1472  001558  0E03               	movlw	3
  1473  00155A  6437               	cpfsgt	lcd_init@i,c
  1474  00155C  D7EB               	goto	l1887
  1475  00155E  0012               	return	
  1476  001560  0012               	return		;funcret
  1477  001562                     __end_of_lcd_init:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           prodh	equ	0xFF4
  1484                           prodl	equ	0xFF3
  1485                           postinc0	equ	0xFEE
  1486                           wreg	equ	0xFE8
  1487                           postdec1	equ	0xFE5
  1488                           fsr1l	equ	0xFE1
  1489                           status	equ	0xFD8
  1490                           
  1491 ;; *************** function _lcd_send_byte *****************
  1492 ;; Defined at:
  1493 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  address         1    wreg     unsigned char 
  1496 ;;  n               1    2[COMRAM] unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  address         1    3[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;		None               void
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1508 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1512 ;;Total ram usage:        2 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    1
  1515 ;; This function calls:
  1516 ;;		_Delay100TCYx
  1517 ;;		_lcd_send_nibble
  1518 ;; This function is called by:
  1519 ;;		_lcd_init
  1520 ;;		_lcd_gotoxy
  1521 ;;		_lcd_putc
  1522 ;;		_lcd_comand
  1523 ;;		_lcd_setcursor_vb
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text9
  1528  00169A                     __ptext9:
  1529                           	opt stack 0
  1530  00169A                     _lcd_send_byte:
  1531                           	opt stack 27
  1532                           
  1533                           ;incstack = 0
  1534                           ;lcd_send_byte@address stored from wreg
  1535  00169A  6E36               	movwf	lcd_send_byte@address,c
  1536                           
  1537                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  1538  00169C  968A               	bcf	3978,3,c	;volatile
  1539                           
  1540                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  1541  00169E  0E02               	movlw	2
  1542  0016A0  EC8A  F00B         	call	_Delay100TCYx
  1543                           
  1544                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  1545  0016A4  9893               	bcf	3987,4,c	;volatile
  1546                           
  1547                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  1548  0016A6  9A93               	bcf	3987,5,c	;volatile
  1549                           
  1550                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  1551  0016A8  9C93               	bcf	3987,6,c	;volatile
  1552                           
  1553                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  1554  0016AA  9E93               	bcf	3987,7,c	;volatile
  1555                           
  1556                           ;unmc_lcd_216.c: 101: if(address)
  1557  0016AC  5036               	movf	lcd_send_byte@address,w,c
  1558  0016AE  B4D8               	btfsc	status,2,c
  1559  0016B0  D002               	goto	l141
  1560                           
  1561                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  1562  0016B2  868A               	bsf	3978,3,c	;volatile
  1563  0016B4  D001               	goto	l142
  1564  0016B6                     l141:
  1565                           
  1566                           ;unmc_lcd_216.c: 103: else
  1567                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  1568  0016B6  968A               	bcf	3978,3,c	;volatile
  1569  0016B8                     l142:
  1570                           
  1571                           ;unmc_lcd_216.c: 106: __nop();
  1572  0016B8  F000               	nop	
  1573                           
  1574                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  1575  0016BA  3835               	swapf	lcd_send_byte@n,w,c
  1576  0016BC  0B0F               	andlw	15
  1577  0016BE  ECB1  F00A         	call	_lcd_send_nibble
  1578                           
  1579                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  1580  0016C2  5035               	movf	lcd_send_byte@n,w,c
  1581  0016C4  0B0F               	andlw	15
  1582  0016C6  ECB1  F00A         	call	_lcd_send_nibble
  1583  0016CA  0012               	return		;funcret
  1584  0016CC                     __end_of_lcd_send_byte:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           prodh	equ	0xFF4
  1591                           prodl	equ	0xFF3
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _lcd_send_nibble *****************
  1599 ;; Defined at:
  1600 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  nibble          1    wreg     unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  nibble          1    1[COMRAM] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;		None               void
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_lcd_send_byte
  1624 ;;		_lcd_init
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text10
  1629  001562                     __ptext10:
  1630                           	opt stack 0
  1631  001562                     _lcd_send_nibble:
  1632                           	opt stack 28
  1633                           
  1634                           ;incstack = 0
  1635                           ;lcd_send_nibble@nibble stored from wreg
  1636  001562  6E34               	movwf	lcd_send_nibble@nibble,c
  1637                           
  1638                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  1639  001564  A034               	btfss	lcd_send_nibble@nibble,0,c
  1640  001566  D003               	goto	u10
  1641  001568  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1642  00156A  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1643  00156C  D001               	goto	u28
  1644  00156E                     u10:
  1645  00156E  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1646  001570                     u28:
  1647  001570  3A33               	swapf	??_lcd_send_nibble,f,c
  1648  001572  508A               	movf	3978,w,c	;volatile
  1649  001574  1833               	xorwf	??_lcd_send_nibble,w,c
  1650  001576  0BEF               	andlw	-17
  1651  001578  1833               	xorwf	??_lcd_send_nibble,w,c
  1652  00157A  6E8A               	movwf	3978,c	;volatile
  1653                           
  1654                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  1655  00157C  A234               	btfss	lcd_send_nibble@nibble,1,c
  1656  00157E  D003               	goto	u30
  1657  001580  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1658  001582  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1659  001584  D001               	goto	u48
  1660  001586                     u30:
  1661  001586  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1662  001588                     u48:
  1663  001588  3A33               	swapf	??_lcd_send_nibble,f,c
  1664  00158A  4633               	rlncf	??_lcd_send_nibble,f,c
  1665  00158C  508A               	movf	3978,w,c	;volatile
  1666  00158E  1833               	xorwf	??_lcd_send_nibble,w,c
  1667  001590  0BDF               	andlw	-33
  1668  001592  1833               	xorwf	??_lcd_send_nibble,w,c
  1669  001594  6E8A               	movwf	3978,c	;volatile
  1670                           
  1671                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  1672  001596  A434               	btfss	lcd_send_nibble@nibble,2,c
  1673  001598  D003               	goto	u50
  1674  00159A  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1675  00159C  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1676  00159E  D001               	goto	u68
  1677  0015A0                     u50:
  1678  0015A0  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1679  0015A2                     u68:
  1680  0015A2  3A33               	swapf	??_lcd_send_nibble,f,c
  1681  0015A4  4633               	rlncf	??_lcd_send_nibble,f,c
  1682  0015A6  4633               	rlncf	??_lcd_send_nibble,f,c
  1683  0015A8  508A               	movf	3978,w,c	;volatile
  1684  0015AA  1833               	xorwf	??_lcd_send_nibble,w,c
  1685  0015AC  0BBF               	andlw	-65
  1686  0015AE  1833               	xorwf	??_lcd_send_nibble,w,c
  1687  0015B0  6E8A               	movwf	3978,c	;volatile
  1688                           
  1689                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  1690  0015B2  A634               	btfss	lcd_send_nibble@nibble,3,c
  1691  0015B4  D003               	goto	u70
  1692  0015B6  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1693  0015B8  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1694  0015BA  D001               	goto	u88
  1695  0015BC                     u70:
  1696  0015BC  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1697  0015BE                     u88:
  1698  0015BE  3233               	rrcf	??_lcd_send_nibble,f,c
  1699  0015C0  3233               	rrcf	??_lcd_send_nibble,f,c
  1700  0015C2  508A               	movf	3978,w,c	;volatile
  1701  0015C4  1833               	xorwf	??_lcd_send_nibble,w,c
  1702  0015C6  0B7F               	andlw	-129
  1703  0015C8  1833               	xorwf	??_lcd_send_nibble,w,c
  1704  0015CA  6E8A               	movwf	3978,c	;volatile
  1705                           
  1706                           ;unmc_lcd_216.c: 32: __nop();
  1707  0015CC  F000               	nop	
  1708                           
  1709                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  1710  0015CE  848A               	bsf	3978,2,c	;volatile
  1711                           
  1712                           ;unmc_lcd_216.c: 34: __nop();__nop();
  1713  0015D0  F000               	nop	
  1714  0015D2  F000               	nop	
  1715                           
  1716                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  1717  0015D4  948A               	bcf	3978,2,c	;volatile
  1718  0015D6  0012               	return		;funcret
  1719  0015D8                     __end_of_lcd_send_nibble:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           postdec1	equ	0xFE5
  1730                           fsr1l	equ	0xFE1
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _Delay100TCYx *****************
  1734 ;; Defined at:
  1735 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  unit            1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  unit            1    0[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;		None               void
  1742 ;; Registers used:
  1743 ;;		wreg
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;Total ram usage:        1 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_lcd_send_byte
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text11
  1763  001714                     __ptext11:
  1764                           	opt stack 0
  1765  001714                     _Delay100TCYx:
  1766                           	opt stack 27
  1767                           
  1768                           ;incstack = 0
  1769                           ;Delay100TCYx@unit stored from wreg
  1770  001714  6E33               	movwf	Delay100TCYx@unit,c
  1771  001716  0E21               	movlw	33
  1772  001718                     u957:
  1773  001718  2EE8               	decfsz	wreg,f,c
  1774  00171A  D7FE               	goto	u957
  1775  00171C  F000               	nop	
  1776  00171E  2E33               	decfsz	Delay100TCYx@unit,f,c
  1777  001720  D7FA               	goto	l1103
  1778  001722  0012               	return	
  1779  001724  0012               	return		;funcret
  1780  001726                     __end_of_Delay100TCYx:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           postdec1	equ	0xFE5
  1791                           fsr1l	equ	0xFE1
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function _Delay1KTCYx *****************
  1795 ;; Defined at:
  1796 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  unit            1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  unit            1    0[COMRAM] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_lcd_init
  1820 ;;		_DelayPORXLCD
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text12
  1825  001726                     __ptext12:
  1826                           	opt stack 0
  1827  001726                     _Delay1KTCYx:
  1828                           	opt stack 28
  1829                           
  1830                           ;incstack = 0
  1831                           ;Delay1KTCYx@unit stored from wreg
  1832  001726  6E33               	movwf	Delay1KTCYx@unit,c
  1833  001728  0EFA               	movlw	250
  1834  00172A                     u967:
  1835  00172A  F000               	nop	
  1836  00172C  2EE8               	decfsz	wreg,f,c
  1837  00172E  D7FD               	goto	u967
  1838  001730  2E33               	decfsz	Delay1KTCYx@unit,f,c
  1839  001732  D7FA               	goto	l1133
  1840  001734  0012               	return	
  1841  001736  0012               	return		;funcret
  1842  001738                     __end_of_Delay1KTCYx:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _Write_RTC *****************
  1857 ;; Defined at:
  1858 ;;		line 22 in file "Unimic/sources/unmc_rtcc_01.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;		None               void
  1865 ;; Registers used:
  1866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		_RtccWrOn
  1881 ;;		_RtccWriteDate
  1882 ;;		_RtccWriteTime
  1883 ;;		___awdiv
  1884 ;; This function is called by:
  1885 ;;		_Setup
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text13
  1890  000F06                     __ptext13:
  1891                           	opt stack 0
  1892  000F06                     _Write_RTC:
  1893                           	opt stack 27
  1894                           
  1895                           ;unmc_rtcc_01.c: 24: RtccWrOn();
  1896                           
  1897                           ;incstack = 0
  1898  000F06  EC9C  F00B         	call	_RtccWrOn	;wreg free
  1899                           
  1900                           ;unmc_rtcc_01.c: 26: PIE3bits.RTCCIE=1;
  1901  000F0A  80A3               	bsf	4003,0,c	;volatile
  1902                           
  1903                           ;unmc_rtcc_01.c: 27: segundo_d=segundo/10;
  1904  000F0C  C029  F033         	movff	_segundo,___awdiv@dividend
  1905  000F10  C02A  F034         	movff	_segundo+1,___awdiv@dividend+1
  1906  000F14  0E00               	movlw	0
  1907  000F16  6E36               	movwf	___awdiv@divisor+1,c
  1908  000F18  0E0A               	movlw	10
  1909  000F1A  6E35               	movwf	___awdiv@divisor,c
  1910  000F1C  EC26  F00A         	call	___awdiv	;wreg free
  1911  000F20  5033               	movf	?___awdiv,w,c
  1912  000F22  6E51               	movwf	_segundo_d,c
  1913                           
  1914                           ;unmc_rtcc_01.c: 28: segundo_u=segundo-segundo_d*10;
  1915  000F24  5051               	movf	_segundo_d,w,c
  1916  000F26  0D0A               	mullw	10
  1917  000F28  50F3               	movf	prodl,w,c
  1918  000F2A  0800               	sublw	0
  1919  000F2C  2429               	addwf	_segundo,w,c
  1920  000F2E  6E52               	movwf	_segundo_u,c
  1921                           
  1922                           ;unmc_rtcc_01.c: 29: RtccTime.f.sec =segundo_d*16+segundo_u;
  1923  000F30  5051               	movf	_segundo_d,w,c
  1924  000F32  0D10               	mullw	16
  1925  000F34  50F3               	movf	prodl,w,c
  1926  000F36  2452               	addwf	_segundo_u,w,c
  1927  000F38  6E30               	movwf	_RtccTime+1,c
  1928                           
  1929                           ;unmc_rtcc_01.c: 30: minuto_d=minuto/10;
  1930  000F3A  C05D  F033         	movff	_minuto,___awdiv@dividend
  1931  000F3E  C05E  F034         	movff	_minuto+1,___awdiv@dividend+1
  1932  000F42  0E00               	movlw	0
  1933  000F44  6E36               	movwf	___awdiv@divisor+1,c
  1934  000F46  0E0A               	movlw	10
  1935  000F48  6E35               	movwf	___awdiv@divisor,c
  1936  000F4A  EC26  F00A         	call	___awdiv	;wreg free
  1937  000F4E  5033               	movf	?___awdiv,w,c
  1938  000F50  6E4F               	movwf	_minuto_d,c
  1939                           
  1940                           ;unmc_rtcc_01.c: 31: minuto_u=minuto-minuto_d*10;
  1941  000F52  504F               	movf	_minuto_d,w,c
  1942  000F54  0D0A               	mullw	10
  1943  000F56  50F3               	movf	prodl,w,c
  1944  000F58  0800               	sublw	0
  1945  000F5A  245D               	addwf	_minuto,w,c
  1946  000F5C  6E50               	movwf	_minuto_u,c
  1947                           
  1948                           ;unmc_rtcc_01.c: 32: RtccTime.f.min =minuto_d*16+minuto_u;
  1949  000F5E  504F               	movf	_minuto_d,w,c
  1950  000F60  0D10               	mullw	16
  1951  000F62  50F3               	movf	prodl,w,c
  1952  000F64  2450               	addwf	_minuto_u,w,c
  1953  000F66  6E31               	movwf	_RtccTime+2,c
  1954                           
  1955                           ;unmc_rtcc_01.c: 33: hora_d=hora/10;
  1956  000F68  C059  F033         	movff	_hora,___awdiv@dividend
  1957  000F6C  C05A  F034         	movff	_hora+1,___awdiv@dividend+1
  1958  000F70  0E00               	movlw	0
  1959  000F72  6E36               	movwf	___awdiv@divisor+1,c
  1960  000F74  0E0A               	movlw	10
  1961  000F76  6E35               	movwf	___awdiv@divisor,c
  1962  000F78  EC26  F00A         	call	___awdiv	;wreg free
  1963  000F7C  5033               	movf	?___awdiv,w,c
  1964  000F7E  6E4B               	movwf	_hora_d,c
  1965                           
  1966                           ;unmc_rtcc_01.c: 34: hora_u=hora-hora_d*10;
  1967  000F80  504B               	movf	_hora_d,w,c
  1968  000F82  0D0A               	mullw	10
  1969  000F84  50F3               	movf	prodl,w,c
  1970  000F86  0800               	sublw	0
  1971  000F88  2459               	addwf	_hora,w,c
  1972  000F8A  6E4C               	movwf	_hora_u,c
  1973                           
  1974                           ;unmc_rtcc_01.c: 35: RtccTime.f.hour=hora_d*16+hora_u;
  1975  000F8C  504B               	movf	_hora_d,w,c
  1976  000F8E  0D10               	mullw	16
  1977  000F90  50F3               	movf	prodl,w,c
  1978  000F92  244C               	addwf	_hora_u,w,c
  1979  000F94  6E32               	movwf	_RtccTime+3,c
  1980                           
  1981                           ;unmc_rtcc_01.c: 36: anio_d=anio/10;
  1982  000F96  C053  F033         	movff	_anio,___awdiv@dividend
  1983  000F9A  C054  F034         	movff	_anio+1,___awdiv@dividend+1
  1984  000F9E  0E00               	movlw	0
  1985  000FA0  6E36               	movwf	___awdiv@divisor+1,c
  1986  000FA2  0E0A               	movlw	10
  1987  000FA4  6E35               	movwf	___awdiv@divisor,c
  1988  000FA6  EC26  F00A         	call	___awdiv	;wreg free
  1989  000FAA  5033               	movf	?___awdiv,w,c
  1990  000FAC  6E46               	movwf	_anio_d,c
  1991                           
  1992                           ;unmc_rtcc_01.c: 37: anio_u=anio-anio_d*10;
  1993  000FAE  5046               	movf	_anio_d,w,c
  1994  000FB0  0D0A               	mullw	10
  1995  000FB2  50F3               	movf	prodl,w,c
  1996  000FB4  0800               	sublw	0
  1997  000FB6  2453               	addwf	_anio,w,c
  1998  000FB8  6E47               	movwf	_anio_u,c
  1999                           
  2000                           ;unmc_rtcc_01.c: 38: RtccDate.f.year=anio_d*16+anio_u;
  2001  000FBA  5046               	movf	_anio_d,w,c
  2002  000FBC  0D10               	mullw	16
  2003  000FBE  50F3               	movf	prodl,w,c
  2004  000FC0  2447               	addwf	_anio_u,w,c
  2005  000FC2  6E2E               	movwf	_RtccDate+3,c
  2006                           
  2007                           ;unmc_rtcc_01.c: 39: mes_d=mes/10;
  2008  000FC4  C05B  F033         	movff	_mes,___awdiv@dividend
  2009  000FC8  C05C  F034         	movff	_mes+1,___awdiv@dividend+1
  2010  000FCC  0E00               	movlw	0
  2011  000FCE  6E36               	movwf	___awdiv@divisor+1,c
  2012  000FD0  0E0A               	movlw	10
  2013  000FD2  6E35               	movwf	___awdiv@divisor,c
  2014  000FD4  EC26  F00A         	call	___awdiv	;wreg free
  2015  000FD8  5033               	movf	?___awdiv,w,c
  2016  000FDA  6E4D               	movwf	_mes_d,c
  2017                           
  2018                           ;unmc_rtcc_01.c: 40: mes_u=mes-mes_d*10;
  2019  000FDC  504D               	movf	_mes_d,w,c
  2020  000FDE  0D0A               	mullw	10
  2021  000FE0  50F3               	movf	prodl,w,c
  2022  000FE2  0800               	sublw	0
  2023  000FE4  245B               	addwf	_mes,w,c
  2024  000FE6  6E4E               	movwf	_mes_u,c
  2025                           
  2026                           ;unmc_rtcc_01.c: 41: RtccDate.f.mon=mes_d*16+mes_u;
  2027  000FE8  504D               	movf	_mes_d,w,c
  2028  000FEA  0D10               	mullw	16
  2029  000FEC  50F3               	movf	prodl,w,c
  2030  000FEE  244E               	addwf	_mes_u,w,c
  2031  000FF0  6E2D               	movwf	_RtccDate+2,c
  2032                           
  2033                           ;unmc_rtcc_01.c: 42: fecha_d=dia/10;
  2034  000FF2  C055  F033         	movff	_dia,___awdiv@dividend
  2035  000FF6  C056  F034         	movff	_dia+1,___awdiv@dividend+1
  2036  000FFA  0E00               	movlw	0
  2037  000FFC  6E36               	movwf	___awdiv@divisor+1,c
  2038  000FFE  0E0A               	movlw	10
  2039  001000  6E35               	movwf	___awdiv@divisor,c
  2040  001002  EC26  F00A         	call	___awdiv	;wreg free
  2041  001006  5033               	movf	?___awdiv,w,c
  2042  001008  6E49               	movwf	_fecha_d,c
  2043                           
  2044                           ;unmc_rtcc_01.c: 43: fecha_u=dia-fecha_d*10;
  2045  00100A  5049               	movf	_fecha_d,w,c
  2046  00100C  0D0A               	mullw	10
  2047  00100E  50F3               	movf	prodl,w,c
  2048  001010  0800               	sublw	0
  2049  001012  2455               	addwf	_dia,w,c
  2050  001014  6E4A               	movwf	_fecha_u,c
  2051                           
  2052                           ;unmc_rtcc_01.c: 44: RtccDate.f.mday=fecha_d*16+fecha_u;
  2053  001016  5049               	movf	_fecha_d,w,c
  2054  001018  0D10               	mullw	16
  2055  00101A  50F3               	movf	prodl,w,c
  2056  00101C  244A               	addwf	_fecha_u,w,c
  2057  00101E  6E2C               	movwf	_RtccDate+1,c
  2058                           
  2059                           ;unmc_rtcc_01.c: 45: dia_semana=diasem;
  2060  001020  C057  F048         	movff	_diasem,_dia_semana
  2061                           
  2062                           ;unmc_rtcc_01.c: 46: RtccDate.f.wday =diasem;
  2063  001024  C057  F02B         	movff	_diasem,_RtccDate
  2064                           
  2065                           ;unmc_rtcc_01.c: 47: RtccWriteTime(&RtccTime,1);
  2066  001028  0E2F               	movlw	low _RtccTime
  2067  00102A  6E33               	movwf	RtccWriteTime@pTm,c
  2068  00102C  0E00               	movlw	high _RtccTime
  2069  00102E  6E34               	movwf	RtccWriteTime@pTm+1,c
  2070  001030  0E01               	movlw	1
  2071  001032  6E35               	movwf	RtccWriteTime@di,c
  2072  001034  ECCA  F008         	call	_RtccWriteTime	;wreg free
  2073                           
  2074                           ;unmc_rtcc_01.c: 48: RtccWriteDate(&RtccDate,1);
  2075  001038  0E2B               	movlw	low _RtccDate
  2076  00103A  6E33               	movwf	RtccWriteDate@pDt,c
  2077  00103C  0E00               	movlw	high _RtccDate
  2078  00103E  6E34               	movwf	RtccWriteDate@pDt+1,c
  2079  001040  0E01               	movlw	1
  2080  001042  6E35               	movwf	RtccWriteDate@di,c
  2081  001044  EC27  F008         	call	_RtccWriteDate	;wreg free
  2082                           
  2083                           ;unmc_rtcc_01.c: 49: (RTCCFGbits.RTCEN=1);
  2084  001048  010F               	movlb	15	; () banked
  2085  00104A  8F3F               	bsf	63,7,b	;volatile
  2086                           
  2087                           ; BSR set to: 15
  2088  00104C  0012               	return		;funcret
  2089  00104E                     __end_of_Write_RTC:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1l	equ	0xFE1
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function ___awdiv *****************
  2104 ;; Defined at:
  2105 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  dividend        2    0[COMRAM] int 
  2108 ;;  divisor         2    2[COMRAM] int 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  quotient        2    6[COMRAM] int 
  2111 ;;  sign            1    5[COMRAM] unsigned char 
  2112 ;;  counter         1    4[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2    0[COMRAM] int 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;Total ram usage:        8 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_Write_RTC
  2132 ;;		_write
  2133 ;;		__delay_s
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text14
  2138  00144C                     __ptext14:
  2139                           	opt stack 0
  2140  00144C                     ___awdiv:
  2141                           	opt stack 29
  2142                           
  2143                           ; BSR set to: 15
  2144                           ;incstack = 0
  2145  00144C  0E00               	movlw	0
  2146  00144E  6E38               	movwf	___awdiv@sign,c
  2147  001450  AE36               	btfss	___awdiv@divisor+1,7,c
  2148  001452  D007               	goto	l1777
  2149  001454  6C35               	negf	___awdiv@divisor,c
  2150  001456  1E36               	comf	___awdiv@divisor+1,f,c
  2151  001458  B0D8               	btfsc	status,0,c
  2152  00145A  2A36               	incf	___awdiv@divisor+1,f,c
  2153  00145C  0E01               	movlw	1
  2154  00145E  6E38               	movwf	___awdiv@sign,c
  2155  001460  D000               	goto	l1777
  2156  001462                     l1777:
  2157  001462  AE34               	btfss	___awdiv@dividend+1,7,c
  2158  001464  D007               	goto	l1783
  2159  001466  6C33               	negf	___awdiv@dividend,c
  2160  001468  1E34               	comf	___awdiv@dividend+1,f,c
  2161  00146A  B0D8               	btfsc	status,0,c
  2162  00146C  2A34               	incf	___awdiv@dividend+1,f,c
  2163  00146E  0E01               	movlw	1
  2164  001470  1A38               	xorwf	___awdiv@sign,f,c
  2165  001472  D000               	goto	l1783
  2166  001474                     l1783:
  2167  001474  0E00               	movlw	0
  2168  001476  6E3A               	movwf	___awdiv@quotient+1,c
  2169  001478  0E00               	movlw	0
  2170  00147A  6E39               	movwf	___awdiv@quotient,c
  2171  00147C  5035               	movf	___awdiv@divisor,w,c
  2172  00147E  1036               	iorwf	___awdiv@divisor+1,w,c
  2173  001480  B4D8               	btfsc	status,2,c
  2174  001482  D021               	goto	l1805
  2175  001484  0E01               	movlw	1
  2176  001486  6E37               	movwf	___awdiv@counter,c
  2177  001488  D005               	goto	l1791
  2178  00148A                     l1789:
  2179  00148A  90D8               	bcf	status,0,c
  2180  00148C  3635               	rlcf	___awdiv@divisor,f,c
  2181  00148E  3636               	rlcf	___awdiv@divisor+1,f,c
  2182  001490  2A37               	incf	___awdiv@counter,f,c
  2183  001492  D000               	goto	l1791
  2184  001494                     l1791:
  2185  001494  BE36               	btfsc	___awdiv@divisor+1,7,c
  2186  001496  D002               	goto	l1793
  2187  001498  D7F8               	goto	l1789
  2188  00149A  D000               	goto	l1793
  2189  00149C                     l1793:
  2190  00149C  90D8               	bcf	status,0,c
  2191  00149E  3639               	rlcf	___awdiv@quotient,f,c
  2192  0014A0  363A               	rlcf	___awdiv@quotient+1,f,c
  2193  0014A2  5035               	movf	___awdiv@divisor,w,c
  2194  0014A4  5C33               	subwf	___awdiv@dividend,w,c
  2195  0014A6  5036               	movf	___awdiv@divisor+1,w,c
  2196  0014A8  5834               	subwfb	___awdiv@dividend+1,w,c
  2197  0014AA  A0D8               	btfss	status,0,c
  2198  0014AC  D006               	goto	l1801
  2199  0014AE  5035               	movf	___awdiv@divisor,w,c
  2200  0014B0  5E33               	subwf	___awdiv@dividend,f,c
  2201  0014B2  5036               	movf	___awdiv@divisor+1,w,c
  2202  0014B4  5A34               	subwfb	___awdiv@dividend+1,f,c
  2203  0014B6  8039               	bsf	___awdiv@quotient,0,c
  2204  0014B8  D000               	goto	l1801
  2205  0014BA                     l1801:
  2206  0014BA  90D8               	bcf	status,0,c
  2207  0014BC  3236               	rrcf	___awdiv@divisor+1,f,c
  2208  0014BE  3235               	rrcf	___awdiv@divisor,f,c
  2209  0014C0  2E37               	decfsz	___awdiv@counter,f,c
  2210  0014C2  D7EC               	goto	l1793
  2211  0014C4  D000               	goto	l1805
  2212  0014C6                     l1805:
  2213  0014C6  5038               	movf	___awdiv@sign,w,c
  2214  0014C8  B4D8               	btfsc	status,2,c
  2215  0014CA  D005               	goto	l1809
  2216  0014CC  6C39               	negf	___awdiv@quotient,c
  2217  0014CE  1E3A               	comf	___awdiv@quotient+1,f,c
  2218  0014D0  B0D8               	btfsc	status,0,c
  2219  0014D2  2A3A               	incf	___awdiv@quotient+1,f,c
  2220  0014D4  D000               	goto	l1809
  2221  0014D6                     l1809:
  2222  0014D6  C039  F033         	movff	___awdiv@quotient,?___awdiv
  2223  0014DA  C03A  F034         	movff	___awdiv@quotient+1,?___awdiv+1
  2224  0014DE  0012               	return	
  2225  0014E0  0012               	return		;funcret
  2226  0014E2                     __end_of___awdiv:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           prodh	equ	0xFF4
  2233                           prodl	equ	0xFF3
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           postdec1	equ	0xFE5
  2237                           fsr1l	equ	0xFE1
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _RtccWriteTime *****************
  2241 ;; Defined at:
  2242 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  pTm             2    0[COMRAM] PTR const struct .
  2245 ;;		 -> RtccTime(4), 
  2246 ;;  di              1    2[COMRAM] enum E7121
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  tempHourWDay    2    9[COMRAM] struct .
  2249 ;;  tempMinSec      2    7[COMRAM] struct .
  2250 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2251 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2252 ;;  wasOn           1    4[COMRAM] enum E7121
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      enum E7121
  2255 ;; Registers used:
  2256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2262 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;Total ram usage:       11 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		_RtccWrOn
  2271 ;; This function is called by:
  2272 ;;		_Write_RTC
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text15
  2277  001194                     __ptext15:
  2278                           	opt stack 0
  2279  001194                     _RtccWriteTime:
  2280                           	opt stack 27
  2281                           
  2282                           ;incstack = 0
  2283  001194  0E00               	movlw	0
  2284  001196  6E38               	movwf	RtccWriteTime@wasAlrm,c
  2285  001198  EE20 F002          	lfsr	2,2
  2286  00119C  5033               	movf	RtccWriteTime@pTm,w,c
  2287  00119E  26D9               	addwf	fsr2l,f,c
  2288  0011A0  5034               	movf	RtccWriteTime@pTm+1,w,c
  2289  0011A2  22DA               	addwfc	fsr2h,f,c
  2290  0011A4  0E5A               	movlw	90
  2291  0011A6  60DF               	cpfslt	indf2,c
  2292  0011A8  0012               	return	
  2293  0011AA  EE20 F001          	lfsr	2,1
  2294  0011AE  5033               	movf	RtccWriteTime@pTm,w,c
  2295  0011B0  26D9               	addwf	fsr2l,f,c
  2296  0011B2  5034               	movf	RtccWriteTime@pTm+1,w,c
  2297  0011B4  22DA               	addwfc	fsr2h,f,c
  2298  0011B6  0E5A               	movlw	90
  2299  0011B8  60DF               	cpfslt	indf2,c
  2300  0011BA  0012               	return	
  2301  0011BC  EE20 F003          	lfsr	2,3
  2302  0011C0  5033               	movf	RtccWriteTime@pTm,w,c
  2303  0011C2  26D9               	addwf	fsr2l,f,c
  2304  0011C4  5034               	movf	RtccWriteTime@pTm+1,w,c
  2305  0011C6  22DA               	addwfc	fsr2h,f,c
  2306  0011C8  0E24               	movlw	36
  2307  0011CA  64DF               	cpfsgt	indf2,c
  2308  0011CC  D002               	goto	l1631
  2309  0011CE  0012               	return	
  2310                           
  2311                           ;	Return value of _RtccWriteTime is never used
  2312  0011D0  0012               	return	
  2313  0011D2                     l1631:
  2314  0011D2  EE20 F002          	lfsr	2,2
  2315  0011D6  5033               	movf	RtccWriteTime@pTm,w,c
  2316  0011D8  26D9               	addwf	fsr2l,f,c
  2317  0011DA  5034               	movf	RtccWriteTime@pTm+1,w,c
  2318  0011DC  22DA               	addwfc	fsr2h,f,c
  2319  0011DE  50DF               	movf	indf2,w,c
  2320  0011E0  6E3B               	movwf	RtccWriteTime@tempMinSec+1,c
  2321  0011E2  EE20 F001          	lfsr	2,1
  2322  0011E6  5033               	movf	RtccWriteTime@pTm,w,c
  2323  0011E8  26D9               	addwf	fsr2l,f,c
  2324  0011EA  5034               	movf	RtccWriteTime@pTm+1,w,c
  2325  0011EC  22DA               	addwfc	fsr2h,f,c
  2326  0011EE  50DF               	movf	indf2,w,c
  2327  0011F0  6E3A               	movwf	RtccWriteTime@tempMinSec,c
  2328  0011F2  5035               	movf	RtccWriteTime@di,w,c
  2329  0011F4  B4D8               	btfsc	status,2,c
  2330  0011F6  D002               	goto	l1637
  2331  0011F8  9CF2               	bcf	intcon,6,c	;volatile
  2332  0011FA  D000               	goto	l1637
  2333  0011FC                     l1637:
  2334  0011FC  0E00               	movlw	0
  2335  0011FE  BB3F               	btfsc	63,5,b	;volatile
  2336  001200  0E01               	movlw	1
  2337  001202  6E39               	movwf	RtccWriteTime@wasWrEn,c
  2338  001204  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2339  001206  A4D8               	btfss	status,2,c
  2340  001208  D003               	goto	l1641
  2341  00120A  EC9C  F00B         	call	_RtccWrOn	;wreg free
  2342  00120E  D000               	goto	l1641
  2343  001210                     l1641:
  2344  001210  0E00               	movlw	0
  2345  001212  BF3F               	btfsc	63,7,b	;volatile
  2346  001214  0E01               	movlw	1
  2347  001216  6E37               	movwf	RtccWriteTime@wasOn,c
  2348  001218  5037               	movf	RtccWriteTime@wasOn,w,c
  2349  00121A  B4D8               	btfsc	status,2,c
  2350  00121C  D007               	goto	l1647
  2351  00121E  0E00               	movlw	0
  2352  001220  BE91               	btfsc	3985,7,c	;volatile
  2353  001222  0E01               	movlw	1
  2354  001224  6E38               	movwf	RtccWriteTime@wasAlrm,c
  2355  001226  010F               	movlb	15	; () banked
  2356  001228  9F3F               	bcf	63,7,b	;volatile
  2357  00122A  D000               	goto	l1647
  2358  00122C                     l1647:
  2359  00122C  0EFC               	movlw	252
  2360  00122E  010F               	movlb	15	; () banked
  2361  001230  173F               	andwf	63,f,b	;volatile
  2362  001232  010F               	movlb	15	; () banked
  2363  001234  813F               	bsf	63,0,b	;volatile
  2364                           
  2365                           ; BSR set to: 15
  2366  001236  CF98 F03C          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2367                           
  2368                           ; BSR set to: 15
  2369  00123A  CF99 F03D          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2370                           
  2371                           ; BSR set to: 15
  2372  00123E  EE20 F003          	lfsr	2,3
  2373  001242  5033               	movf	RtccWriteTime@pTm,w,c
  2374  001244  26D9               	addwf	fsr2l,f,c
  2375  001246  5034               	movf	RtccWriteTime@pTm+1,w,c
  2376  001248  22DA               	addwfc	fsr2h,f,c
  2377  00124A  50DF               	movf	indf2,w,c
  2378  00124C  6E3C               	movwf	RtccWriteTime@tempHourWDay,c
  2379                           
  2380                           ; BSR set to: 15
  2381  00124E  0EFC               	movlw	252
  2382  001250  010F               	movlb	15	; () banked
  2383  001252  173F               	andwf	63,f,b	;volatile
  2384                           
  2385                           ; BSR set to: 15
  2386  001254  010F               	movlb	15	; () banked
  2387  001256  813F               	bsf	63,0,b	;volatile
  2388                           
  2389                           ; BSR set to: 15
  2390  001258  C03C  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2391                           
  2392                           ; BSR set to: 15
  2393  00125C  C03D  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2394                           
  2395                           ; BSR set to: 15
  2396  001260  C03A  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2397                           
  2398                           ; BSR set to: 15
  2399  001264  C03B  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2400                           
  2401                           ; BSR set to: 15
  2402  001268  5037               	movf	RtccWriteTime@wasOn,w,c
  2403  00126A  B4D8               	btfsc	status,2,c
  2404  00126C  D00D               	goto	l1679
  2405                           
  2406                           ; BSR set to: 15
  2407  00126E  010F               	movlb	15	; () banked
  2408  001270  8F3F               	bsf	63,7,b	;volatile
  2409                           
  2410                           ; BSR set to: 15
  2411  001272  5038               	movf	RtccWriteTime@wasAlrm,w,c
  2412  001274  B4D8               	btfsc	status,2,c
  2413  001276  D002               	goto	l1675
  2414                           
  2415                           ; BSR set to: 15
  2416  001278  8E91               	bsf	3985,7,c	;volatile
  2417  00127A  D000               	goto	l1675
  2418  00127C                     l1675:
  2419                           
  2420                           ; BSR set to: 15
  2421  00127C  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2422  00127E  B4D8               	btfsc	status,2,c
  2423  001280  D009               	goto	l1683
  2424                           
  2425                           ; BSR set to: 15
  2426  001282  EC9C  F00B         	call	_RtccWrOn	;wreg free
  2427  001286  D006               	goto	l1683
  2428  001288                     l1679:
  2429  001288  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2430  00128A  A4D8               	btfss	status,2,c
  2431  00128C  D003               	goto	l1683
  2432  00128E  010F               	movlb	15	; () banked
  2433  001290  9B3F               	bcf	63,5,b	;volatile
  2434                           
  2435                           ; BSR set to: 15
  2436  001292  D000               	goto	l1683
  2437  001294                     l1683:
  2438  001294  5035               	movf	RtccWriteTime@di,w,c
  2439  001296  B4D8               	btfsc	status,2,c
  2440  001298  0012               	return	
  2441  00129A  8CF2               	bsf	intcon,6,c	;volatile
  2442  00129C  0012               	return	
  2443                           
  2444                           ;	Return value of _RtccWriteTime is never used
  2445  00129E  0012               	return		;funcret
  2446  0012A0                     __end_of_RtccWriteTime:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           postdec1	equ	0xFE5
  2458                           fsr1l	equ	0xFE1
  2459                           indf2	equ	0xFDF
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _RtccWriteDate *****************
  2465 ;; Defined at:
  2466 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  pDt             2    0[COMRAM] PTR const struct .
  2469 ;;		 -> RtccDate(4), 
  2470 ;;  di              1    2[COMRAM] enum E7121
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  tempHourWDay    2   11[COMRAM] struct .
  2473 ;;  tempDayMonth    2    9[COMRAM] struct .
  2474 ;;  tempYear        2    6[COMRAM] struct .
  2475 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2476 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2477 ;;  wasOn           1    4[COMRAM] enum E7121
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      enum E7121
  2480 ;; Registers used:
  2481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2487 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;Total ram usage:       13 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    1
  2494 ;; This function calls:
  2495 ;;		_RtccWrOn
  2496 ;; This function is called by:
  2497 ;;		_Write_RTC
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text16
  2502  00104E                     __ptext16:
  2503                           	opt stack 0
  2504  00104E                     _RtccWriteDate:
  2505                           	opt stack 27
  2506                           
  2507                           ;incstack = 0
  2508  00104E  0E00               	movlw	0
  2509  001050  6E38               	movwf	RtccWriteDate@wasAlrm,c
  2510  001052  EE20 F002          	lfsr	2,2
  2511  001056  5033               	movf	RtccWriteDate@pDt,w,c
  2512  001058  26D9               	addwf	fsr2l,f,c
  2513  00105A  5034               	movf	RtccWriteDate@pDt+1,w,c
  2514  00105C  22DA               	addwfc	fsr2h,f,c
  2515  00105E  0E13               	movlw	19
  2516  001060  60DF               	cpfslt	indf2,c
  2517  001062  0012               	return	
  2518  001064  EE20 F002          	lfsr	2,2
  2519  001068  5033               	movf	RtccWriteDate@pDt,w,c
  2520  00106A  26D9               	addwf	fsr2l,f,c
  2521  00106C  5034               	movf	RtccWriteDate@pDt+1,w,c
  2522  00106E  22DA               	addwfc	fsr2h,f,c
  2523  001070  50DF               	movf	indf2,w,c
  2524  001072  B4D8               	btfsc	status,2,c
  2525  001074  0012               	return	
  2526  001076  EE20 F001          	lfsr	2,1
  2527  00107A  5033               	movf	RtccWriteDate@pDt,w,c
  2528  00107C  26D9               	addwf	fsr2l,f,c
  2529  00107E  5034               	movf	RtccWriteDate@pDt+1,w,c
  2530  001080  22DA               	addwfc	fsr2h,f,c
  2531  001082  0E32               	movlw	50
  2532  001084  60DF               	cpfslt	indf2,c
  2533  001086  0012               	return	
  2534  001088  EE20 F001          	lfsr	2,1
  2535  00108C  5033               	movf	RtccWriteDate@pDt,w,c
  2536  00108E  26D9               	addwf	fsr2l,f,c
  2537  001090  5034               	movf	RtccWriteDate@pDt+1,w,c
  2538  001092  22DA               	addwfc	fsr2h,f,c
  2539  001094  50DF               	movf	indf2,w,c
  2540  001096  B4D8               	btfsc	status,2,c
  2541  001098  0012               	return	
  2542  00109A  EE20 F003          	lfsr	2,3
  2543  00109E  5033               	movf	RtccWriteDate@pDt,w,c
  2544  0010A0  26D9               	addwf	fsr2l,f,c
  2545  0010A2  5034               	movf	RtccWriteDate@pDt+1,w,c
  2546  0010A4  22DA               	addwfc	fsr2h,f,c
  2547  0010A6  0E99               	movlw	153
  2548  0010A8  64DF               	cpfsgt	indf2,c
  2549  0010AA  D002               	goto	l1699
  2550  0010AC  0012               	return	
  2551                           
  2552                           ;	Return value of _RtccWriteDate is never used
  2553  0010AE  0012               	return	
  2554  0010B0                     l1699:
  2555  0010B0  EE20 F003          	lfsr	2,3
  2556  0010B4  5033               	movf	RtccWriteDate@pDt,w,c
  2557  0010B6  26D9               	addwf	fsr2l,f,c
  2558  0010B8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2559  0010BA  22DA               	addwfc	fsr2h,f,c
  2560  0010BC  50DF               	movf	indf2,w,c
  2561  0010BE  6E39               	movwf	RtccWriteDate@tempYear,c
  2562  0010C0  EE20 F001          	lfsr	2,1
  2563  0010C4  5033               	movf	RtccWriteDate@pDt,w,c
  2564  0010C6  26D9               	addwf	fsr2l,f,c
  2565  0010C8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2566  0010CA  22DA               	addwfc	fsr2h,f,c
  2567  0010CC  50DF               	movf	indf2,w,c
  2568  0010CE  6E3C               	movwf	RtccWriteDate@tempDayMonth,c
  2569  0010D0  EE20 F002          	lfsr	2,2
  2570  0010D4  5033               	movf	RtccWriteDate@pDt,w,c
  2571  0010D6  26D9               	addwf	fsr2l,f,c
  2572  0010D8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2573  0010DA  22DA               	addwfc	fsr2h,f,c
  2574  0010DC  50DF               	movf	indf2,w,c
  2575  0010DE  6E3D               	movwf	RtccWriteDate@tempDayMonth+1,c
  2576  0010E0  5035               	movf	RtccWriteDate@di,w,c
  2577  0010E2  B4D8               	btfsc	status,2,c
  2578  0010E4  D002               	goto	l1705
  2579  0010E6  9CF2               	bcf	intcon,6,c	;volatile
  2580  0010E8  D000               	goto	l1705
  2581  0010EA                     l1705:
  2582  0010EA  0E00               	movlw	0
  2583  0010EC  BB3F               	btfsc	63,5,b	;volatile
  2584  0010EE  0E01               	movlw	1
  2585  0010F0  6E3B               	movwf	RtccWriteDate@wasWrEn,c
  2586  0010F2  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2587  0010F4  A4D8               	btfss	status,2,c
  2588  0010F6  D003               	goto	l1709
  2589  0010F8  EC9C  F00B         	call	_RtccWrOn	;wreg free
  2590  0010FC  D000               	goto	l1709
  2591  0010FE                     l1709:
  2592  0010FE  0E00               	movlw	0
  2593  001100  BF3F               	btfsc	63,7,b	;volatile
  2594  001102  0E01               	movlw	1
  2595  001104  6E37               	movwf	RtccWriteDate@wasOn,c
  2596  001106  5037               	movf	RtccWriteDate@wasOn,w,c
  2597  001108  B4D8               	btfsc	status,2,c
  2598  00110A  D007               	goto	l1715
  2599  00110C  0E00               	movlw	0
  2600  00110E  BE91               	btfsc	3985,7,c	;volatile
  2601  001110  0E01               	movlw	1
  2602  001112  6E38               	movwf	RtccWriteDate@wasAlrm,c
  2603  001114  010F               	movlb	15	; () banked
  2604  001116  9F3F               	bcf	63,7,b	;volatile
  2605  001118  D000               	goto	l1715
  2606  00111A                     l1715:
  2607  00111A  0EFC               	movlw	252
  2608  00111C  010F               	movlb	15	; () banked
  2609  00111E  173F               	andwf	63,f,b	;volatile
  2610  001120  010F               	movlb	15	; () banked
  2611  001122  813F               	bsf	63,0,b	;volatile
  2612                           
  2613                           ; BSR set to: 15
  2614  001124  CF98 F03E          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617  001128  CF99 F03F          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620  00112C  C033  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2621  001130  C034  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2622  001134  50DF               	movf	indf2,w,c
  2623  001136  6E3F               	movwf	RtccWriteDate@tempHourWDay+1,c
  2624                           
  2625                           ; BSR set to: 15
  2626  001138  0EFC               	movlw	252
  2627  00113A  010F               	movlb	15	; () banked
  2628  00113C  173F               	andwf	63,f,b	;volatile
  2629                           
  2630                           ; BSR set to: 15
  2631  00113E  0E03               	movlw	3
  2632  001140  010F               	movlb	15	; () banked
  2633  001142  133F               	iorwf	63,f,b	;volatile
  2634                           
  2635                           ; BSR set to: 15
  2636  001144  C039  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2637                           
  2638                           ; BSR set to: 15
  2639  001148  C03A  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2640                           
  2641                           ; BSR set to: 15
  2642  00114C  C03C  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2643                           
  2644                           ; BSR set to: 15
  2645  001150  C03D  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  2646                           
  2647                           ; BSR set to: 15
  2648  001154  C03E  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  2649                           
  2650                           ; BSR set to: 15
  2651  001158  C03F  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  2652                           
  2653                           ; BSR set to: 15
  2654  00115C  5037               	movf	RtccWriteDate@wasOn,w,c
  2655  00115E  B4D8               	btfsc	status,2,c
  2656  001160  D00D               	goto	l1751
  2657                           
  2658                           ; BSR set to: 15
  2659  001162  010F               	movlb	15	; () banked
  2660  001164  8F3F               	bsf	63,7,b	;volatile
  2661                           
  2662                           ; BSR set to: 15
  2663  001166  5038               	movf	RtccWriteDate@wasAlrm,w,c
  2664  001168  B4D8               	btfsc	status,2,c
  2665  00116A  D002               	goto	l1747
  2666                           
  2667                           ; BSR set to: 15
  2668  00116C  8E91               	bsf	3985,7,c	;volatile
  2669  00116E  D000               	goto	l1747
  2670  001170                     l1747:
  2671                           
  2672                           ; BSR set to: 15
  2673  001170  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2674  001172  B4D8               	btfsc	status,2,c
  2675  001174  D009               	goto	l1755
  2676                           
  2677                           ; BSR set to: 15
  2678  001176  EC9C  F00B         	call	_RtccWrOn	;wreg free
  2679  00117A  D006               	goto	l1755
  2680  00117C                     l1751:
  2681  00117C  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2682  00117E  A4D8               	btfss	status,2,c
  2683  001180  D003               	goto	l1755
  2684  001182  010F               	movlb	15	; () banked
  2685  001184  9B3F               	bcf	63,5,b	;volatile
  2686                           
  2687                           ; BSR set to: 15
  2688  001186  D000               	goto	l1755
  2689  001188                     l1755:
  2690  001188  5035               	movf	RtccWriteDate@di,w,c
  2691  00118A  B4D8               	btfsc	status,2,c
  2692  00118C  0012               	return	
  2693  00118E  9CF2               	bcf	intcon,6,c	;volatile
  2694  001190  0012               	return	
  2695                           
  2696                           ;	Return value of _RtccWriteDate is never used
  2697  001192  0012               	return		;funcret
  2698  001194                     __end_of_RtccWriteDate:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           postdec1	equ	0xFE5
  2710                           fsr1l	equ	0xFE1
  2711                           indf2	equ	0xFDF
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _RtccWrOn *****************
  2717 ;; Defined at:
  2718 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  data            2    0        unsigned int 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg, status,2
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_Write_RTC
  2742 ;;		_RtccWriteDate
  2743 ;;		_RtccWriteTime
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text17
  2748  001738                     __ptext17:
  2749                           	opt stack 0
  2750  001738                     _RtccWrOn:
  2751                           	opt stack 27
  2752                           
  2753                           ;incstack = 0
  2754  001738  9CF2               	bcf	intcon,6,c	;volatile
  2755  00173A  0E55               	movlw	85
  2756  00173C  6EA7               	movwf	4007,c	;volatile
  2757  00173E  0EAA               	movlw	170
  2758  001740  6EA7               	movwf	4007,c	;volatile
  2759  001742  010F               	movlb	15	; () banked
  2760  001744  8B3F               	bsf	63,5,b	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763  001746  8CF2               	bsf	intcon,6,c	;volatile
  2764                           
  2765                           ; BSR set to: 15
  2766  001748  0012               	return		;funcret
  2767  00174A                     __end_of_RtccWrOn:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           intcon	equ	0xFF2
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           tblptru	equ	0xFF8
  2785                           tblptrh	equ	0xFF7
  2786                           tblptrl	equ	0xFF6
  2787                           tablat	equ	0xFF5
  2788                           prodh	equ	0xFF4
  2789                           prodl	equ	0xFF3
  2790                           intcon	equ	0xFF2
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           postdec1	equ	0xFE5
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800                           	psect	rparam
  2801  0000                     tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           prodh	equ	0xFF4
  2806                           prodl	equ	0xFF3
  2807                           intcon	equ	0xFF2
  2808                           postinc0	equ	0xFEE
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1l	equ	0xFE1
  2812                           indf2	equ	0xFDF
  2813                           fsr2h	equ	0xFDA
  2814                           fsr2l	equ	0xFD9
  2815                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      95
    BANK0           160      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_write
    _write->___awdiv
    _on_numbers->_on_number
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5577
                                             17 COMRAM     2     2      0
                              _Setup
                           _caratula
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                9     7      2    2219
                                              8 COMRAM     9     7      2
                            ___awdiv
                             ___wmul
                      _clear_Segment
                         _on_numbers
 ---------------------------------------------------------------------------------
 (2) _on_numbers                                           3     0      3     386
                                              4 COMRAM     3     0      3
                          _on_number
 ---------------------------------------------------------------------------------
 (3) _on_number                                            4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clear_Segment                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3311
                          _Write_RTC
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     778
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     589
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2533
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1324
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
   _write
     ___awdiv
     ___wmul
     _clear_Segment
     _on_numbers
       _on_number

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      14       5       12.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     13      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73       6        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 06 20:33:15 2016

                        _a 001D                          _b 001F                          _c 0021  
                        _i 0023                          _j 0025                          _k 0027  
                       u10 156E                         u30 1586                         u50 15A0  
                       u28 1570                         u70 15BC                         u48 1588  
           ?_lcd_send_byte 0035                         u68 15A2                         u88 15BE  
             ___awdiv@sign 0038        ___wmul@multiplicand 0035               __CFG_CP0$OFF 000000  
                      l141 16B6                        l142 16B8                        l360 12B2  
                      l361 12C2                        l362 12D2                        l363 12E2  
                      l364 12F2                        l365 1302                        l366 1312  
                      l358 12A2                        l367 1322                        l375 170C  
                      l368 1332                        u937 13FC                        u947 1420  
                      u957 1718                        u967 172A                        _dia 0055  
                      _mes 005B                        wreg 000FE8                       l1103 1716  
                     l1133 1728                       l1631 11D2                       l1705 10EA  
                     l1641 1210                       l1801 14BA                       l1715 111A  
                     l1709 10FE                       l1637 11FC                       l1805 14C6  
                     l1751 117C                       l1647 122C                       l1809 14D6  
                     l1755 1188                       l1747 1170                       l1683 1294  
                     l1675 127C                       l1763 1342                       l1679 1288  
                     l1791 1494                       l1783 1474                       l1793 149C  
                     l1777 1462                       l1873 1510                       l1945 13E6  
                     l1699 10B0                       l1789 148A                       l1869 1508  
                     l1887 1534                       l1879 1520                       l1959 143A  
                     l1995 1672           ?_lcd_send_nibble 0033                       _anio 0053  
                     _flag 02F8                       _main 165C                       _hora 0059  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_T1DIG$ON 000000                       prodh 000FF4  
                     prodl 000FF3                       start 0000              __CFG_IESO$OFF 000000  
             ___param_bank 000010                _Delay1KTCYx 1726              __CFG_PLLDIV$1 000000  
                    ?_main 0033            __end_of___awdiv 14E2      __size_of_Delay100TCYx 0012  
          ___awdiv@divisor 0035            ___awdiv@counter 0037                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94             __CFG_FCMEN$OFF 000000  
                    _Setup 161C                      _mes_d 004D                      _mes_u 004E  
                    _write 1394             __pbitbssCOMRAM 02F8                      tablat 000FF5  
                    status 000FD8    __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 15D8  
             _Delay100TCYx 1714               __end_of_main 169A            ??_lcd_send_byte 0036  
                   ??_main 0044              __activetblptr 000002           __end_of_RtccWrOn 174A  
    __end_of_clear_Segment 175A                     ?_Setup 0033                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _EECON2 000FA7                     _ANCON0 000F48  
                   _ANCON1 000F49           ___awdiv@dividend 0033                     ?_write 003B  
           __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0033                     _RTCCFG 000F3F  
           __CFG_WPCFG$OFF 000000           __end_of_caratula 1768             __CFG_WPDIS$OFF 000000  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 1562                     ___wmul 16CC  
                ??___awdiv 0037             __CFG_STVREN$ON 000000                     _diasem 0057  
                   _anio_d 0046                     _anio_u 0047                     _hora_d 004B  
                   _hora_u 004C                     clear_0 15DE                     clear_1 15EC  
         ___awdiv@quotient 0039                     _minuto 005D      __end_of_RtccWriteDate 1194  
    __end_of_RtccWriteTime 12A0           RtccWriteTime@pTm 0033               __pdataCOMRAM 0053  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 1612  
       __size_of_Write_RTC 0148              ___rparam_used 000001             __pcstackCOMRAM 0033  
            __end_of_Setup 165C              __end_of_write 144C            __CFG_DSWDTPS$G2 000000  
          __CFG_OSC$INTOSC 000000                    ??_Setup 0040                    ??_write 003D  
               __pbssBANK0 0060                 _dia_semana 0048  RtccWriteTime@tempHourWDay 003C  
               __pnvCOMRAM 0046                  ?_RtccWrOn 0033             lcd_send_byte@n 0035  
                  ?___wmul 0033         __size_of_on_number 00F4               ?_Delay1KTCYx 0033  
        __end_of_Write_RTC 104E                  ?_caratula 0033                    _RTCVALH 000F99  
                  _RTCVALL 000F98                  ?_lcd_init 0033                    __Hparam 0000  
                  __Lparam 0000   __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 0033  
                  ___awdiv 144C            __size_of___wmul 0028               __psmallconst 0F00  
              _RtccTimeVal 0019                    __pcinit 15D8                    _fecha_d 0049  
                  _fecha_u 004A                    __ramtop 0F00                    __ptext0 165C  
                  __ptext1 1394                    __ptext2 16F4                    __ptext3 12A0  
                  __ptext4 174A                    __ptext5 16CC                    __ptext6 1766  
                  __ptext7 161C                    __ptext8 14E2                    __ptext9 169A  
                  _buffer2 0060                  _T1CONbits 000FCD                 ??_caratula 0033  
                  _segundo 0029              on_numbers@uni 0039                 ??_lcd_init 0037  
     end_of_initialization 1612          __end_of_on_number 1394                 _on_numbers 16F4  
     lcd_send_byte@address 0036              __Lmediumconst 0000                    postdec1 000FE5  
                  postinc0 000FEE      __end_of_lcd_send_byte 16CC                  _PORTBbits 000F81  
                _PORTCbits 000F82           __CFG_DSBOREN$OFF 000000           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93           on_numbers@number 0037            _LCD_INIT_STRING 0F01  
         __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 003C        __CFG_MSSP7B_EN$MSK7 000000  
   __size_of_clear_Segment 0010           Delay100TCYx@unit 0033             __end_of___wmul 16F4  
            __pidataCOMRAM 175A  RtccWriteDate@tempHourWDay 003E          ??_lcd_send_nibble 0033  
     __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000        start_initialization 15D8  
              ?_on_numbers 0037       RtccWriteTime@wasAlrm 0038       RtccWriteTime@wasWrEn 0039  
   __size_of_RtccWriteDate 0146            RtccWriteDate@di 0035     __size_of_RtccWriteTime 010C  
                 ??___wmul 0037          __size_of_RtccWrOn 0012            RtccWriteTime@di 0035  
         __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F05  
              __pbssCOMRAM 0001              _clear_Segment 174A                  _Write_RTC 0F06  
        __size_of_caratula 0002            Delay1KTCYx@unit 0033          __size_of_lcd_init 0080  
            ?_Delay100TCYx 0033                   ?___awdiv 0033    RtccWriteTime@tempMinSec 003A  
      __size_of_on_numbers 0020              _RtccWriteDate 104E                __smallconst 0F00  
            _RtccWriteTime 1194       __CFG_RTCOSC$T1OSCREF 000000             ?_clear_Segment 0033  
           __size_of_Setup 0040                 ?_Write_RTC 0033             __size_of_write 00B8  
         _RtccAlrmTimeDate 0001             ___wmul@product 0037                   _LATBbits 000F8A  
          on_number@number 0033                  _on_number 12A0                   _PIE3bits 000FA3  
                _segundo_d 0051             ??_Delay100TCYx 0033                  _segundo_u 0052  
              write@number 003B           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0037  
       _Rtcc_read_TimeDate 0011             ?_RtccWriteDate 0033          ___wmul@multiplier 0033  
           ?_RtccWriteTime 0033                  lcd_init@i 0037                  main@count 0044  
                copy_data0 1606                 ?_on_number 0033            _lcd_send_nibble 1562  
                 __Hrparam 0000                   _RtccDate 002B                   __Lrparam 0000  
                 _RtccTime 002F                   _RtccWrOn 1738           __size_of___awdiv 0096  
          ??_clear_Segment 0033               _RtccTimeDate 0009                   _caratula 1766  
              ??_Write_RTC 0040                   __ptext10 1562                   __ptext11 1714  
                 __ptext12 1726                   __ptext13 0F06                   __ptext14 144C  
                 __ptext15 1194                   __ptext16 104E                   __ptext17 1738  
                 _lcd_init 14E2               ??_on_numbers 003A     __size_of_lcd_send_byte 0032  
            __size_of_main 003E                   _minuto_d 004F                   _minuto_u 0050  
            ??_Delay1KTCYx 0033            ??_RtccWriteDate 0036            ??_RtccWriteTime 0036  
       __end_of_on_numbers 1714                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0037       __end_of_Delay100TCYx 1726    __end_of_lcd_send_nibble 15D8  
              ??_on_number 0035                 _OSCCONbits 000FD3                  write@time 0042  
    RtccWriteDate@tempYear 0039              _lcd_send_byte 169A                 _RTCCFGbits 000F3F  
      __end_of_Delay1KTCYx 1738                   write@dec 0040       RtccWriteDate@wasAlrm 0038  
                 write@uni 003E       RtccWriteDate@wasWrEn 003B      lcd_send_nibble@nibble 0034  
