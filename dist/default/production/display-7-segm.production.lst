

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 11 20:56:11 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001D06                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  001D06  000F               	dw	15
    49                           
    50                           ;initializer for _dia
    51  001D08  0008               	dw	8
    52                           
    53                           ;initializer for _diasem
    54  001D0A  0003               	dw	3
    55                           
    56                           ;initializer for _hora
    57  001D0C  0012               	dw	18
    58                           
    59                           ;initializer for _mes
    60  001D0E  0009               	dw	9
    61                           
    62                           ;initializer for _minuto
    63  001D10  001E               	dw	30
    64                           
    65                           	psect	smallconst
    66  000F00                     __psmallconst:
    67                           	opt stack 0
    68  000F00  00                 	db	0
    69  000F01                     _LCD_INIT_STRING:
    70                           	opt stack 0
    71  000F01  28                 	db	40
    72  000F02  0C                 	db	12
    73  000F03  01                 	db	1
    74  000F04  06                 	db	6
    75  000F05                     __end_of_LCD_INIT_STRING:
    76                           	opt stack 0
    77  000F05  00                 	db	0	; dummy byte at the end
    78  0000                     
    79                           	psect	nvCOMRAM
    80  000059                     __pnvCOMRAM:
    81                           	opt stack 0
    82  000059                     _anio_d:
    83                           	opt stack 0
    84  000059                     	ds	1
    85  00005A                     _fecha_d:
    86                           	opt stack 0
    87  00005A                     	ds	1
    88  00005B                     _hora_d:
    89                           	opt stack 0
    90  00005B                     	ds	1
    91  00005C                     _mes_d:
    92                           	opt stack 0
    93  00005C                     	ds	1
    94  00005D                     _minuto_d:
    95                           	opt stack 0
    96  00005D                     	ds	1
    97  00005E                     _segundo_d:
    98                           	opt stack 0
    99  00005E                     	ds	1
   100                           
   101                           	psect	nvBANK0
   102  00009C                     __pnvBANK0:
   103                           	opt stack 0
   104  00009C                     _anio_u:
   105                           	opt stack 0
   106  00009C                     	ds	1
   107  00009D                     _dia_semana:
   108                           	opt stack 0
   109  00009D                     	ds	1
   110  00009E                     _fecha_u:
   111                           	opt stack 0
   112  00009E                     	ds	1
   113  00009F                     _hora_u:
   114                           	opt stack 0
   115  00009F                     	ds	1
   116  0000A0                     _mes_u:
   117                           	opt stack 0
   118  0000A0                     	ds	1
   119  0000A1                     _minuto_u:
   120                           	opt stack 0
   121  0000A1                     	ds	1
   122  0000A2                     _segundo_u:
   123                           	opt stack 0
   124  0000A2                     	ds	1
   125  0000                     _ANCON0	set	3912
   126  0000                     _ANCON1	set	3913
   127  0000                     _RTCCFG	set	3903
   128  0000                     _RTCCFGbits	set	3903
   129  0000                     _ADCON0	set	4034
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADRESH	set	4036
   133  0000                     _ALRMCFGbits	set	3985
   134  0000                     _EECON2	set	4007
   135  0000                     _INTCONbits	set	4082
   136  0000                     _LATBbits	set	3978
   137  0000                     _OSCCONbits	set	4051
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _PIE3bits	set	4003
   140  0000                     _PORTBbits	set	3969
   141  0000                     _PORTCbits	set	3970
   142  0000                     _RTCVALH	set	3993
   143  0000                     _RTCVALL	set	3992
   144  0000                     _T1CONbits	set	4045
   145  0000                     _TRISA	set	3986
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISBbits	set	3987
   148  0000                     _TRISC	set	3988
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  001B42                     __pcinit:
   154                           	opt stack 0
   155  001B42                     start_initialization:
   156                           	opt stack 0
   157  001B42                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Clear objects allocated to BANK0 (60 bytes)
   161  001B42  EE00  F060         	lfsr	0,__pbssBANK0
   162  001B46  0E3C               	movlw	60
   163  001B48                     clear_0:
   164  001B48  6AEE               	clrf	postinc0,c
   165  001B4A  06E8               	decf	wreg,f,c
   166  001B4C  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   169  001B4E  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   170                           
   171                           ; Clear objects allocated to COMRAM (10 bytes)
   172  001B50  EE00  F04F         	lfsr	0,__pbssCOMRAM
   173  001B54  0E0A               	movlw	10
   174  001B56                     clear_1:
   175  001B56  6AEE               	clrf	postinc0,c
   176  001B58  06E8               	decf	wreg,f,c
   177  001B5A  E1FD               	bnz	clear_1
   178                           
   179                           ; Initialize objects allocated to COMRAM (12 bytes)
   180                           ; load TBLPTR registers with __pidataCOMRAM
   181  001B5C  0E06               	movlw	low __pidataCOMRAM
   182  001B5E  6EF6               	movwf	tblptrl,c
   183  001B60  0E1D               	movlw	high __pidataCOMRAM
   184  001B62  6EF7               	movwf	tblptrh,c
   185  001B64  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   186  001B66  6EF8               	movwf	tblptru,c
   187  001B68  EE00  F043         	lfsr	0,__pdataCOMRAM
   188  001B6C  EE10 F00C          	lfsr	1,12
   189  001B70                     copy_data0:
   190  001B70  0009               	tblrd		*+
   191  001B72  CFF5 FFEE          	movff	tablat,postinc0
   192  001B76  50E5               	movf	postdec1,w,c
   193  001B78  50E1               	movf	fsr1l,w,c
   194  001B7A  E1FA               	bnz	copy_data0
   195  001B7C                     end_of_initialization:
   196                           	opt stack 0
   197  001B7C                     __end_of__initialization:
   198                           	opt stack 0
   199  001B7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  001B7E  6EF8               	movwf	tblptru,c
   201  001B80  0100               	movlb	0
   202  001B82  EFC3  F00D         	goto	_main	;jump to C main() function
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           postdec1	equ	0xFE5
   210                           fsr1l	equ	0xFE1
   211                           
   212                           	psect	bitbssCOMRAM
   213  0002F8                     __pbitbssCOMRAM:
   214                           	opt stack 0
   215  0002F8                     _flag:
   216                           	opt stack 0
   217  0002F8                     	ds	1
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227                           	psect	bssCOMRAM
   228  00004F                     __pbssCOMRAM:
   229                           	opt stack 0
   230  00004F                     _segundo:
   231                           	opt stack 0
   232  00004F                     	ds	2
   233  000051                     _RtccDate:
   234                           	opt stack 0
   235  000051                     	ds	4
   236  000055                     _RtccTime:
   237                           	opt stack 0
   238  000055                     	ds	4
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	dataCOMRAM
   249  000043                     __pdataCOMRAM:
   250                           	opt stack 0
   251  000043                     _anio:
   252                           	opt stack 0
   253  000043                     	ds	2
   254  000045                     _dia:
   255                           	opt stack 0
   256  000045                     	ds	2
   257  000047                     _diasem:
   258                           	opt stack 0
   259  000047                     	ds	2
   260  000049                     _hora:
   261                           	opt stack 0
   262  000049                     	ds	2
   263  00004B                     _mes:
   264                           	opt stack 0
   265  00004B                     	ds	2
   266  00004D                     _minuto:
   267                           	opt stack 0
   268  00004D                     	ds	2
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssBANK0
   279  000060                     __pbssBANK0:
   280                           	opt stack 0
   281  000060                     _buffer2:
   282                           	opt stack 0
   283  000060                     	ds	20
   284  000074                     _RtccAlrmTimeDate:
   285                           	opt stack 0
   286  000074                     	ds	8
   287  00007C                     _RtccTimeDate:
   288                           	opt stack 0
   289  00007C                     	ds	8
   290  000084                     _Rtcc_read_TimeDate:
   291                           	opt stack 0
   292  000084                     	ds	8
   293  00008C                     _RtccTimeVal:
   294                           	opt stack 0
   295  00008C                     	ds	4
   296  000090                     _a:
   297                           	opt stack 0
   298  000090                     	ds	2
   299  000092                     _b:
   300                           	opt stack 0
   301  000092                     	ds	2
   302  000094                     _c:
   303                           	opt stack 0
   304  000094                     	ds	2
   305  000096                     _i:
   306                           	opt stack 0
   307  000096                     	ds	2
   308  000098                     _j:
   309                           	opt stack 0
   310  000098                     	ds	2
   311  00009A                     _k:
   312                           	opt stack 0
   313  00009A                     	ds	2
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt stack 0
   326  000001                     ??_lcd_send_nibble:
   327  000001                     ?___wmul:
   328                           	opt stack 0
   329  000001                     ?___awdiv:
   330                           	opt stack 0
   331  000001                     ?___ftpack:
   332                           	opt stack 0
   333  000001                     Delay100TCYx@unit:
   334                           	opt stack 0
   335  000001                     Delay1KTCYx@unit:
   336                           	opt stack 0
   337  000001                     on_number@number:
   338                           	opt stack 0
   339  000001                     RtccWriteDate@pDt:
   340                           	opt stack 0
   341  000001                     RtccWriteTime@pTm:
   342                           	opt stack 0
   343  000001                     ___wmul@multiplier:
   344                           	opt stack 0
   345  000001                     ___awdiv@dividend:
   346                           	opt stack 0
   347  000001                     ___ftpack@arg:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     lcd_send_nibble@nibble:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x1
   356  000002                     	ds	1
   357  000003                     ??_on_number:
   358  000003                     lcd_send_byte@n:
   359                           	opt stack 0
   360  000003                     RtccWriteDate@di:
   361                           	opt stack 0
   362  000003                     RtccWriteTime@di:
   363                           	opt stack 0
   364  000003                     ___wmul@multiplicand:
   365                           	opt stack 0
   366  000003                     ___awdiv@divisor:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370  000003                     	ds	1
   371  000004                     lcd_send_byte@address:
   372                           	opt stack 0
   373  000004                     ___ftpack@exp:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x3
   377  000004                     	ds	1
   378  000005                     lcd_init@i:
   379                           	opt stack 0
   380  000005                     RtccWriteDate@wasOn:
   381                           	opt stack 0
   382  000005                     RtccWriteTime@wasOn:
   383                           	opt stack 0
   384  000005                     ___awdiv@counter:
   385                           	opt stack 0
   386  000005                     ___ftpack@sign:
   387                           	opt stack 0
   388  000005                     on_numbers@number:
   389                           	opt stack 0
   390  000005                     ___wmul@product:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     ??___ftpack:
   396  000006                     RtccWriteDate@wasAlrm:
   397                           	opt stack 0
   398  000006                     RtccWriteTime@wasAlrm:
   399                           	opt stack 0
   400  000006                     ___awdiv@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404  000006                     	ds	1
   405  000007                     on_numbers@uni:
   406                           	opt stack 0
   407  000007                     RtccWriteTime@wasWrEn:
   408                           	opt stack 0
   409  000007                     RtccWriteDate@tempYear:
   410                           	opt stack 0
   411  000007                     ___awdiv@quotient:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x6
   415  000007                     	ds	1
   416  000008                     RtccWriteTime@tempMinSec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x7
   420  000008                     	ds	1
   421  000009                     ?___awtoft:
   422                           	opt stack 0
   423  000009                     RtccWriteDate@wasWrEn:
   424                           	opt stack 0
   425  000009                     write@number:
   426                           	opt stack 0
   427  000009                     ___awtoft@c:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x8
   431  000009                     	ds	1
   432  00000A                     RtccWriteDate@tempDayMonth:
   433                           	opt stack 0
   434  00000A                     RtccWriteTime@tempHourWDay:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x9
   438  00000A                     	ds	1
   439  00000B                     ??_write:
   440                           
   441                           ; 0 bytes @ 0xA
   442  00000B                     	ds	1
   443  00000C                     ___awtoft@sign:
   444                           	opt stack 0
   445  00000C                     write@uni:
   446                           	opt stack 0
   447  00000C                     RtccWriteDate@tempHourWDay:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0xB
   451  00000C                     	ds	1
   452  00000D                     ?___ftmul:
   453                           	opt stack 0
   454  00000D                     ___ftmul@f1:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     write@dec:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xD
   463  00000E                     	ds	2
   464  000010                     write@time:
   465                           	opt stack 0
   466  000010                     ___ftmul@f2:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0xF
   470  000010                     	ds	3
   471  000013                     ??___ftmul:
   472                           
   473                           ; 0 bytes @ 0x12
   474  000013                     	ds	3
   475  000016                     ___ftmul@exp:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x15
   479  000016                     	ds	1
   480  000017                     ___ftmul@f3_as_product:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x16
   484  000017                     	ds	3
   485  00001A                     ___ftmul@cntr:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x19
   489  00001A                     	ds	1
   490  00001B                     ___ftmul@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x1A
   494  00001B                     	ds	1
   495  00001C                     ?___ftadd:
   496                           	opt stack 0
   497  00001C                     ___ftadd@f1:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x1B
   501  00001C                     	ds	3
   502  00001F                     ___ftadd@f2:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x1E
   506  00001F                     	ds	3
   507  000022                     ??___ftadd:
   508                           
   509                           ; 0 bytes @ 0x21
   510  000022                     	ds	3
   511  000025                     ___ftadd@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x24
   515  000025                     	ds	1
   516  000026                     ___ftadd@exp2:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x25
   520  000026                     	ds	1
   521  000027                     ___ftadd@exp1:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x26
   525  000027                     	ds	1
   526  000028                     ?_calculate_temperature:
   527                           	opt stack 0
   528  000028                     calculate_temperature@voltage:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x27
   532  000028                     	ds	3
   533  00002B                     ?___fttol:
   534                           	opt stack 0
   535  00002B                     ___fttol@f1:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x2A
   539  00002B                     	ds	4
   540  00002F                     ??___fttol:
   541                           
   542                           ; 0 bytes @ 0x2E
   543  00002F                     	ds	5
   544  000034                     ___fttol@sign1:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x33
   548  000034                     	ds	1
   549  000035                     ___fttol@lval:
   550                           	opt stack 0
   551                           
   552                           ; 4 bytes @ 0x34
   553  000035                     	ds	4
   554  000039                     ___fttol@exp1:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x38
   558  000039                     	ds	1
   559  00003A                     ?_read_temperature:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x39
   563  00003A                     	ds	2
   564  00003C                     ??_read_temperature:
   565                           
   566                           ; 0 bytes @ 0x3B
   567  00003C                     	ds	1
   568  00003D                     read_temperature@voltage:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x3C
   572  00003D                     	ds	2
   573  00003F                     main@temperature:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x3E
   577  00003F                     	ds	2
   578  000041                     main@count:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x40
   582  000041                     	ds	2
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 77 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  temperature     2   62[COMRAM] short 
   602 ;;  count           2   64[COMRAM] short 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  2  120[None  ] int 
   605 ;; Registers used:
   606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;Total ram usage:        4 bytes
   617 ;; Hardware stack levels required when called:    4
   618 ;; This function calls:
   619 ;;		_Setup
   620 ;;		_caratula
   621 ;;		_read_temperature
   622 ;;		_write
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629  001B86                     __ptext0:
   630                           	opt stack 0
   631  001B86                     _main:
   632                           	opt stack 27
   633                           
   634                           ;main.c: 78: Setup();
   635                           
   636                           ; BSR set to: 15
   637                           ;incstack = 0
   638  001B86  ECE4  F00D         	call	_Setup	;wreg free
   639                           
   640                           ;main.c: 79: caratula();
   641  001B8A  EC89  F00E         	call	_caratula	;wreg free
   642                           
   643                           ;main.c: 80: PORTCbits.RC7 = 1;
   644  001B8E  8E82               	bsf	3970,7,c	;volatile
   645                           
   646                           ;main.c: 81: PORTBbits.RB0 = 1;
   647  001B90  8081               	bsf	3969,0,c	;volatile
   648  001B92  D013               	goto	l2490
   649  001B94                     l2482:
   650                           
   651                           ;main.c: 86: short temperature = read_temperature();
   652  001B94  EC3F  F00D         	call	_read_temperature	;wreg free
   653  001B98  C03A  F03F         	movff	?_read_temperature,main@temperature
   654  001B9C  C03B  F040         	movff	?_read_temperature+1,main@temperature+1
   655                           
   656                           ;main.c: 88: write(temperature);
   657  001BA0  C03F  F009         	movff	main@temperature,write@number
   658  001BA4  C040  F00A         	movff	main@temperature+1,write@number+1
   659  001BA8  EC1D  F00C         	call	_write	;wreg free
   660                           
   661                           ;main.c: 90: count++;
   662  001BAC  4A41               	infsnz	main@count,f,c
   663  001BAE  2A42               	incf	main@count+1,f,c
   664                           
   665                           ;main.c: 92: if(count == 100) count = 0;
   666  001BB0  0E64               	movlw	100
   667  001BB2  1841               	xorwf	main@count,w,c
   668  001BB4  1042               	iorwf	main@count+1,w,c
   669  001BB6  A4D8               	btfss	status,2,c
   670  001BB8  D7ED               	goto	l2482
   671  001BBA                     l2490:
   672  001BBA  0E00               	movlw	0
   673  001BBC  6E42               	movwf	main@count+1,c
   674  001BBE  0E00               	movlw	0
   675  001BC0  6E41               	movwf	main@count,c
   676  001BC2  D7E8               	goto	l2482
   677                           
   678                           ;main.c: 94: }
   679                           ;main.c: 96: return 0;
   680                           ;	Return value of _main is never used
   681  001BC4  EF00  F000         	goto	start
   682  001BC8                     __end_of_main:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _write *****************
   695 ;; Defined at:
   696 ;;		line 70 in file "display7seg.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  number          2    8[COMRAM] short 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  time            2   15[COMRAM] int 
   701 ;;  dec             2   13[COMRAM] short 
   702 ;;  uni             2   11[COMRAM] short 
   703 ;; Return value:  Size  Location     Type
   704 ;;		None               void
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   713 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;Total ram usage:        9 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    2
   719 ;; This function calls:
   720 ;;		___awdiv
   721 ;;		___wmul
   722 ;;		_clear_Segment
   723 ;;		_on_numbers
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text1
   730  00183A                     __ptext1:
   731                           	opt stack 0
   732  00183A                     _write:
   733                           	opt stack 28
   734                           
   735                           ;display7seg.c: 71: int time = 0;
   736                           
   737                           ;incstack = 0
   738  00183A  0E00               	movlw	0
   739  00183C  6E11               	movwf	write@time+1,c
   740  00183E  0E00               	movlw	0
   741  001840  6E10               	movwf	write@time,c
   742                           
   743                           ;display7seg.c: 72: short dec = number/10;
   744  001842  C009  F001         	movff	write@number,___awdiv@dividend
   745  001846  C00A  F002         	movff	write@number+1,___awdiv@dividend+1
   746  00184A  0E00               	movlw	0
   747  00184C  6E04               	movwf	___awdiv@divisor+1,c
   748  00184E  0E0A               	movlw	10
   749  001850  6E03               	movwf	___awdiv@divisor,c
   750  001852  EC79  F00C         	call	___awdiv	;wreg free
   751  001856  C001  F00E         	movff	?___awdiv,write@dec
   752  00185A  C002  F00F         	movff	?___awdiv+1,write@dec+1
   753                           
   754                           ;display7seg.c: 73: short uni = number - dec*10;
   755  00185E  C00E  F001         	movff	write@dec,___wmul@multiplier
   756  001862  C00F  F002         	movff	write@dec+1,___wmul@multiplier+1
   757  001866  0E00               	movlw	0
   758  001868  6E04               	movwf	___wmul@multiplicand+1,c
   759  00186A  0E0A               	movlw	10
   760  00186C  6E03               	movwf	___wmul@multiplicand,c
   761  00186E  EC3C  F00E         	call	___wmul	;wreg free
   762  001872  1E01               	comf	?___wmul,f,c
   763  001874  1E02               	comf	?___wmul+1,f,c
   764  001876  4A01               	infsnz	?___wmul,f,c
   765  001878  2A02               	incf	?___wmul+1,f,c
   766  00187A  5009               	movf	write@number,w,c
   767  00187C  2401               	addwf	?___wmul,w,c
   768  00187E  6E0C               	movwf	write@uni,c
   769  001880  500A               	movf	write@number+1,w,c
   770  001882  2002               	addwfc	?___wmul+1,w,c
   771  001884  6E0D               	movwf	write@uni+1,c
   772                           
   773                           ;display7seg.c: 74: clear_Segment();
   774  001886  EC7B  F00E         	call	_clear_Segment	;wreg free
   775                           
   776                           ;display7seg.c: 75: while(time < 500){
   777  00188A  D02A               	goto	l2446
   778  00188C                     l2432:
   779                           
   780                           ;display7seg.c: 76: on_numbers(uni, 1);
   781  00188C  C00C  F005         	movff	write@uni,on_numbers@number
   782  001890  C00D  F006         	movff	write@uni+1,on_numbers@number+1
   783  001894  0E01               	movlw	1
   784  001896  6E07               	movwf	on_numbers@uni,c
   785  001898  EC50  F00E         	call	_on_numbers	;wreg free
   786                           
   787                           ;display7seg.c: 77: _delay((unsigned long)((10)*(8000000/4000.0)));
   788  00189C  0E1A               	movlw	26
   789  00189E  6E0B               	movwf	??_write& (0+255),c
   790  0018A0  0EF8               	movlw	248
   791  0018A2                     u1897:
   792  0018A2  2EE8               	decfsz	wreg,f,c
   793  0018A4  D7FE               	goto	u1897
   794  0018A6  2E0B               	decfsz	??_write& (0+255),f,c
   795  0018A8  D7FC               	goto	u1897
   796  0018AA  D000               	nop2	
   797                           
   798                           ;display7seg.c: 78: PORTCbits.RC7 = 1;
   799  0018AC  8E82               	bsf	3970,7,c	;volatile
   800                           
   801                           ;display7seg.c: 79: on_numbers(dec, 0);
   802  0018AE  C00E  F005         	movff	write@dec,on_numbers@number
   803  0018B2  C00F  F006         	movff	write@dec+1,on_numbers@number+1
   804  0018B6  0E00               	movlw	0
   805  0018B8  6E07               	movwf	on_numbers@uni,c
   806  0018BA  EC50  F00E         	call	_on_numbers	;wreg free
   807                           
   808                           ;display7seg.c: 80: PORTBbits.RB0 = 0;
   809  0018BE  9081               	bcf	3969,0,c	;volatile
   810                           
   811                           ;display7seg.c: 81: _delay((unsigned long)((10)*(8000000/4000.0)));
   812  0018C0  0E1A               	movlw	26
   813  0018C2  6E0B               	movwf	??_write& (0+255),c
   814  0018C4  0EF8               	movlw	248
   815  0018C6                     u1907:
   816  0018C6  2EE8               	decfsz	wreg,f,c
   817  0018C8  D7FE               	goto	u1907
   818  0018CA  2E0B               	decfsz	??_write& (0+255),f,c
   819  0018CC  D7FC               	goto	u1907
   820  0018CE  D000               	nop2	
   821                           
   822                           ;display7seg.c: 82: PORTBbits.RB0 = 1;
   823  0018D0  8081               	bsf	3969,0,c	;volatile
   824                           
   825                           ;display7seg.c: 83: time = time + 20;
   826  0018D2  0E14               	movlw	20
   827  0018D4  2410               	addwf	write@time,w,c
   828  0018D6  6E10               	movwf	write@time,c
   829  0018D8  0E00               	movlw	0
   830  0018DA  2011               	addwfc	write@time+1,w,c
   831  0018DC  6E11               	movwf	write@time+1,c
   832  0018DE  D000               	goto	l2446
   833  0018E0                     l2446:
   834  0018E0  BE11               	btfsc	write@time+1,7,c
   835  0018E2  D7D4               	goto	l2432
   836  0018E4  0EF4               	movlw	244
   837  0018E6  5C10               	subwf	write@time,w,c
   838  0018E8  0E01               	movlw	1
   839  0018EA  5811               	subwfb	write@time+1,w,c
   840  0018EC  A0D8               	btfss	status,0,c
   841  0018EE  D7CE               	goto	l2432
   842  0018F0  0012               	return		;funcret
   843  0018F2                     __end_of_write:
   844                           	opt stack 0
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           postdec1	equ	0xFE5
   852                           fsr1l	equ	0xFE1
   853                           status	equ	0xFD8
   854                           
   855 ;; *************** function _on_numbers *****************
   856 ;; Defined at:
   857 ;;		line 58 in file "display7seg.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  number          2    4[COMRAM] short 
   860 ;;  uni             1    6[COMRAM] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;		None               void
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   872 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    1
   879 ;; This function calls:
   880 ;;		_on_number
   881 ;; This function is called by:
   882 ;;		_write
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text2
   887  001CA0                     __ptext2:
   888                           	opt stack 0
   889  001CA0                     _on_numbers:
   890                           	opt stack 28
   891                           
   892                           ;display7seg.c: 59: on_number(number);
   893                           
   894                           ;incstack = 0
   895  001CA0  C005  F001         	movff	on_numbers@number,on_number@number
   896  001CA4  C006  F002         	movff	on_numbers@number+1,on_number@number+1
   897  001CA8  EC40  F00B         	call	_on_number	;wreg free
   898                           
   899                           ;display7seg.c: 61: if(uni){
   900  001CAC  5007               	movf	on_numbers@uni,w,c
   901  001CAE  B4D8               	btfsc	status,2,c
   902  001CB0  D003               	goto	l377
   903                           
   904                           ;display7seg.c: 62: PORTCbits.RC7 = 0;
   905  001CB2  9E82               	bcf	3970,7,c	;volatile
   906                           
   907                           ;display7seg.c: 63: PORTBbits.RB0 = 1;
   908  001CB4  8081               	bsf	3969,0,c	;volatile
   909                           
   910                           ;display7seg.c: 64: }else{
   911  001CB6  0012               	return	
   912  001CB8                     l377:
   913                           
   914                           ;display7seg.c: 65: PORTCbits.RC7 = 1;
   915  001CB8  8E82               	bsf	3970,7,c	;volatile
   916                           
   917                           ;display7seg.c: 66: PORTBbits.RB0 = 0;
   918  001CBA  9081               	bcf	3969,0,c	;volatile
   919  001CBC  0012               	return	
   920  001CBE  0012               	return		;funcret
   921  001CC0                     __end_of_on_numbers:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _on_number *****************
   934 ;; Defined at:
   935 ;;		line 3 in file "display7seg.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  number          2    0[COMRAM] short 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;		None               void
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   953 ;;Total ram usage:        4 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_on_numbers
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text3
   963  001680                     __ptext3:
   964                           	opt stack 0
   965  001680                     _on_number:
   966                           	opt stack 28
   967                           
   968                           ;display7seg.c: 5: switch (number){
   969                           
   970                           ;incstack = 0
   971  001680  D050               	goto	l2056
   972  001682                     l360:
   973                           
   974                           ;display7seg.c: 7: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.RB
      +                          4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 0;
   975  001682  8E81               	bsf	3969,7,c	;volatile
   976  001684  8C81               	bsf	3969,6,c	;volatile
   977  001686  8A81               	bsf	3969,5,c	;volatile
   978  001688  8881               	bsf	3969,4,c	;volatile
   979  00168A  8681               	bsf	3969,3,c	;volatile
   980  00168C  8481               	bsf	3969,2,c	;volatile
   981  00168E  9281               	bcf	3969,1,c	;volatile
   982                           
   983                           ;display7seg.c: 8: break;
   984  001690  0012               	return	
   985  001692                     l362:
   986                           
   987                           ;display7seg.c: 11: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   988  001692  9E81               	bcf	3969,7,c	;volatile
   989  001694  8C81               	bsf	3969,6,c	;volatile
   990  001696  8A81               	bsf	3969,5,c	;volatile
   991  001698  9881               	bcf	3969,4,c	;volatile
   992  00169A  9681               	bcf	3969,3,c	;volatile
   993  00169C  9481               	bcf	3969,2,c	;volatile
   994  00169E  9281               	bcf	3969,1,c	;volatile
   995                           
   996                           ;display7seg.c: 12: break;
   997  0016A0  0012               	return	
   998  0016A2                     l363:
   999                           
  1000                           ;display7seg.c: 15: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 0; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
  1001  0016A2  8E81               	bsf	3969,7,c	;volatile
  1002  0016A4  8C81               	bsf	3969,6,c	;volatile
  1003  0016A6  9A81               	bcf	3969,5,c	;volatile
  1004  0016A8  8881               	bsf	3969,4,c	;volatile
  1005  0016AA  8681               	bsf	3969,3,c	;volatile
  1006  0016AC  9481               	bcf	3969,2,c	;volatile
  1007  0016AE  8281               	bsf	3969,1,c	;volatile
  1008                           
  1009                           ;display7seg.c: 16: break;
  1010  0016B0  0012               	return	
  1011  0016B2                     l364:
  1012                           
  1013                           ;display7seg.c: 19: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
  1014  0016B2  8E81               	bsf	3969,7,c	;volatile
  1015  0016B4  8C81               	bsf	3969,6,c	;volatile
  1016  0016B6  8A81               	bsf	3969,5,c	;volatile
  1017  0016B8  8881               	bsf	3969,4,c	;volatile
  1018  0016BA  9681               	bcf	3969,3,c	;volatile
  1019  0016BC  9481               	bcf	3969,2,c	;volatile
  1020  0016BE  8281               	bsf	3969,1,c	;volatile
  1021                           
  1022                           ;display7seg.c: 20: break;
  1023  0016C0  0012               	return	
  1024  0016C2                     l365:
  1025                           
  1026                           ;display7seg.c: 23: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1027  0016C2  9E81               	bcf	3969,7,c	;volatile
  1028  0016C4  8C81               	bsf	3969,6,c	;volatile
  1029  0016C6  8A81               	bsf	3969,5,c	;volatile
  1030  0016C8  9881               	bcf	3969,4,c	;volatile
  1031  0016CA  9681               	bcf	3969,3,c	;volatile
  1032  0016CC  8481               	bsf	3969,2,c	;volatile
  1033  0016CE  8281               	bsf	3969,1,c	;volatile
  1034                           
  1035                           ;display7seg.c: 24: break;
  1036  0016D0  0012               	return	
  1037  0016D2                     l366:
  1038                           
  1039                           ;display7seg.c: 27: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1040  0016D2  8E81               	bsf	3969,7,c	;volatile
  1041  0016D4  9C81               	bcf	3969,6,c	;volatile
  1042  0016D6  8A81               	bsf	3969,5,c	;volatile
  1043  0016D8  8881               	bsf	3969,4,c	;volatile
  1044  0016DA  9681               	bcf	3969,3,c	;volatile
  1045  0016DC  8481               	bsf	3969,2,c	;volatile
  1046  0016DE  8281               	bsf	3969,1,c	;volatile
  1047                           
  1048                           ;display7seg.c: 28: break;
  1049  0016E0  0012               	return	
  1050  0016E2                     l367:
  1051                           
  1052                           ;display7seg.c: 31: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1053  0016E2  8E81               	bsf	3969,7,c	;volatile
  1054  0016E4  9C81               	bcf	3969,6,c	;volatile
  1055  0016E6  8A81               	bsf	3969,5,c	;volatile
  1056  0016E8  8881               	bsf	3969,4,c	;volatile
  1057  0016EA  8681               	bsf	3969,3,c	;volatile
  1058  0016EC  8481               	bsf	3969,2,c	;volatile
  1059  0016EE  8281               	bsf	3969,1,c	;volatile
  1060                           
  1061                           ;display7seg.c: 32: break;
  1062  0016F0  0012               	return	
  1063  0016F2                     l368:
  1064                           
  1065                           ;display7seg.c: 35: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
  1066  0016F2  8E81               	bsf	3969,7,c	;volatile
  1067  0016F4  8C81               	bsf	3969,6,c	;volatile
  1068  0016F6  8A81               	bsf	3969,5,c	;volatile
  1069  0016F8  9881               	bcf	3969,4,c	;volatile
  1070  0016FA  9681               	bcf	3969,3,c	;volatile
  1071  0016FC  9481               	bcf	3969,2,c	;volatile
  1072  0016FE  9281               	bcf	3969,1,c	;volatile
  1073                           
  1074                           ;display7seg.c: 36: break;
  1075  001700  0012               	return	
  1076  001702                     l369:
  1077                           
  1078                           ;display7seg.c: 39: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1079  001702  8E81               	bsf	3969,7,c	;volatile
  1080  001704  8C81               	bsf	3969,6,c	;volatile
  1081  001706  8A81               	bsf	3969,5,c	;volatile
  1082  001708  8881               	bsf	3969,4,c	;volatile
  1083  00170A  8681               	bsf	3969,3,c	;volatile
  1084  00170C  8481               	bsf	3969,2,c	;volatile
  1085  00170E  8281               	bsf	3969,1,c	;volatile
  1086                           
  1087                           ;display7seg.c: 40: break;
  1088  001710  0012               	return	
  1089  001712                     l370:
  1090                           
  1091                           ;display7seg.c: 43: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1092  001712  8E81               	bsf	3969,7,c	;volatile
  1093  001714  8C81               	bsf	3969,6,c	;volatile
  1094  001716  8A81               	bsf	3969,5,c	;volatile
  1095  001718  8881               	bsf	3969,4,c	;volatile
  1096  00171A  9681               	bcf	3969,3,c	;volatile
  1097  00171C  8481               	bsf	3969,2,c	;volatile
  1098  00171E  8281               	bsf	3969,1,c	;volatile
  1099                           
  1100                           ;display7seg.c: 45: }
  1101                           
  1102                           ;display7seg.c: 44: break;
  1103  001720  0012               	return	
  1104  001722                     l2056:
  1105  001722  C001  F003         	movff	on_number@number,??_on_number
  1106  001726  C002  F004         	movff	on_number@number+1,??_on_number+1
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "space"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  00172A  5004               	movf	??_on_number+1,w,c
  1116  00172C  0A00               	xorlw	0	; case 0
  1117  00172E  A4D8               	btfss	status,2,c
  1118  001730  0012               	return	
  1119                           
  1120                           ; Switch size 1, requested type "space"
  1121                           ; Number of cases is 10, Range of values is 0 to 9
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           31    16 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126  001732  5003               	movf	??_on_number,w,c
  1127  001734  0A00               	xorlw	0	; case 0
  1128  001736  B4D8               	btfsc	status,2,c
  1129  001738  D7A4               	goto	l360
  1130  00173A  0A01               	xorlw	1	; case 1
  1131  00173C  B4D8               	btfsc	status,2,c
  1132  00173E  D7A9               	goto	l362
  1133  001740  0A03               	xorlw	3	; case 2
  1134  001742  B4D8               	btfsc	status,2,c
  1135  001744  D7AE               	goto	l363
  1136  001746  0A01               	xorlw	1	; case 3
  1137  001748  B4D8               	btfsc	status,2,c
  1138  00174A  D7B3               	goto	l364
  1139  00174C  0A07               	xorlw	7	; case 4
  1140  00174E  B4D8               	btfsc	status,2,c
  1141  001750  D7B8               	goto	l365
  1142  001752  0A01               	xorlw	1	; case 5
  1143  001754  B4D8               	btfsc	status,2,c
  1144  001756  D7BD               	goto	l366
  1145  001758  0A03               	xorlw	3	; case 6
  1146  00175A  B4D8               	btfsc	status,2,c
  1147  00175C  D7C2               	goto	l367
  1148  00175E  0A01               	xorlw	1	; case 7
  1149  001760  B4D8               	btfsc	status,2,c
  1150  001762  D7C7               	goto	l368
  1151  001764  0A0F               	xorlw	15	; case 8
  1152  001766  B4D8               	btfsc	status,2,c
  1153  001768  D7CC               	goto	l369
  1154  00176A  0A01               	xorlw	1	; case 9
  1155  00176C  A4D8               	btfss	status,2,c
  1156  00176E  0012               	return	
  1157  001770  D7D0               	goto	l370
  1158  001772  0012               	return		;funcret
  1159  001774                     __end_of_on_number:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           postdec1	equ	0xFE5
  1168                           fsr1l	equ	0xFE1
  1169                           status	equ	0xFD8
  1170                           
  1171 ;; *************** function _clear_Segment *****************
  1172 ;; Defined at:
  1173 ;;		line 48 in file "display7seg.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;		None               void
  1180 ;; Registers used:
  1181 ;;		None
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_write
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text4
  1201  001CF6                     __ptext4:
  1202                           	opt stack 0
  1203  001CF6                     _clear_Segment:
  1204                           	opt stack 29
  1205                           
  1206                           ;display7seg.c: 49: PORTBbits.RB7 = 0;
  1207                           
  1208                           ;incstack = 0
  1209  001CF6  9E81               	bcf	3969,7,c	;volatile
  1210                           
  1211                           ;display7seg.c: 50: PORTBbits.RB6 = 0;
  1212  001CF8  9C81               	bcf	3969,6,c	;volatile
  1213                           
  1214                           ;display7seg.c: 51: PORTBbits.RB5 = 0;
  1215  001CFA  9A81               	bcf	3969,5,c	;volatile
  1216                           
  1217                           ;display7seg.c: 52: PORTBbits.RB4 = 0;
  1218  001CFC  9881               	bcf	3969,4,c	;volatile
  1219                           
  1220                           ;display7seg.c: 53: PORTBbits.RB3 = 0;
  1221  001CFE  9681               	bcf	3969,3,c	;volatile
  1222                           
  1223                           ;display7seg.c: 54: PORTBbits.RB2 = 0;
  1224  001D00  9481               	bcf	3969,2,c	;volatile
  1225                           
  1226                           ;display7seg.c: 55: PORTBbits.RB1 = 0;
  1227  001D02  9281               	bcf	3969,1,c	;volatile
  1228  001D04  0012               	return		;funcret
  1229  001D06                     __end_of_clear_Segment:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           postdec1	equ	0xFE5
  1238                           fsr1l	equ	0xFE1
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function ___wmul *****************
  1242 ;; Defined at:
  1243 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  multiplier      2    0[COMRAM] unsigned int 
  1246 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  product         2    4[COMRAM] unsigned int 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  2    0[COMRAM] unsigned int 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, prodl, prodh
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;Total ram usage:        6 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_write
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text5
  1272  001C78                     __ptext5:
  1273                           	opt stack 0
  1274  001C78                     ___wmul:
  1275                           	opt stack 29
  1276                           
  1277                           ;incstack = 0
  1278  001C78  5001               	movf	___wmul@multiplier,w,c
  1279  001C7A  0203               	mulwf	___wmul@multiplicand,c
  1280  001C7C  CFF3 F005          	movff	prodl,___wmul@product
  1281  001C80  CFF4 F006          	movff	prodh,___wmul@product+1
  1282  001C84  5001               	movf	___wmul@multiplier,w,c
  1283  001C86  0204               	mulwf	___wmul@multiplicand+1,c
  1284  001C88  50F3               	movf	prodl,w,c
  1285  001C8A  2606               	addwf	___wmul@product+1,f,c
  1286  001C8C  5002               	movf	___wmul@multiplier+1,w,c
  1287  001C8E  0203               	mulwf	___wmul@multiplicand,c
  1288  001C90  50F3               	movf	prodl,w,c
  1289  001C92  2606               	addwf	___wmul@product+1,f,c
  1290  001C94  C005  F001         	movff	___wmul@product,?___wmul
  1291  001C98  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1292  001C9C  0012               	return	
  1293  001C9E  0012               	return		;funcret
  1294  001CA0                     __end_of___wmul:
  1295                           	opt stack 0
  1296                           tblptru	equ	0xFF8
  1297                           tblptrh	equ	0xFF7
  1298                           tblptrl	equ	0xFF6
  1299                           tablat	equ	0xFF5
  1300                           prodh	equ	0xFF4
  1301                           prodl	equ	0xFF3
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1l	equ	0xFE1
  1306                           status	equ	0xFD8
  1307                           
  1308 ;; *************** function _read_temperature *****************
  1309 ;; Defined at:
  1310 ;;		line 7 in file "ADconversor.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  voltage         2   60[COMRAM] int 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  2   57[COMRAM] int 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;Total ram usage:        5 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    3
  1331 ;; This function calls:
  1332 ;;		___fttol
  1333 ;;		_calculate_temperature
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text6
  1340  001A7E                     __ptext6:
  1341                           	opt stack 0
  1342  001A7E                     _read_temperature:
  1343                           	opt stack 27
  1344                           
  1345                           ;ADconversor.c: 8: ADCON0bits.ADON = 1;
  1346                           
  1347                           ;incstack = 0
  1348  001A7E  80C2               	bsf	4034,0,c	;volatile
  1349                           
  1350                           ;ADconversor.c: 9: ADCON0bits.GO = 1;
  1351  001A80  82C2               	bsf	4034,1,c	;volatile
  1352                           
  1353                           ;ADconversor.c: 10: int voltage = 0;
  1354  001A82  0E00               	movlw	0
  1355  001A84  6E3E               	movwf	read_temperature@voltage+1,c
  1356  001A86  0E00               	movlw	0
  1357  001A88  6E3D               	movwf	read_temperature@voltage,c
  1358                           
  1359                           ;ADconversor.c: 12: while(ADCON0bits.GO){
  1360  001A8A  D01A               	goto	l2418
  1361  001A8C                     l2412:
  1362                           
  1363                           ;ADconversor.c: 13: _delay((unsigned long)((10)*(8000000/4000.0)));
  1364  001A8C  0E1A               	movlw	26
  1365  001A8E  6E3C               	movwf	??_read_temperature& (0+255),c
  1366  001A90  0EF8               	movlw	248
  1367  001A92                     u1917:
  1368  001A92  2EE8               	decfsz	wreg,f,c
  1369  001A94  D7FE               	goto	u1917
  1370  001A96  2E3C               	decfsz	??_read_temperature& (0+255),f,c
  1371  001A98  D7FC               	goto	u1917
  1372  001A9A  D000               	nop2	
  1373                           
  1374                           ;ADconversor.c: 14: voltage = (int)ADRESH;
  1375  001A9C  CFC4 F03D          	movff	4036,read_temperature@voltage	;volatile
  1376  001AA0  6A3E               	clrf	read_temperature@voltage+1,c
  1377                           
  1378                           ;ADconversor.c: 15: ADCON0bits.GO = voltage == 0;
  1379  001AA2  503D               	movf	read_temperature@voltage,w,c
  1380  001AA4  103E               	iorwf	read_temperature@voltage+1,w,c
  1381  001AA6  A4D8               	btfss	status,2,c
  1382  001AA8  D003               	goto	u1790
  1383  001AAA  6A3C               	clrf	??_read_temperature& (0+255),c
  1384  001AAC  2A3C               	incf	??_read_temperature& (0+255),f,c
  1385  001AAE  D001               	goto	u1808
  1386  001AB0                     u1790:
  1387  001AB0  6A3C               	clrf	??_read_temperature& (0+255),c
  1388  001AB2                     u1808:
  1389  001AB2  463C               	rlncf	??_read_temperature,f,c
  1390  001AB4  50C2               	movf	4034,w,c	;volatile
  1391  001AB6  183C               	xorwf	??_read_temperature,w,c
  1392  001AB8  0BFD               	andlw	-3
  1393  001ABA  183C               	xorwf	??_read_temperature,w,c
  1394  001ABC  6EC2               	movwf	4034,c	;volatile
  1395  001ABE  D000               	goto	l2418
  1396  001AC0                     l2418:
  1397  001AC0  B2C2               	btfsc	4034,1,c	;volatile
  1398  001AC2  D7E4               	goto	l2412
  1399                           
  1400                           ;ADconversor.c: 16: }
  1401                           ;ADconversor.c: 17: ADCON0bits.ADON = 0;
  1402  001AC4  90C2               	bcf	4034,0,c	;volatile
  1403                           
  1404                           ;ADconversor.c: 19: return calculate_temperature(voltage);
  1405  001AC6  C03D  F028         	movff	read_temperature@voltage,calculate_temperature@voltage
  1406  001ACA  C03E  F029         	movff	read_temperature@voltage+1,calculate_temperature@voltage+1
  1407  001ACE  EC77  F00D         	call	_calculate_temperature	;wreg free
  1408  001AD2  C028  F02B         	movff	?_calculate_temperature,___fttol@f1
  1409  001AD6  C029  F02C         	movff	?_calculate_temperature+1,___fttol@f1+1
  1410  001ADA  C02A  F02D         	movff	?_calculate_temperature+2,___fttol@f1+2
  1411  001ADE  ECBF  F00A         	call	___fttol	;wreg free
  1412  001AE2  C02B  F03A         	movff	?___fttol,?_read_temperature
  1413  001AE6  C02C  F03B         	movff	?___fttol+1,?_read_temperature+1
  1414  001AEA  0012               	return	
  1415  001AEC  0012               	return		;funcret
  1416  001AEE                     __end_of_read_temperature:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           prodh	equ	0xFF4
  1423                           prodl	equ	0xFF3
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           fsr1l	equ	0xFE1
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _calculate_temperature *****************
  1431 ;; Defined at:
  1432 ;;		line 3 in file "ADconversor.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  voltage         2   39[COMRAM] int 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  3   39[COMRAM] float 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    2
  1453 ;; This function calls:
  1454 ;;		___awtoft
  1455 ;;		___ftadd
  1456 ;;		___ftmul
  1457 ;; This function is called by:
  1458 ;;		_read_temperature
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text7
  1463  001AEE                     __ptext7:
  1464                           	opt stack 0
  1465  001AEE                     _calculate_temperature:
  1466                           	opt stack 27
  1467                           
  1468                           ;ADconversor.c: 4: return 0.588 * voltage - 50;
  1469                           
  1470                           ;incstack = 0
  1471  001AEE  0E87               	movlw	135
  1472  001AF0  6E10               	movwf	___ftmul@f2,c
  1473  001AF2  0E16               	movlw	22
  1474  001AF4  6E11               	movwf	___ftmul@f2+1,c
  1475  001AF6  0E3F               	movlw	63
  1476  001AF8  6E12               	movwf	___ftmul@f2+2,c
  1477  001AFA  C028  F009         	movff	calculate_temperature@voltage,___awtoft@c
  1478  001AFE  C029  F00A         	movff	calculate_temperature@voltage+1,___awtoft@c+1
  1479  001B02  EC05  F00E         	call	___awtoft	;wreg free
  1480  001B06  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1481  001B0A  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1482  001B0E  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1483  001B12  EC3E  F00A         	call	___ftmul	;wreg free
  1484  001B16  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1485  001B1A  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1486  001B1E  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1487  001B22  0E00               	movlw	0
  1488  001B24  6E1F               	movwf	___ftadd@f2,c
  1489  001B26  0E48               	movlw	72
  1490  001B28  6E20               	movwf	___ftadd@f2+1,c
  1491  001B2A  0EC2               	movlw	194
  1492  001B2C  6E21               	movwf	___ftadd@f2+2,c
  1493  001B2E  EC83  F007         	call	___ftadd	;wreg free
  1494  001B32  C01C  F028         	movff	?___ftadd,?_calculate_temperature
  1495  001B36  C01D  F029         	movff	?___ftadd+1,?_calculate_temperature+1
  1496  001B3A  C01E  F02A         	movff	?___ftadd+2,?_calculate_temperature+2
  1497  001B3E  0012               	return	
  1498  001B40  0012               	return		;funcret
  1499  001B42                     __end_of_calculate_temperature:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           prodh	equ	0xFF4
  1506                           prodl	equ	0xFF3
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function ___ftmul *****************
  1514 ;; Defined at:
  1515 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  f1              3   12[COMRAM] float 
  1518 ;;  f2              3   15[COMRAM] float 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1521 ;;  sign            1   26[COMRAM] unsigned char 
  1522 ;;  cntr            1   25[COMRAM] unsigned char 
  1523 ;;  exp             1   21[COMRAM] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  3   12[COMRAM] float 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1533 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1534 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1535 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;Total ram usage:       15 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		___ftpack
  1542 ;; This function is called by:
  1543 ;;		_calculate_temperature
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text8
  1548  00147C                     __ptext8:
  1549                           	opt stack 0
  1550  00147C                     ___ftmul:
  1551                           	opt stack 27
  1552                           
  1553                           ;incstack = 0
  1554  00147C  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1555  001480  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1556  001482  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1557  001484  340E               	rlcf	___ftmul@f1+1,w,c
  1558  001486  3613               	rlcf	??___ftmul& (0+255),f,c
  1559  001488  E301               	bnc	u1521
  1560  00148A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1561  00148C                     u1521:
  1562  00148C  5013               	movf	??___ftmul,w,c
  1563  00148E  6E16               	movwf	___ftmul@exp,c
  1564  001490  5016               	movf	___ftmul@exp,w,c
  1565  001492  A4D8               	btfss	status,2,c
  1566  001494  D007               	goto	l2138
  1567  001496  0E00               	movlw	0
  1568  001498  6E0D               	movwf	?___ftmul,c
  1569  00149A  0E00               	movlw	0
  1570  00149C  6E0E               	movwf	?___ftmul+1,c
  1571  00149E  0E00               	movlw	0
  1572  0014A0  6E0F               	movwf	?___ftmul+2,c
  1573  0014A2  0012               	return	
  1574  0014A4                     l2138:
  1575  0014A4  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1576  0014A8  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1577  0014AA  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1578  0014AC  3411               	rlcf	___ftmul@f2+1,w,c
  1579  0014AE  3613               	rlcf	??___ftmul& (0+255),f,c
  1580  0014B0  E301               	bnc	u1541
  1581  0014B2  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1582  0014B4                     u1541:
  1583  0014B4  5013               	movf	??___ftmul,w,c
  1584  0014B6  6E1B               	movwf	___ftmul@sign,c
  1585  0014B8  501B               	movf	___ftmul@sign,w,c
  1586  0014BA  A4D8               	btfss	status,2,c
  1587  0014BC  D007               	goto	l2144
  1588  0014BE  0E00               	movlw	0
  1589  0014C0  6E0D               	movwf	?___ftmul,c
  1590  0014C2  0E00               	movlw	0
  1591  0014C4  6E0E               	movwf	?___ftmul+1,c
  1592  0014C6  0E00               	movlw	0
  1593  0014C8  6E0F               	movwf	?___ftmul+2,c
  1594  0014CA  0012               	return	
  1595  0014CC                     l2144:
  1596  0014CC  501B               	movf	___ftmul@sign,w,c
  1597  0014CE  0F7B               	addlw	123
  1598  0014D0  2616               	addwf	___ftmul@exp,f,c
  1599  0014D2  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1600  0014D6  5012               	movf	___ftmul@f2+2,w,c
  1601  0014D8  1A1B               	xorwf	___ftmul@sign,f,c
  1602  0014DA  0E80               	movlw	128
  1603  0014DC  161B               	andwf	___ftmul@sign,f,c
  1604  0014DE  8E0E               	bsf	___ftmul@f1+1,7,c
  1605  0014E0  8E11               	bsf	___ftmul@f2+1,7,c
  1606  0014E2  0EFF               	movlw	255
  1607  0014E4  1610               	andwf	___ftmul@f2,f,c
  1608  0014E6  0EFF               	movlw	255
  1609  0014E8  1611               	andwf	___ftmul@f2+1,f,c
  1610  0014EA  0E00               	movlw	0
  1611  0014EC  1612               	andwf	___ftmul@f2+2,f,c
  1612  0014EE  0E00               	movlw	0
  1613  0014F0  6E17               	movwf	___ftmul@f3_as_product,c
  1614  0014F2  0E00               	movlw	0
  1615  0014F4  6E18               	movwf	___ftmul@f3_as_product+1,c
  1616  0014F6  0E00               	movlw	0
  1617  0014F8  6E19               	movwf	___ftmul@f3_as_product+2,c
  1618  0014FA  0E07               	movlw	7
  1619  0014FC  6E1A               	movwf	___ftmul@cntr,c
  1620  0014FE  D000               	goto	l2158
  1621  001500                     l2158:
  1622  001500  A00D               	btfss	___ftmul@f1,0,c
  1623  001502  D007               	goto	l2162
  1624  001504  5010               	movf	___ftmul@f2,w,c
  1625  001506  2617               	addwf	___ftmul@f3_as_product,f,c
  1626  001508  5011               	movf	___ftmul@f2+1,w,c
  1627  00150A  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1628  00150C  5012               	movf	___ftmul@f2+2,w,c
  1629  00150E  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1630  001510  D000               	goto	l2162
  1631  001512                     l2162:
  1632  001512  90D8               	bcf	status,0,c
  1633  001514  320F               	rrcf	___ftmul@f1+2,f,c
  1634  001516  320E               	rrcf	___ftmul@f1+1,f,c
  1635  001518  320D               	rrcf	___ftmul@f1,f,c
  1636  00151A  90D8               	bcf	status,0,c
  1637  00151C  3610               	rlcf	___ftmul@f2,f,c
  1638  00151E  3611               	rlcf	___ftmul@f2+1,f,c
  1639  001520  3612               	rlcf	___ftmul@f2+2,f,c
  1640  001522  2E1A               	decfsz	___ftmul@cntr,f,c
  1641  001524  D7ED               	goto	l2158
  1642  001526  D000               	goto	l2166
  1643  001528                     l2166:
  1644  001528  0E09               	movlw	9
  1645  00152A  6E1A               	movwf	___ftmul@cntr,c
  1646  00152C  D000               	goto	l2168
  1647  00152E                     l2168:
  1648  00152E  A00D               	btfss	___ftmul@f1,0,c
  1649  001530  D007               	goto	l2172
  1650  001532  5010               	movf	___ftmul@f2,w,c
  1651  001534  2617               	addwf	___ftmul@f3_as_product,f,c
  1652  001536  5011               	movf	___ftmul@f2+1,w,c
  1653  001538  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1654  00153A  5012               	movf	___ftmul@f2+2,w,c
  1655  00153C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1656  00153E  D000               	goto	l2172
  1657  001540                     l2172:
  1658  001540  90D8               	bcf	status,0,c
  1659  001542  320F               	rrcf	___ftmul@f1+2,f,c
  1660  001544  320E               	rrcf	___ftmul@f1+1,f,c
  1661  001546  320D               	rrcf	___ftmul@f1,f,c
  1662  001548  90D8               	bcf	status,0,c
  1663  00154A  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1664  00154C  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1665  00154E  3217               	rrcf	___ftmul@f3_as_product,f,c
  1666  001550  2E1A               	decfsz	___ftmul@cntr,f,c
  1667  001552  D7ED               	goto	l2168
  1668  001554  D000               	goto	l2176
  1669  001556                     l2176:
  1670  001556  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1671  00155A  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1672  00155E  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1673  001562  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1674  001566  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1675  00156A  ECBA  F00B         	call	___ftpack	;wreg free
  1676  00156E  C001  F00D         	movff	?___ftpack,?___ftmul
  1677  001572  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1678  001576  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1679  00157A  0012               	return	
  1680  00157C  0012               	return		;funcret
  1681  00157E                     __end_of___ftmul:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           postdec1	equ	0xFE5
  1692                           fsr1l	equ	0xFE1
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function ___ftadd *****************
  1696 ;; Defined at:
  1697 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftadd.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  f1              3   27[COMRAM] float 
  1700 ;;  f2              3   30[COMRAM] float 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  exp1            1   38[COMRAM] unsigned char 
  1703 ;;  exp2            1   37[COMRAM] unsigned char 
  1704 ;;  sign            1   36[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  3   27[COMRAM] float 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:       12 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    1
  1721 ;; This function calls:
  1722 ;;		___ftpack
  1723 ;; This function is called by:
  1724 ;;		_calculate_temperature
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text9
  1729  000F06                     __ptext9:
  1730                           	opt stack 0
  1731  000F06                     ___ftadd:
  1732                           	opt stack 27
  1733                           
  1734                           ;incstack = 0
  1735  000F06  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  1736  000F0A  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1737  000F0C  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1738  000F0E  341D               	rlcf	___ftadd@f1+1,w,c
  1739  000F10  3622               	rlcf	??___ftadd& (0+255),f,c
  1740  000F12  E301               	bnc	u1311
  1741  000F14  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1742  000F16                     u1311:
  1743  000F16  5022               	movf	??___ftadd,w,c
  1744  000F18  6E27               	movwf	___ftadd@exp1,c
  1745  000F1A  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  1746  000F1E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1747  000F20  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1748  000F22  3420               	rlcf	___ftadd@f2+1,w,c
  1749  000F24  3622               	rlcf	??___ftadd& (0+255),f,c
  1750  000F26  E301               	bnc	u1321
  1751  000F28  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1752  000F2A                     u1321:
  1753  000F2A  5022               	movf	??___ftadd,w,c
  1754  000F2C  6E26               	movwf	___ftadd@exp2,c
  1755  000F2E  5027               	movf	___ftadd@exp1,w,c
  1756  000F30  B4D8               	btfsc	status,2,c
  1757  000F32  D00B               	goto	l861
  1758  000F34  5026               	movf	___ftadd@exp2,w,c
  1759  000F36  5C27               	subwf	___ftadd@exp1,w,c
  1760  000F38  B0D8               	btfsc	status,0,c
  1761  000F3A  D00E               	goto	l2070
  1762  000F3C  5027               	movf	___ftadd@exp1,w,c
  1763  000F3E  0800               	sublw	0
  1764  000F40  2426               	addwf	___ftadd@exp2,w,c
  1765  000F42  6E22               	movwf	??___ftadd& (0+255),c
  1766  000F44  0E18               	movlw	24
  1767  000F46  6422               	cpfsgt	??___ftadd,c
  1768  000F48  D007               	goto	l2070
  1769  000F4A                     l861:
  1770  000F4A  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  1771  000F4E  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  1772  000F52  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  1773  000F56  0012               	return	
  1774  000F58                     l2070:
  1775  000F58  5026               	movf	___ftadd@exp2,w,c
  1776  000F5A  B4D8               	btfsc	status,2,c
  1777  000F5C  D00B               	goto	l865
  1778  000F5E  5027               	movf	___ftadd@exp1,w,c
  1779  000F60  5C26               	subwf	___ftadd@exp2,w,c
  1780  000F62  B0D8               	btfsc	status,0,c
  1781  000F64  D00E               	goto	l2076
  1782  000F66  5026               	movf	___ftadd@exp2,w,c
  1783  000F68  0800               	sublw	0
  1784  000F6A  2427               	addwf	___ftadd@exp1,w,c
  1785  000F6C  6E22               	movwf	??___ftadd& (0+255),c
  1786  000F6E  0E18               	movlw	24
  1787  000F70  6422               	cpfsgt	??___ftadd,c
  1788  000F72  D007               	goto	l2076
  1789  000F74                     l865:
  1790  000F74  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  1791  000F78  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  1792  000F7C  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  1793  000F80  0012               	return	
  1794  000F82                     l2076:
  1795  000F82  0E06               	movlw	6
  1796  000F84  6E25               	movwf	___ftadd@sign,c
  1797  000F86  AE1E               	btfss	___ftadd@f1+2,7,c
  1798  000F88  D002               	goto	l2082
  1799  000F8A  8E25               	bsf	___ftadd@sign,7,c
  1800  000F8C  D000               	goto	l2082
  1801  000F8E                     l2082:
  1802  000F8E  BE21               	btfsc	___ftadd@f2+2,7,c
  1803  000F90  8C25               	bsf	___ftadd@sign,6,c
  1804  000F92  8E1D               	bsf	___ftadd@f1+1,7,c
  1805  000F94  0EFF               	movlw	255
  1806  000F96  161C               	andwf	___ftadd@f1,f,c
  1807  000F98  0EFF               	movlw	255
  1808  000F9A  161D               	andwf	___ftadd@f1+1,f,c
  1809  000F9C  0E00               	movlw	0
  1810  000F9E  161E               	andwf	___ftadd@f1+2,f,c
  1811  000FA0  8E20               	bsf	___ftadd@f2+1,7,c
  1812  000FA2  0EFF               	movlw	255
  1813  000FA4  161F               	andwf	___ftadd@f2,f,c
  1814  000FA6  0EFF               	movlw	255
  1815  000FA8  1620               	andwf	___ftadd@f2+1,f,c
  1816  000FAA  0E00               	movlw	0
  1817  000FAC  1621               	andwf	___ftadd@f2+2,f,c
  1818  000FAE  5026               	movf	___ftadd@exp2,w,c
  1819  000FB0  5C27               	subwf	___ftadd@exp1,w,c
  1820  000FB2  B0D8               	btfsc	status,0,c
  1821  000FB4  D01E               	goto	l2102
  1822  000FB6                     l2092:
  1823  000FB6  90D8               	bcf	status,0,c
  1824  000FB8  361F               	rlcf	___ftadd@f2,f,c
  1825  000FBA  3620               	rlcf	___ftadd@f2+1,f,c
  1826  000FBC  3621               	rlcf	___ftadd@f2+2,f,c
  1827  000FBE  0626               	decf	___ftadd@exp2,f,c
  1828  000FC0  5027               	movf	___ftadd@exp1,w,c
  1829  000FC2  1826               	xorwf	___ftadd@exp2,w,c
  1830  000FC4  B4D8               	btfsc	status,2,c
  1831  000FC6  D00F               	goto	l2100
  1832  000FC8  0625               	decf	___ftadd@sign,f,c
  1833  000FCA  C025  F022         	movff	___ftadd@sign,??___ftadd
  1834  000FCE  0E07               	movlw	7
  1835  000FD0  1622               	andwf	??___ftadd,f,c
  1836  000FD2  B4D8               	btfsc	status,2,c
  1837  000FD4  D008               	goto	l2100
  1838  000FD6  D7EF               	goto	l2092
  1839  000FD8  D006               	goto	l2100
  1840  000FDA                     l2098:
  1841  000FDA  90D8               	bcf	status,0,c
  1842  000FDC  321E               	rrcf	___ftadd@f1+2,f,c
  1843  000FDE  321D               	rrcf	___ftadd@f1+1,f,c
  1844  000FE0  321C               	rrcf	___ftadd@f1,f,c
  1845  000FE2  2A27               	incf	___ftadd@exp1,f,c
  1846  000FE4  D000               	goto	l2100
  1847  000FE6                     l2100:
  1848  000FE6  5026               	movf	___ftadd@exp2,w,c
  1849  000FE8  1827               	xorwf	___ftadd@exp1,w,c
  1850  000FEA  B4D8               	btfsc	status,2,c
  1851  000FEC  D024               	goto	l876
  1852  000FEE  D7F5               	goto	l2098
  1853  000FF0  D022               	goto	l876
  1854  000FF2                     l2102:
  1855  000FF2  5027               	movf	___ftadd@exp1,w,c
  1856  000FF4  5C26               	subwf	___ftadd@exp2,w,c
  1857  000FF6  B0D8               	btfsc	status,0,c
  1858  000FF8  D01E               	goto	l876
  1859  000FFA                     l2104:
  1860  000FFA  90D8               	bcf	status,0,c
  1861  000FFC  361C               	rlcf	___ftadd@f1,f,c
  1862  000FFE  361D               	rlcf	___ftadd@f1+1,f,c
  1863  001000  361E               	rlcf	___ftadd@f1+2,f,c
  1864  001002  0627               	decf	___ftadd@exp1,f,c
  1865  001004  5027               	movf	___ftadd@exp1,w,c
  1866  001006  1826               	xorwf	___ftadd@exp2,w,c
  1867  001008  B4D8               	btfsc	status,2,c
  1868  00100A  D00F               	goto	l2112
  1869  00100C  0625               	decf	___ftadd@sign,f,c
  1870  00100E  C025  F022         	movff	___ftadd@sign,??___ftadd
  1871  001012  0E07               	movlw	7
  1872  001014  1622               	andwf	??___ftadd,f,c
  1873  001016  B4D8               	btfsc	status,2,c
  1874  001018  D008               	goto	l2112
  1875  00101A  D7EF               	goto	l2104
  1876  00101C  D006               	goto	l2112
  1877  00101E                     l2110:
  1878  00101E  90D8               	bcf	status,0,c
  1879  001020  3221               	rrcf	___ftadd@f2+2,f,c
  1880  001022  3220               	rrcf	___ftadd@f2+1,f,c
  1881  001024  321F               	rrcf	___ftadd@f2,f,c
  1882  001026  2A26               	incf	___ftadd@exp2,f,c
  1883  001028  D000               	goto	l2112
  1884  00102A                     l2112:
  1885  00102A  5026               	movf	___ftadd@exp2,w,c
  1886  00102C  1827               	xorwf	___ftadd@exp1,w,c
  1887  00102E  B4D8               	btfsc	status,2,c
  1888  001030  D002               	goto	l876
  1889  001032  D7F5               	goto	l2110
  1890  001034  D000               	goto	l876
  1891  001036                     l876:
  1892  001036  AE25               	btfss	___ftadd@sign,7,c
  1893  001038  D00C               	goto	l885
  1894  00103A  0EFF               	movlw	255
  1895  00103C  1A1C               	xorwf	___ftadd@f1,f,c
  1896  00103E  0EFF               	movlw	255
  1897  001040  1A1D               	xorwf	___ftadd@f1+1,f,c
  1898  001042  0EFF               	movlw	255
  1899  001044  1A1E               	xorwf	___ftadd@f1+2,f,c
  1900  001046  0E01               	movlw	1
  1901  001048  261C               	addwf	___ftadd@f1,f,c
  1902  00104A  0E00               	movlw	0
  1903  00104C  221D               	addwfc	___ftadd@f1+1,f,c
  1904  00104E  0E00               	movlw	0
  1905  001050  221E               	addwfc	___ftadd@f1+2,f,c
  1906  001052                     l885:
  1907  001052  AC25               	btfss	___ftadd@sign,6,c
  1908  001054  D00D               	goto	l2118
  1909  001056  0EFF               	movlw	255
  1910  001058  1A1F               	xorwf	___ftadd@f2,f,c
  1911  00105A  0EFF               	movlw	255
  1912  00105C  1A20               	xorwf	___ftadd@f2+1,f,c
  1913  00105E  0EFF               	movlw	255
  1914  001060  1A21               	xorwf	___ftadd@f2+2,f,c
  1915  001062  0E01               	movlw	1
  1916  001064  261F               	addwf	___ftadd@f2,f,c
  1917  001066  0E00               	movlw	0
  1918  001068  2220               	addwfc	___ftadd@f2+1,f,c
  1919  00106A  0E00               	movlw	0
  1920  00106C  2221               	addwfc	___ftadd@f2+2,f,c
  1921  00106E  D000               	goto	l2118
  1922  001070                     l2118:
  1923  001070  0E00               	movlw	0
  1924  001072  6E25               	movwf	___ftadd@sign,c
  1925  001074  501C               	movf	___ftadd@f1,w,c
  1926  001076  261F               	addwf	___ftadd@f2,f,c
  1927  001078  501D               	movf	___ftadd@f1+1,w,c
  1928  00107A  2220               	addwfc	___ftadd@f2+1,f,c
  1929  00107C  501E               	movf	___ftadd@f1+2,w,c
  1930  00107E  2221               	addwfc	___ftadd@f2+2,f,c
  1931  001080  AE21               	btfss	___ftadd@f2+2,7,c
  1932  001082  D00F               	goto	l2128
  1933  001084  0EFF               	movlw	255
  1934  001086  1A1F               	xorwf	___ftadd@f2,f,c
  1935  001088  0EFF               	movlw	255
  1936  00108A  1A20               	xorwf	___ftadd@f2+1,f,c
  1937  00108C  0EFF               	movlw	255
  1938  00108E  1A21               	xorwf	___ftadd@f2+2,f,c
  1939  001090  0E01               	movlw	1
  1940  001092  261F               	addwf	___ftadd@f2,f,c
  1941  001094  0E00               	movlw	0
  1942  001096  2220               	addwfc	___ftadd@f2+1,f,c
  1943  001098  0E00               	movlw	0
  1944  00109A  2221               	addwfc	___ftadd@f2+2,f,c
  1945  00109C  0E01               	movlw	1
  1946  00109E  6E25               	movwf	___ftadd@sign,c
  1947  0010A0  D000               	goto	l2128
  1948  0010A2                     l2128:
  1949  0010A2  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  1950  0010A6  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1951  0010AA  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1952  0010AE  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  1953  0010B2  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  1954  0010B6  ECBA  F00B         	call	___ftpack	;wreg free
  1955  0010BA  C001  F01C         	movff	?___ftpack,?___ftadd
  1956  0010BE  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  1957  0010C2  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  1958  0010C6  0012               	return	
  1959  0010C8  0012               	return		;funcret
  1960  0010CA                     __end_of___ftadd:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           prodh	equ	0xFF4
  1967                           prodl	equ	0xFF3
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postdec1	equ	0xFE5
  1971                           fsr1l	equ	0xFE1
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function ___awtoft *****************
  1975 ;; Defined at:
  1976 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awtoft.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  c               2    8[COMRAM] int 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  sign            1   11[COMRAM] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  3    8[COMRAM] float 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    1
  1997 ;; This function calls:
  1998 ;;		___ftpack
  1999 ;; This function is called by:
  2000 ;;		_calculate_temperature
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text10
  2005  001C0A                     __ptext10:
  2006                           	opt stack 0
  2007  001C0A                     ___awtoft:
  2008                           	opt stack 27
  2009                           
  2010                           ;incstack = 0
  2011  001C0A  0E00               	movlw	0
  2012  001C0C  6E0C               	movwf	___awtoft@sign,c
  2013  001C0E  AE0A               	btfss	___awtoft@c+1,7,c
  2014  001C10  D007               	goto	l2232
  2015  001C12  6C09               	negf	___awtoft@c,c
  2016  001C14  1E0A               	comf	___awtoft@c+1,f,c
  2017  001C16  B0D8               	btfsc	status,0,c
  2018  001C18  2A0A               	incf	___awtoft@c+1,f,c
  2019  001C1A  0E01               	movlw	1
  2020  001C1C  6E0C               	movwf	___awtoft@sign,c
  2021  001C1E  D000               	goto	l2232
  2022  001C20                     l2232:
  2023  001C20  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2024  001C24  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2025  001C28  6A03               	clrf	___ftpack@arg+2,c
  2026  001C2A  0E8E               	movlw	142
  2027  001C2C  6E04               	movwf	___ftpack@exp,c
  2028  001C2E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2029  001C32  ECBA  F00B         	call	___ftpack	;wreg free
  2030  001C36  C001  F009         	movff	?___ftpack,?___awtoft
  2031  001C3A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2032  001C3E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2033  001C42  0012               	return	
  2034  001C44  0012               	return		;funcret
  2035  001C46                     __end_of___awtoft:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postdec1	equ	0xFE5
  2046                           fsr1l	equ	0xFE1
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function ___ftpack *****************
  2050 ;; Defined at:
  2051 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\float.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  arg             3    0[COMRAM] unsigned um
  2054 ;;  exp             1    3[COMRAM] unsigned char 
  2055 ;;  sign            1    4[COMRAM] unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  3    0[COMRAM] float 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2067 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;Total ram usage:        8 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		___awtoft
  2077 ;;		___ftadd
  2078 ;;		___ftmul
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text11
  2083  001774                     __ptext11:
  2084                           	opt stack 0
  2085  001774                     ___ftpack:
  2086                           	opt stack 27
  2087                           
  2088                           ;incstack = 0
  2089  001774  5004               	movf	___ftpack@exp,w,c
  2090  001776  B4D8               	btfsc	status,2,c
  2091  001778  D005               	goto	l1866
  2092  00177A  5001               	movf	___ftpack@arg,w,c
  2093  00177C  1002               	iorwf	___ftpack@arg+1,w,c
  2094  00177E  1003               	iorwf	___ftpack@arg+2,w,c
  2095  001780  A4D8               	btfss	status,2,c
  2096  001782  D00E               	goto	l1872
  2097  001784                     l1866:
  2098  001784  0E00               	movlw	0
  2099  001786  6E01               	movwf	?___ftpack,c
  2100  001788  0E00               	movlw	0
  2101  00178A  6E02               	movwf	?___ftpack+1,c
  2102  00178C  0E00               	movlw	0
  2103  00178E  6E03               	movwf	?___ftpack+2,c
  2104  001790  0012               	return	
  2105  001792  D006               	goto	l1872
  2106  001794                     l1870:
  2107  001794  2A04               	incf	___ftpack@exp,f,c
  2108  001796  90D8               	bcf	status,0,c
  2109  001798  3203               	rrcf	___ftpack@arg+2,f,c
  2110  00179A  3202               	rrcf	___ftpack@arg+1,f,c
  2111  00179C  3201               	rrcf	___ftpack@arg,f,c
  2112  00179E  D000               	goto	l1872
  2113  0017A0                     l1872:
  2114  0017A0  0E00               	movlw	0
  2115  0017A2  1401               	andwf	___ftpack@arg,w,c
  2116  0017A4  6E06               	movwf	??___ftpack& (0+255),c
  2117  0017A6  0E00               	movlw	0
  2118  0017A8  1402               	andwf	___ftpack@arg+1,w,c
  2119  0017AA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2120  0017AC  0EFE               	movlw	254
  2121  0017AE  1403               	andwf	___ftpack@arg+2,w,c
  2122  0017B0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2123  0017B2  5006               	movf	??___ftpack,w,c
  2124  0017B4  1007               	iorwf	??___ftpack+1,w,c
  2125  0017B6  1008               	iorwf	??___ftpack+2,w,c
  2126  0017B8  B4D8               	btfsc	status,2,c
  2127  0017BA  D00E               	goto	l1878
  2128  0017BC  D7EB               	goto	l1870
  2129  0017BE  D00C               	goto	l1878
  2130  0017C0                     l1874:
  2131  0017C0  2A04               	incf	___ftpack@exp,f,c
  2132  0017C2  0E01               	movlw	1
  2133  0017C4  2601               	addwf	___ftpack@arg,f,c
  2134  0017C6  0E00               	movlw	0
  2135  0017C8  2202               	addwfc	___ftpack@arg+1,f,c
  2136  0017CA  0E00               	movlw	0
  2137  0017CC  2203               	addwfc	___ftpack@arg+2,f,c
  2138  0017CE  90D8               	bcf	status,0,c
  2139  0017D0  3203               	rrcf	___ftpack@arg+2,f,c
  2140  0017D2  3202               	rrcf	___ftpack@arg+1,f,c
  2141  0017D4  3201               	rrcf	___ftpack@arg,f,c
  2142  0017D6  D000               	goto	l1878
  2143  0017D8                     l1878:
  2144  0017D8  0E00               	movlw	0
  2145  0017DA  1401               	andwf	___ftpack@arg,w,c
  2146  0017DC  6E06               	movwf	??___ftpack& (0+255),c
  2147  0017DE  0E00               	movlw	0
  2148  0017E0  1402               	andwf	___ftpack@arg+1,w,c
  2149  0017E2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2150  0017E4  0EFF               	movlw	255
  2151  0017E6  1403               	andwf	___ftpack@arg+2,w,c
  2152  0017E8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2153  0017EA  5006               	movf	??___ftpack,w,c
  2154  0017EC  1007               	iorwf	??___ftpack+1,w,c
  2155  0017EE  1008               	iorwf	??___ftpack+2,w,c
  2156  0017F0  B4D8               	btfsc	status,2,c
  2157  0017F2  D008               	goto	l1882
  2158  0017F4  D7E5               	goto	l1874
  2159  0017F6  D006               	goto	l1882
  2160  0017F8                     l1880:
  2161  0017F8  0604               	decf	___ftpack@exp,f,c
  2162  0017FA  90D8               	bcf	status,0,c
  2163  0017FC  3601               	rlcf	___ftpack@arg,f,c
  2164  0017FE  3602               	rlcf	___ftpack@arg+1,f,c
  2165  001800  3603               	rlcf	___ftpack@arg+2,f,c
  2166  001802  D000               	goto	l1882
  2167  001804                     l1882:
  2168  001804  BE02               	btfsc	___ftpack@arg+1,7,c
  2169  001806  D004               	goto	l832
  2170  001808  0E02               	movlw	2
  2171  00180A  6004               	cpfslt	___ftpack@exp,c
  2172  00180C  D7F5               	goto	l1880
  2173  00180E  D000               	goto	l832
  2174  001810                     l832:
  2175  001810  B004               	btfsc	___ftpack@exp,0,c
  2176  001812  D002               	goto	l1888
  2177  001814  9E02               	bcf	___ftpack@arg+1,7,c
  2178  001816  D000               	goto	l1888
  2179  001818                     l1888:
  2180  001818  90D8               	bcf	status,0,c
  2181  00181A  3204               	rrcf	___ftpack@exp,f,c
  2182  00181C  5004               	movf	___ftpack@exp,w,c
  2183  00181E  1203               	iorwf	___ftpack@arg+2,f,c
  2184  001820  5005               	movf	___ftpack@sign,w,c
  2185  001822  B4D8               	btfsc	status,2,c
  2186  001824  D002               	goto	l1894
  2187  001826  8E03               	bsf	___ftpack@arg+2,7,c
  2188  001828  D000               	goto	l1894
  2189  00182A                     l1894:
  2190  00182A  C001  F001         	movff	___ftpack@arg,?___ftpack
  2191  00182E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2192  001832  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2193  001836  0012               	return	
  2194  001838  0012               	return		;funcret
  2195  00183A                     __end_of___ftpack:
  2196                           	opt stack 0
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           prodh	equ	0xFF4
  2202                           prodl	equ	0xFF3
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           postdec1	equ	0xFE5
  2206                           fsr1l	equ	0xFE1
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function ___fttol *****************
  2210 ;; Defined at:
  2211 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\fttol.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  f1              3   42[COMRAM] float 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  lval            4   52[COMRAM] unsigned long 
  2216 ;;  exp1            1   56[COMRAM] unsigned char 
  2217 ;;  sign1           1   51[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  4   42[COMRAM] long 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;Total ram usage:       15 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_read_temperature
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text12
  2241  00157E                     __ptext12:
  2242                           	opt stack 0
  2243  00157E                     ___fttol:
  2244                           	opt stack 29
  2245                           
  2246                           ;incstack = 0
  2247  00157E  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  2248  001582  6A30               	clrf	(??___fttol+1)& (0+255),c
  2249  001584  6A31               	clrf	(??___fttol+2)& (0+255),c
  2250  001586  342C               	rlcf	___fttol@f1+1,w,c
  2251  001588  362F               	rlcf	??___fttol& (0+255),f,c
  2252  00158A  E301               	bnc	u1711
  2253  00158C  8030               	bsf	(??___fttol+1)& (0+255),0,c
  2254  00158E                     u1711:
  2255  00158E  502F               	movf	??___fttol,w,c
  2256  001590  6E39               	movwf	___fttol@exp1,c
  2257  001592  5039               	movf	___fttol@exp1,w,c
  2258  001594  A4D8               	btfss	status,2,c
  2259  001596  D009               	goto	l2350
  2260  001598  0E00               	movlw	0
  2261  00159A  6E2B               	movwf	?___fttol,c
  2262  00159C  0E00               	movlw	0
  2263  00159E  6E2C               	movwf	?___fttol+1,c
  2264  0015A0  0E00               	movlw	0
  2265  0015A2  6E2D               	movwf	?___fttol+2,c
  2266  0015A4  0E00               	movlw	0
  2267  0015A6  6E2E               	movwf	?___fttol+3,c
  2268  0015A8  0012               	return	
  2269  0015AA                     l2350:
  2270  0015AA  0E17               	movlw	23
  2271  0015AC  6E2F               	movwf	??___fttol& (0+255),c
  2272  0015AE  C02B  F030         	movff	___fttol@f1,??___fttol+1
  2273  0015B2  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  2274  0015B6  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  2275  0015BA  282F               	incf	??___fttol,w,c
  2276  0015BC  6E33               	movwf	(??___fttol+4)& (0+255),c
  2277  0015BE  D004               	goto	u1730
  2278  0015C0                     u1735:
  2279  0015C0  90D8               	bcf	status,0,c
  2280  0015C2  3232               	rrcf	??___fttol+3,f,c
  2281  0015C4  3231               	rrcf	??___fttol+2,f,c
  2282  0015C6  3230               	rrcf	??___fttol+1,f,c
  2283  0015C8                     u1730:
  2284  0015C8  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  2285  0015CA  D7FA               	goto	u1735
  2286  0015CC  5030               	movf	??___fttol+1,w,c
  2287  0015CE  6E34               	movwf	___fttol@sign1,c
  2288  0015D0  8E2C               	bsf	___fttol@f1+1,7,c
  2289  0015D2  0EFF               	movlw	255
  2290  0015D4  162B               	andwf	___fttol@f1,f,c
  2291  0015D6  0EFF               	movlw	255
  2292  0015D8  162C               	andwf	___fttol@f1+1,f,c
  2293  0015DA  0E00               	movlw	0
  2294  0015DC  162D               	andwf	___fttol@f1+2,f,c
  2295  0015DE  502B               	movf	___fttol@f1,w,c
  2296  0015E0  6E35               	movwf	___fttol@lval,c
  2297  0015E2  502C               	movf	___fttol@f1+1,w,c
  2298  0015E4  6E36               	movwf	___fttol@lval+1,c
  2299  0015E6  502D               	movf	___fttol@f1+2,w,c
  2300  0015E8  6E37               	movwf	___fttol@lval+2,c
  2301  0015EA  6A38               	clrf	___fttol@lval+3,c
  2302  0015EC  0E8E               	movlw	142
  2303  0015EE  5E39               	subwf	___fttol@exp1,f,c
  2304  0015F0  AE39               	btfss	___fttol@exp1,7,c
  2305  0015F2  D017               	goto	l2372
  2306  0015F4  5039               	movf	___fttol@exp1,w,c
  2307  0015F6  0A80               	xorlw	128
  2308  0015F8  0F8F               	addlw	143
  2309  0015FA  B0D8               	btfsc	status,0,c
  2310  0015FC  D00A               	goto	l2368
  2311  0015FE  0E00               	movlw	0
  2312  001600  6E2B               	movwf	?___fttol,c
  2313  001602  0E00               	movlw	0
  2314  001604  6E2C               	movwf	?___fttol+1,c
  2315  001606  0E00               	movlw	0
  2316  001608  6E2D               	movwf	?___fttol+2,c
  2317  00160A  0E00               	movlw	0
  2318  00160C  6E2E               	movwf	?___fttol+3,c
  2319  00160E  0012               	return	
  2320  001610  D000               	goto	l2368
  2321  001612                     l2368:
  2322  001612  90D8               	bcf	status,0,c
  2323  001614  3238               	rrcf	___fttol@lval+3,f,c
  2324  001616  3237               	rrcf	___fttol@lval+2,f,c
  2325  001618  3236               	rrcf	___fttol@lval+1,f,c
  2326  00161A  3235               	rrcf	___fttol@lval,f,c
  2327  00161C  3E39               	incfsz	___fttol@exp1,f,c
  2328  00161E  D7F9               	goto	l2368
  2329  001620  D019               	goto	l2382
  2330  001622                     l2372:
  2331  001622  0E17               	movlw	23
  2332  001624  6439               	cpfsgt	___fttol@exp1,c
  2333  001626  D011               	goto	l2380
  2334  001628  0E00               	movlw	0
  2335  00162A  6E2B               	movwf	?___fttol,c
  2336  00162C  0E00               	movlw	0
  2337  00162E  6E2C               	movwf	?___fttol+1,c
  2338  001630  0E00               	movlw	0
  2339  001632  6E2D               	movwf	?___fttol+2,c
  2340  001634  0E00               	movlw	0
  2341  001636  6E2E               	movwf	?___fttol+3,c
  2342  001638  0012               	return	
  2343  00163A  D007               	goto	l2380
  2344  00163C                     l2378:
  2345  00163C  90D8               	bcf	status,0,c
  2346  00163E  3635               	rlcf	___fttol@lval,f,c
  2347  001640  3636               	rlcf	___fttol@lval+1,f,c
  2348  001642  3637               	rlcf	___fttol@lval+2,f,c
  2349  001644  3638               	rlcf	___fttol@lval+3,f,c
  2350  001646  0639               	decf	___fttol@exp1,f,c
  2351  001648  D000               	goto	l2380
  2352  00164A                     l2380:
  2353  00164A  5039               	movf	___fttol@exp1,w,c
  2354  00164C  B4D8               	btfsc	status,2,c
  2355  00164E  D002               	goto	l2382
  2356  001650  D7F5               	goto	l2378
  2357  001652  D000               	goto	l2382
  2358  001654                     l2382:
  2359  001654  5034               	movf	___fttol@sign1,w,c
  2360  001656  B4D8               	btfsc	status,2,c
  2361  001658  D009               	goto	l2386
  2362  00165A  1E38               	comf	___fttol@lval+3,f,c
  2363  00165C  1E37               	comf	___fttol@lval+2,f,c
  2364  00165E  1E36               	comf	___fttol@lval+1,f,c
  2365  001660  6C35               	negf	___fttol@lval,c
  2366  001662  0E00               	movlw	0
  2367  001664  2236               	addwfc	___fttol@lval+1,f,c
  2368  001666  2237               	addwfc	___fttol@lval+2,f,c
  2369  001668  2238               	addwfc	___fttol@lval+3,f,c
  2370  00166A  D000               	goto	l2386
  2371  00166C                     l2386:
  2372  00166C  C035  F02B         	movff	___fttol@lval,?___fttol
  2373  001670  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  2374  001674  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  2375  001678  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  2376  00167C  0012               	return	
  2377  00167E  0012               	return		;funcret
  2378  001680                     __end_of___fttol:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           prodh	equ	0xFF4
  2385                           prodl	equ	0xFF3
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _caratula *****************
  2393 ;; Defined at:
  2394 ;;		line 12 in file "main.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;		None               void
  2401 ;; Registers used:
  2402 ;;		None
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text13
  2422  001D12                     __ptext13:
  2423                           	opt stack 0
  2424  001D12                     _caratula:
  2425                           	opt stack 30
  2426                           
  2427                           ;incstack = 0
  2428  001D12  0012               	return		;funcret
  2429  001D14                     __end_of_caratula:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           postinc0	equ	0xFEE
  2438                           wreg	equ	0xFE8
  2439                           postdec1	equ	0xFE5
  2440                           fsr1l	equ	0xFE1
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _Setup *****************
  2444 ;; Defined at:
  2445 ;;		line 32 in file "main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    3
  2466 ;; This function calls:
  2467 ;;		_Write_RTC
  2468 ;;		_lcd_init
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text14
  2475  001BC8                     __ptext14:
  2476                           	opt stack 0
  2477  001BC8                     _Setup:
  2478                           	opt stack 27
  2479                           
  2480                           ;main.c: 34: OSCTUNEbits.INTSRC=1;
  2481                           
  2482                           ;incstack = 0
  2483  001BC8  8E9B               	bsf	3995,7,c	;volatile
  2484                           
  2485                           ;main.c: 35: OSCTUNEbits.PLLEN=0;
  2486  001BCA  9C9B               	bcf	3995,6,c	;volatile
  2487                           
  2488                           ;main.c: 36: OSCCONbits.IRCF0=1;
  2489  001BCC  88D3               	bsf	4051,4,c	;volatile
  2490                           
  2491                           ;main.c: 37: OSCCONbits.IRCF1=1;
  2492  001BCE  8AD3               	bsf	4051,5,c	;volatile
  2493                           
  2494                           ;main.c: 38: OSCCONbits.IRCF2=1;
  2495  001BD0  8CD3               	bsf	4051,6,c	;volatile
  2496                           
  2497                           ;main.c: 39: OSCCONbits.SCS0=0;
  2498  001BD2  90D3               	bcf	4051,0,c	;volatile
  2499                           
  2500                           ;main.c: 40: OSCCONbits.SCS1=0;
  2501  001BD4  92D3               	bcf	4051,1,c	;volatile
  2502                           
  2503                           ;main.c: 41: TRISA = 0b00001000;
  2504  001BD6  0E08               	movlw	8
  2505  001BD8  6E92               	movwf	3986,c	;volatile
  2506                           
  2507                           ;main.c: 42: TRISB = 0;
  2508  001BDA  0E00               	movlw	0
  2509  001BDC  6E93               	movwf	3987,c	;volatile
  2510                           
  2511                           ;main.c: 43: TRISC = 0b0110111;
  2512  001BDE  0E37               	movlw	55
  2513  001BE0  6E94               	movwf	3988,c	;volatile
  2514                           
  2515                           ;main.c: 47: ANCON0=0b11111110;
  2516  001BE2  0EFE               	movlw	254
  2517  001BE4  010F               	movlb	15	; () banked
  2518  001BE6  6F48               	movwf	72,b	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;main.c: 49: ANCON1=0b11111111;
  2522  001BE8  010F               	movlb	15	; () banked
  2523  001BEA  6949               	setf	73,b	;volatile
  2524                           
  2525                           ;main.c: 50: ADCON0=0b01000000;
  2526  001BEC  0E40               	movlw	64
  2527  001BEE  6EC2               	movwf	4034,c	;volatile
  2528                           
  2529                           ;main.c: 51: ADCON1=0b00010000;
  2530  001BF0  0E10               	movlw	16
  2531  001BF2  6EC1               	movwf	4033,c	;volatile
  2532                           
  2533                           ; BSR set to: 15
  2534                           ;main.c: 52: RTCCFGbits.RTCEN=1;
  2535  001BF4  010F               	movlb	15	; () banked
  2536  001BF6  8F3F               	bsf	63,7,b	;volatile
  2537                           
  2538                           ; BSR set to: 15
  2539                           ;main.c: 53: RTCCFGbits.RTCWREN=1;
  2540  001BF8  010F               	movlb	15	; () banked
  2541  001BFA  8B3F               	bsf	63,5,b	;volatile
  2542                           
  2543                           ; BSR set to: 15
  2544                           ;main.c: 54: T1CONbits.T1OSCEN=1;
  2545  001BFC  86CD               	bsf	4045,3,c	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;main.c: 55: Write_RTC();
  2549  001BFE  EC65  F008         	call	_Write_RTC	;wreg free
  2550                           
  2551                           ;main.c: 56: lcd_init();
  2552  001C02  ECC4  F00C         	call	_lcd_init	;wreg free
  2553                           
  2554                           ;main.c: 58: LATBbits.LATB1 = 1;;
  2555  001C06  828A               	bsf	3978,1,c	;volatile
  2556  001C08  0012               	return		;funcret
  2557  001C0A                     __end_of_Setup:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1l	equ	0xFE1
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _lcd_init *****************
  2572 ;; Defined at:
  2573 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  i               1    4[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;		None               void
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;Total ram usage:        1 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		_Delay1KTCYx
  2596 ;;		_lcd_send_byte
  2597 ;;		_lcd_send_nibble
  2598 ;; This function is called by:
  2599 ;;		_Setup
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text15
  2604  001988                     __ptext15:
  2605                           	opt stack 0
  2606  001988                     _lcd_init:
  2607                           	opt stack 27
  2608                           
  2609                           ;unmc_lcd_216.c: 120: int8 i;
  2610                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2611                           
  2612                           ;incstack = 0
  2613  001988  9693               	bcf	3987,3,c	;volatile
  2614                           
  2615                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2616  00198A  9493               	bcf	3987,2,c	;volatile
  2617                           
  2618                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2619  00198C  968A               	bcf	3978,3,c	;volatile
  2620                           
  2621                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2622  00198E  948A               	bcf	3978,2,c	;volatile
  2623                           
  2624                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2625  001990  9893               	bcf	3987,4,c	;volatile
  2626                           
  2627                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2628  001992  9A93               	bcf	3987,5,c	;volatile
  2629                           
  2630                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2631  001994  9C93               	bcf	3987,6,c	;volatile
  2632                           
  2633                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2634  001996  9E93               	bcf	3987,7,c	;volatile
  2635                           
  2636                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2637  001998  0E0A               	movlw	10
  2638  00199A  EC69  F00E         	call	_Delay1KTCYx
  2639                           
  2640                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2641  00199E  0E0A               	movlw	10
  2642  0019A0  EC69  F00E         	call	_Delay1KTCYx
  2643                           
  2644                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2645  0019A4  0E0A               	movlw	10
  2646  0019A6  EC69  F00E         	call	_Delay1KTCYx
  2647                           
  2648                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2649  0019AA  0E00               	movlw	0
  2650  0019AC  6E05               	movwf	lcd_init@i,c
  2651  0019AE                     l2292:
  2652  0019AE  0E02               	movlw	2
  2653  0019B0  6405               	cpfsgt	lcd_init@i,c
  2654  0019B2  D001               	goto	l2296
  2655  0019B4  D008               	goto	l2302
  2656  0019B6                     l2296:
  2657                           
  2658                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2659  0019B6  0E03               	movlw	3
  2660  0019B8  EC04  F00D         	call	_lcd_send_nibble
  2661                           
  2662                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2663  0019BC  0E0A               	movlw	10
  2664  0019BE  EC69  F00E         	call	_Delay1KTCYx
  2665  0019C2  2A05               	incf	lcd_init@i,f,c
  2666  0019C4  D7F4               	goto	l2292
  2667  0019C6                     l2302:
  2668                           
  2669                           ;unmc_lcd_216.c: 146: }
  2670                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2671  0019C6  0E02               	movlw	2
  2672  0019C8  EC04  F00D         	call	_lcd_send_nibble
  2673                           
  2674                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2675  0019CC  0E00               	movlw	0
  2676  0019CE  6E05               	movwf	lcd_init@i,c
  2677  0019D0  0E03               	movlw	3
  2678  0019D2  6405               	cpfsgt	lcd_init@i,c
  2679  0019D4  D002               	goto	l2310
  2680  0019D6  0012               	return	
  2681  0019D8  0012               	return	
  2682  0019DA                     l2310:
  2683                           
  2684                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2685  0019DA  5005               	movf	lcd_init@i,w,c
  2686  0019DC  0D01               	mullw	1
  2687  0019DE  0E01               	movlw	low _LCD_INIT_STRING
  2688  0019E0  24F3               	addwf	prodl,w,c
  2689  0019E2  6EF6               	movwf	tblptrl,c
  2690  0019E4  0E0F               	movlw	high _LCD_INIT_STRING
  2691  0019E6  20F4               	addwfc	prodh,w,c
  2692  0019E8  6EF7               	movwf	tblptrh,c
  2693  0019EA                     	if	0	;There are less than 3 active tblptr bytes
  2694  0019EA                     	endif
  2695  0019EA  0008               	tblrd		*
  2696  0019EC  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2697  0019F0  0E00               	movlw	0
  2698  0019F2  EC23  F00E         	call	_lcd_send_byte
  2699                           
  2700                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2701  0019F6  0E0A               	movlw	10
  2702  0019F8  EC69  F00E         	call	_Delay1KTCYx
  2703  0019FC  2A05               	incf	lcd_init@i,f,c
  2704  0019FE  0E03               	movlw	3
  2705  001A00  6405               	cpfsgt	lcd_init@i,c
  2706  001A02  D7EB               	goto	l2310
  2707  001A04  0012               	return	
  2708  001A06  0012               	return		;funcret
  2709  001A08                     __end_of_lcd_init:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           postinc0	equ	0xFEE
  2718                           wreg	equ	0xFE8
  2719                           postdec1	equ	0xFE5
  2720                           fsr1l	equ	0xFE1
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _lcd_send_byte *****************
  2724 ;; Defined at:
  2725 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  address         1    wreg     unsigned char 
  2728 ;;  n               1    2[COMRAM] unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  address         1    3[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;		None               void
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2740 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    1
  2747 ;; This function calls:
  2748 ;;		_Delay100TCYx
  2749 ;;		_lcd_send_nibble
  2750 ;; This function is called by:
  2751 ;;		_lcd_init
  2752 ;;		_lcd_gotoxy
  2753 ;;		_lcd_putc
  2754 ;;		_lcd_comand
  2755 ;;		_lcd_setcursor_vb
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text16
  2760  001C46                     __ptext16:
  2761                           	opt stack 0
  2762  001C46                     _lcd_send_byte:
  2763                           	opt stack 27
  2764                           
  2765                           ;incstack = 0
  2766                           ;lcd_send_byte@address stored from wreg
  2767  001C46  6E04               	movwf	lcd_send_byte@address,c
  2768                           
  2769                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2770  001C48  968A               	bcf	3978,3,c	;volatile
  2771                           
  2772                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2773  001C4A  0E02               	movlw	2
  2774  001C4C  EC60  F00E         	call	_Delay100TCYx
  2775                           
  2776                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2777  001C50  9893               	bcf	3987,4,c	;volatile
  2778                           
  2779                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2780  001C52  9A93               	bcf	3987,5,c	;volatile
  2781                           
  2782                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2783  001C54  9C93               	bcf	3987,6,c	;volatile
  2784                           
  2785                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2786  001C56  9E93               	bcf	3987,7,c	;volatile
  2787                           
  2788                           ;unmc_lcd_216.c: 101: if(address)
  2789  001C58  5004               	movf	lcd_send_byte@address,w,c
  2790  001C5A  B4D8               	btfsc	status,2,c
  2791  001C5C  D002               	goto	l143
  2792                           
  2793                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2794  001C5E  868A               	bsf	3978,3,c	;volatile
  2795  001C60  D001               	goto	l144
  2796  001C62                     l143:
  2797                           
  2798                           ;unmc_lcd_216.c: 103: else
  2799                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2800  001C62  968A               	bcf	3978,3,c	;volatile
  2801  001C64                     l144:
  2802                           
  2803                           ;unmc_lcd_216.c: 106: __nop();
  2804  001C64  F000               	nop	
  2805                           
  2806                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2807  001C66  3803               	swapf	lcd_send_byte@n,w,c
  2808  001C68  0B0F               	andlw	15
  2809  001C6A  EC04  F00D         	call	_lcd_send_nibble
  2810                           
  2811                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2812  001C6E  5003               	movf	lcd_send_byte@n,w,c
  2813  001C70  0B0F               	andlw	15
  2814  001C72  EC04  F00D         	call	_lcd_send_nibble
  2815  001C76  0012               	return		;funcret
  2816  001C78                     __end_of_lcd_send_byte:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           postinc0	equ	0xFEE
  2825                           wreg	equ	0xFE8
  2826                           postdec1	equ	0xFE5
  2827                           fsr1l	equ	0xFE1
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _lcd_send_nibble *****************
  2831 ;; Defined at:
  2832 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  nibble          1    wreg     unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  nibble          1    1[COMRAM] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_lcd_send_byte
  2856 ;;		_lcd_init
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text17
  2861  001A08                     __ptext17:
  2862                           	opt stack 0
  2863  001A08                     _lcd_send_nibble:
  2864                           	opt stack 28
  2865                           
  2866                           ;incstack = 0
  2867                           ;lcd_send_nibble@nibble stored from wreg
  2868  001A08  6E02               	movwf	lcd_send_nibble@nibble,c
  2869                           
  2870                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2871  001A0A  A002               	btfss	lcd_send_nibble@nibble,0,c
  2872  001A0C  D003               	goto	u10
  2873  001A0E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2874  001A10  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2875  001A12  D001               	goto	u28
  2876  001A14                     u10:
  2877  001A14  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2878  001A16                     u28:
  2879  001A16  3A01               	swapf	??_lcd_send_nibble,f,c
  2880  001A18  508A               	movf	3978,w,c	;volatile
  2881  001A1A  1801               	xorwf	??_lcd_send_nibble,w,c
  2882  001A1C  0BEF               	andlw	-17
  2883  001A1E  1801               	xorwf	??_lcd_send_nibble,w,c
  2884  001A20  6E8A               	movwf	3978,c	;volatile
  2885                           
  2886                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2887  001A22  A202               	btfss	lcd_send_nibble@nibble,1,c
  2888  001A24  D003               	goto	u30
  2889  001A26  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2890  001A28  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2891  001A2A  D001               	goto	u48
  2892  001A2C                     u30:
  2893  001A2C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2894  001A2E                     u48:
  2895  001A2E  3A01               	swapf	??_lcd_send_nibble,f,c
  2896  001A30  4601               	rlncf	??_lcd_send_nibble,f,c
  2897  001A32  508A               	movf	3978,w,c	;volatile
  2898  001A34  1801               	xorwf	??_lcd_send_nibble,w,c
  2899  001A36  0BDF               	andlw	-33
  2900  001A38  1801               	xorwf	??_lcd_send_nibble,w,c
  2901  001A3A  6E8A               	movwf	3978,c	;volatile
  2902                           
  2903                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2904  001A3C  A402               	btfss	lcd_send_nibble@nibble,2,c
  2905  001A3E  D003               	goto	u50
  2906  001A40  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2907  001A42  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2908  001A44  D001               	goto	u68
  2909  001A46                     u50:
  2910  001A46  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2911  001A48                     u68:
  2912  001A48  3A01               	swapf	??_lcd_send_nibble,f,c
  2913  001A4A  4601               	rlncf	??_lcd_send_nibble,f,c
  2914  001A4C  4601               	rlncf	??_lcd_send_nibble,f,c
  2915  001A4E  508A               	movf	3978,w,c	;volatile
  2916  001A50  1801               	xorwf	??_lcd_send_nibble,w,c
  2917  001A52  0BBF               	andlw	-65
  2918  001A54  1801               	xorwf	??_lcd_send_nibble,w,c
  2919  001A56  6E8A               	movwf	3978,c	;volatile
  2920                           
  2921                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2922  001A58  A602               	btfss	lcd_send_nibble@nibble,3,c
  2923  001A5A  D003               	goto	u70
  2924  001A5C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2925  001A5E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2926  001A60  D001               	goto	u88
  2927  001A62                     u70:
  2928  001A62  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2929  001A64                     u88:
  2930  001A64  3201               	rrcf	??_lcd_send_nibble,f,c
  2931  001A66  3201               	rrcf	??_lcd_send_nibble,f,c
  2932  001A68  508A               	movf	3978,w,c	;volatile
  2933  001A6A  1801               	xorwf	??_lcd_send_nibble,w,c
  2934  001A6C  0B7F               	andlw	-129
  2935  001A6E  1801               	xorwf	??_lcd_send_nibble,w,c
  2936  001A70  6E8A               	movwf	3978,c	;volatile
  2937                           
  2938                           ;unmc_lcd_216.c: 32: __nop();
  2939  001A72  F000               	nop	
  2940                           
  2941                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2942  001A74  848A               	bsf	3978,2,c	;volatile
  2943                           
  2944                           ;unmc_lcd_216.c: 34: __nop();__nop();
  2945  001A76  F000               	nop	
  2946  001A78  F000               	nop	
  2947                           
  2948                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  2949  001A7A  948A               	bcf	3978,2,c	;volatile
  2950  001A7C  0012               	return		;funcret
  2951  001A7E                     __end_of_lcd_send_nibble:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           postinc0	equ	0xFEE
  2960                           wreg	equ	0xFE8
  2961                           postdec1	equ	0xFE5
  2962                           fsr1l	equ	0xFE1
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _Delay100TCYx *****************
  2966 ;; Defined at:
  2967 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  unit            1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  unit            1    0[COMRAM] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;		None               void
  2974 ;; Registers used:
  2975 ;;		wreg
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;Total ram usage:        1 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_lcd_send_byte
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text18
  2995  001CC0                     __ptext18:
  2996                           	opt stack 0
  2997  001CC0                     _Delay100TCYx:
  2998                           	opt stack 27
  2999                           
  3000                           ;incstack = 0
  3001                           ;Delay100TCYx@unit stored from wreg
  3002  001CC0  6E01               	movwf	Delay100TCYx@unit,c
  3003  001CC2  0E21               	movlw	33
  3004  001CC4                     u1927:
  3005  001CC4  2EE8               	decfsz	wreg,f,c
  3006  001CC6  D7FE               	goto	u1927
  3007  001CC8  F000               	nop	
  3008  001CCA  2E01               	decfsz	Delay100TCYx@unit,f,c
  3009  001CCC  D7FA               	goto	l1120
  3010  001CCE  0012               	return	
  3011  001CD0  0012               	return		;funcret
  3012  001CD2                     __end_of_Delay100TCYx:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           postinc0	equ	0xFEE
  3021                           wreg	equ	0xFE8
  3022                           postdec1	equ	0xFE5
  3023                           fsr1l	equ	0xFE1
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _Delay1KTCYx *****************
  3027 ;; Defined at:
  3028 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  unit            1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  unit            1    0[COMRAM] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;		None               void
  3035 ;; Registers used:
  3036 ;;		wreg
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;Total ram usage:        1 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_lcd_init
  3052 ;;		_DelayPORXLCD
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text19
  3057  001CD2                     __ptext19:
  3058                           	opt stack 0
  3059  001CD2                     _Delay1KTCYx:
  3060                           	opt stack 28
  3061                           
  3062                           ;incstack = 0
  3063                           ;Delay1KTCYx@unit stored from wreg
  3064  001CD2  6E01               	movwf	Delay1KTCYx@unit,c
  3065  001CD4  0EFA               	movlw	250
  3066  001CD6                     u1937:
  3067  001CD6  F000               	nop	
  3068  001CD8  2EE8               	decfsz	wreg,f,c
  3069  001CDA  D7FD               	goto	u1937
  3070  001CDC  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3071  001CDE  D7FA               	goto	l1186
  3072  001CE0  0012               	return	
  3073  001CE2  0012               	return		;funcret
  3074  001CE4                     __end_of_Delay1KTCYx:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           postdec1	equ	0xFE5
  3085                           fsr1l	equ	0xFE1
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _Write_RTC *****************
  3089 ;; Defined at:
  3090 ;;		line 22 in file "Unimic/sources/unmc_rtcc_01.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    2
  3111 ;; This function calls:
  3112 ;;		_RtccWrOn
  3113 ;;		_RtccWriteDate
  3114 ;;		_RtccWriteTime
  3115 ;;		___awdiv
  3116 ;; This function is called by:
  3117 ;;		_Setup
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text20
  3122  0010CA                     __ptext20:
  3123                           	opt stack 0
  3124  0010CA                     _Write_RTC:
  3125                           	opt stack 27
  3126                           
  3127                           ;unmc_rtcc_01.c: 24: RtccWrOn();
  3128                           
  3129                           ;incstack = 0
  3130  0010CA  EC72  F00E         	call	_RtccWrOn	;wreg free
  3131                           
  3132                           ;unmc_rtcc_01.c: 26: PIE3bits.RTCCIE=1;
  3133  0010CE  80A3               	bsf	4003,0,c	;volatile
  3134                           
  3135                           ;unmc_rtcc_01.c: 27: segundo_d=segundo/10;
  3136  0010D0  C04F  F001         	movff	_segundo,___awdiv@dividend
  3137  0010D4  C050  F002         	movff	_segundo+1,___awdiv@dividend+1
  3138  0010D8  0E00               	movlw	0
  3139  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3140  0010DC  0E0A               	movlw	10
  3141  0010DE  6E03               	movwf	___awdiv@divisor,c
  3142  0010E0  EC79  F00C         	call	___awdiv	;wreg free
  3143  0010E4  5001               	movf	?___awdiv,w,c
  3144  0010E6  6E5E               	movwf	_segundo_d,c
  3145                           
  3146                           ;unmc_rtcc_01.c: 28: segundo_u=segundo-segundo_d*10;
  3147  0010E8  505E               	movf	_segundo_d,w,c
  3148  0010EA  0D0A               	mullw	10
  3149  0010EC  50F3               	movf	prodl,w,c
  3150  0010EE  0800               	sublw	0
  3151  0010F0  244F               	addwf	_segundo,w,c
  3152  0010F2  0100               	movlb	0	; () banked
  3153  0010F4  6FA2               	movwf	_segundo_u& (0+255),b
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;unmc_rtcc_01.c: 29: RtccTime.f.sec =segundo_d*16+segundo_u;
  3157  0010F6  505E               	movf	_segundo_d,w,c
  3158  0010F8  0D10               	mullw	16
  3159  0010FA  50F3               	movf	prodl,w,c
  3160  0010FC  0100               	movlb	0	; () banked
  3161  0010FE  25A2               	addwf	_segundo_u& (0+255),w,b
  3162  001100  6E56               	movwf	_RtccTime+1,c
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;unmc_rtcc_01.c: 30: minuto_d=minuto/10;
  3166  001102  C04D  F001         	movff	_minuto,___awdiv@dividend
  3167  001106  C04E  F002         	movff	_minuto+1,___awdiv@dividend+1
  3168  00110A  0E00               	movlw	0
  3169  00110C  6E04               	movwf	___awdiv@divisor+1,c
  3170  00110E  0E0A               	movlw	10
  3171  001110  6E03               	movwf	___awdiv@divisor,c
  3172  001112  EC79  F00C         	call	___awdiv	;wreg free
  3173  001116  5001               	movf	?___awdiv,w,c
  3174  001118  6E5D               	movwf	_minuto_d,c
  3175                           
  3176                           ;unmc_rtcc_01.c: 31: minuto_u=minuto-minuto_d*10;
  3177  00111A  505D               	movf	_minuto_d,w,c
  3178  00111C  0D0A               	mullw	10
  3179  00111E  50F3               	movf	prodl,w,c
  3180  001120  0800               	sublw	0
  3181  001122  244D               	addwf	_minuto,w,c
  3182  001124  0100               	movlb	0	; () banked
  3183  001126  6FA1               	movwf	_minuto_u& (0+255),b
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;unmc_rtcc_01.c: 32: RtccTime.f.min =minuto_d*16+minuto_u;
  3187  001128  505D               	movf	_minuto_d,w,c
  3188  00112A  0D10               	mullw	16
  3189  00112C  50F3               	movf	prodl,w,c
  3190  00112E  0100               	movlb	0	; () banked
  3191  001130  25A1               	addwf	_minuto_u& (0+255),w,b
  3192  001132  6E57               	movwf	_RtccTime+2,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;unmc_rtcc_01.c: 33: hora_d=hora/10;
  3196  001134  C049  F001         	movff	_hora,___awdiv@dividend
  3197  001138  C04A  F002         	movff	_hora+1,___awdiv@dividend+1
  3198  00113C  0E00               	movlw	0
  3199  00113E  6E04               	movwf	___awdiv@divisor+1,c
  3200  001140  0E0A               	movlw	10
  3201  001142  6E03               	movwf	___awdiv@divisor,c
  3202  001144  EC79  F00C         	call	___awdiv	;wreg free
  3203  001148  5001               	movf	?___awdiv,w,c
  3204  00114A  6E5B               	movwf	_hora_d,c
  3205                           
  3206                           ;unmc_rtcc_01.c: 34: hora_u=hora-hora_d*10;
  3207  00114C  505B               	movf	_hora_d,w,c
  3208  00114E  0D0A               	mullw	10
  3209  001150  50F3               	movf	prodl,w,c
  3210  001152  0800               	sublw	0
  3211  001154  2449               	addwf	_hora,w,c
  3212  001156  0100               	movlb	0	; () banked
  3213  001158  6F9F               	movwf	_hora_u& (0+255),b
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;unmc_rtcc_01.c: 35: RtccTime.f.hour=hora_d*16+hora_u;
  3217  00115A  505B               	movf	_hora_d,w,c
  3218  00115C  0D10               	mullw	16
  3219  00115E  50F3               	movf	prodl,w,c
  3220  001160  0100               	movlb	0	; () banked
  3221  001162  259F               	addwf	_hora_u& (0+255),w,b
  3222  001164  6E58               	movwf	_RtccTime+3,c
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;unmc_rtcc_01.c: 36: anio_d=anio/10;
  3226  001166  C043  F001         	movff	_anio,___awdiv@dividend
  3227  00116A  C044  F002         	movff	_anio+1,___awdiv@dividend+1
  3228  00116E  0E00               	movlw	0
  3229  001170  6E04               	movwf	___awdiv@divisor+1,c
  3230  001172  0E0A               	movlw	10
  3231  001174  6E03               	movwf	___awdiv@divisor,c
  3232  001176  EC79  F00C         	call	___awdiv	;wreg free
  3233  00117A  5001               	movf	?___awdiv,w,c
  3234  00117C  6E59               	movwf	_anio_d,c
  3235                           
  3236                           ;unmc_rtcc_01.c: 37: anio_u=anio-anio_d*10;
  3237  00117E  5059               	movf	_anio_d,w,c
  3238  001180  0D0A               	mullw	10
  3239  001182  50F3               	movf	prodl,w,c
  3240  001184  0800               	sublw	0
  3241  001186  2443               	addwf	_anio,w,c
  3242  001188  0100               	movlb	0	; () banked
  3243  00118A  6F9C               	movwf	_anio_u& (0+255),b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;unmc_rtcc_01.c: 38: RtccDate.f.year=anio_d*16+anio_u;
  3247  00118C  5059               	movf	_anio_d,w,c
  3248  00118E  0D10               	mullw	16
  3249  001190  50F3               	movf	prodl,w,c
  3250  001192  0100               	movlb	0	; () banked
  3251  001194  259C               	addwf	_anio_u& (0+255),w,b
  3252  001196  6E54               	movwf	_RtccDate+3,c
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;unmc_rtcc_01.c: 39: mes_d=mes/10;
  3256  001198  C04B  F001         	movff	_mes,___awdiv@dividend
  3257  00119C  C04C  F002         	movff	_mes+1,___awdiv@dividend+1
  3258  0011A0  0E00               	movlw	0
  3259  0011A2  6E04               	movwf	___awdiv@divisor+1,c
  3260  0011A4  0E0A               	movlw	10
  3261  0011A6  6E03               	movwf	___awdiv@divisor,c
  3262  0011A8  EC79  F00C         	call	___awdiv	;wreg free
  3263  0011AC  5001               	movf	?___awdiv,w,c
  3264  0011AE  6E5C               	movwf	_mes_d,c
  3265                           
  3266                           ;unmc_rtcc_01.c: 40: mes_u=mes-mes_d*10;
  3267  0011B0  505C               	movf	_mes_d,w,c
  3268  0011B2  0D0A               	mullw	10
  3269  0011B4  50F3               	movf	prodl,w,c
  3270  0011B6  0800               	sublw	0
  3271  0011B8  244B               	addwf	_mes,w,c
  3272  0011BA  0100               	movlb	0	; () banked
  3273  0011BC  6FA0               	movwf	_mes_u& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;unmc_rtcc_01.c: 41: RtccDate.f.mon=mes_d*16+mes_u;
  3277  0011BE  505C               	movf	_mes_d,w,c
  3278  0011C0  0D10               	mullw	16
  3279  0011C2  50F3               	movf	prodl,w,c
  3280  0011C4  0100               	movlb	0	; () banked
  3281  0011C6  25A0               	addwf	_mes_u& (0+255),w,b
  3282  0011C8  6E53               	movwf	_RtccDate+2,c
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;unmc_rtcc_01.c: 42: fecha_d=dia/10;
  3286  0011CA  C045  F001         	movff	_dia,___awdiv@dividend
  3287  0011CE  C046  F002         	movff	_dia+1,___awdiv@dividend+1
  3288  0011D2  0E00               	movlw	0
  3289  0011D4  6E04               	movwf	___awdiv@divisor+1,c
  3290  0011D6  0E0A               	movlw	10
  3291  0011D8  6E03               	movwf	___awdiv@divisor,c
  3292  0011DA  EC79  F00C         	call	___awdiv	;wreg free
  3293  0011DE  5001               	movf	?___awdiv,w,c
  3294  0011E0  6E5A               	movwf	_fecha_d,c
  3295                           
  3296                           ;unmc_rtcc_01.c: 43: fecha_u=dia-fecha_d*10;
  3297  0011E2  505A               	movf	_fecha_d,w,c
  3298  0011E4  0D0A               	mullw	10
  3299  0011E6  50F3               	movf	prodl,w,c
  3300  0011E8  0800               	sublw	0
  3301  0011EA  2445               	addwf	_dia,w,c
  3302  0011EC  0100               	movlb	0	; () banked
  3303  0011EE  6F9E               	movwf	_fecha_u& (0+255),b
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;unmc_rtcc_01.c: 44: RtccDate.f.mday=fecha_d*16+fecha_u;
  3307  0011F0  505A               	movf	_fecha_d,w,c
  3308  0011F2  0D10               	mullw	16
  3309  0011F4  50F3               	movf	prodl,w,c
  3310  0011F6  0100               	movlb	0	; () banked
  3311  0011F8  259E               	addwf	_fecha_u& (0+255),w,b
  3312  0011FA  6E52               	movwf	_RtccDate+1,c
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;unmc_rtcc_01.c: 45: dia_semana=diasem;
  3316  0011FC  C047  F09D         	movff	_diasem,_dia_semana
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;unmc_rtcc_01.c: 46: RtccDate.f.wday =diasem;
  3320  001200  C047  F051         	movff	_diasem,_RtccDate
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;unmc_rtcc_01.c: 47: RtccWriteTime(&RtccTime,1);
  3324  001204  0E55               	movlw	low _RtccTime
  3325  001206  6E01               	movwf	RtccWriteTime@pTm,c
  3326  001208  0E00               	movlw	high _RtccTime
  3327  00120A  6E02               	movwf	RtccWriteTime@pTm+1,c
  3328  00120C  0E01               	movlw	1
  3329  00120E  6E03               	movwf	RtccWriteTime@di,c
  3330  001210  ECB8  F009         	call	_RtccWriteTime	;wreg free
  3331                           
  3332                           ;unmc_rtcc_01.c: 48: RtccWriteDate(&RtccDate,1);
  3333  001214  0E51               	movlw	low _RtccDate
  3334  001216  6E01               	movwf	RtccWriteDate@pDt,c
  3335  001218  0E00               	movlw	high _RtccDate
  3336  00121A  6E02               	movwf	RtccWriteDate@pDt+1,c
  3337  00121C  0E01               	movlw	1
  3338  00121E  6E03               	movwf	RtccWriteDate@di,c
  3339  001220  EC15  F009         	call	_RtccWriteDate	;wreg free
  3340                           
  3341                           ;unmc_rtcc_01.c: 49: (RTCCFGbits.RTCEN=1);
  3342  001224  010F               	movlb	15	; () banked
  3343  001226  8F3F               	bsf	63,7,b	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346  001228  0012               	return		;funcret
  3347  00122A                     __end_of_Write_RTC:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           postinc0	equ	0xFEE
  3356                           wreg	equ	0xFE8
  3357                           postdec1	equ	0xFE5
  3358                           fsr1l	equ	0xFE1
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function ___awdiv *****************
  3362 ;; Defined at:
  3363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  dividend        2    0[COMRAM] int 
  3366 ;;  divisor         2    2[COMRAM] int 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  quotient        2    6[COMRAM] int 
  3369 ;;  sign            1    5[COMRAM] unsigned char 
  3370 ;;  counter         1    4[COMRAM] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2    0[COMRAM] int 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;Total ram usage:        8 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_Write_RTC
  3390 ;;		_write
  3391 ;;		__delay_s
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text21
  3396  0018F2                     __ptext21:
  3397                           	opt stack 0
  3398  0018F2                     ___awdiv:
  3399                           	opt stack 29
  3400                           
  3401                           ; BSR set to: 15
  3402                           ;incstack = 0
  3403  0018F2  0E00               	movlw	0
  3404  0018F4  6E06               	movwf	___awdiv@sign,c
  3405  0018F6  AE04               	btfss	___awdiv@divisor+1,7,c
  3406  0018F8  D007               	goto	l2188
  3407  0018FA  6C03               	negf	___awdiv@divisor,c
  3408  0018FC  1E04               	comf	___awdiv@divisor+1,f,c
  3409  0018FE  B0D8               	btfsc	status,0,c
  3410  001900  2A04               	incf	___awdiv@divisor+1,f,c
  3411  001902  0E01               	movlw	1
  3412  001904  6E06               	movwf	___awdiv@sign,c
  3413  001906  D000               	goto	l2188
  3414  001908                     l2188:
  3415  001908  AE02               	btfss	___awdiv@dividend+1,7,c
  3416  00190A  D007               	goto	l2194
  3417  00190C  6C01               	negf	___awdiv@dividend,c
  3418  00190E  1E02               	comf	___awdiv@dividend+1,f,c
  3419  001910  B0D8               	btfsc	status,0,c
  3420  001912  2A02               	incf	___awdiv@dividend+1,f,c
  3421  001914  0E01               	movlw	1
  3422  001916  1A06               	xorwf	___awdiv@sign,f,c
  3423  001918  D000               	goto	l2194
  3424  00191A                     l2194:
  3425  00191A  0E00               	movlw	0
  3426  00191C  6E08               	movwf	___awdiv@quotient+1,c
  3427  00191E  0E00               	movlw	0
  3428  001920  6E07               	movwf	___awdiv@quotient,c
  3429  001922  5003               	movf	___awdiv@divisor,w,c
  3430  001924  1004               	iorwf	___awdiv@divisor+1,w,c
  3431  001926  B4D8               	btfsc	status,2,c
  3432  001928  D021               	goto	l2216
  3433  00192A  0E01               	movlw	1
  3434  00192C  6E05               	movwf	___awdiv@counter,c
  3435  00192E  D005               	goto	l2202
  3436  001930                     l2200:
  3437  001930  90D8               	bcf	status,0,c
  3438  001932  3603               	rlcf	___awdiv@divisor,f,c
  3439  001934  3604               	rlcf	___awdiv@divisor+1,f,c
  3440  001936  2A05               	incf	___awdiv@counter,f,c
  3441  001938  D000               	goto	l2202
  3442  00193A                     l2202:
  3443  00193A  BE04               	btfsc	___awdiv@divisor+1,7,c
  3444  00193C  D002               	goto	l2204
  3445  00193E  D7F8               	goto	l2200
  3446  001940  D000               	goto	l2204
  3447  001942                     l2204:
  3448  001942  90D8               	bcf	status,0,c
  3449  001944  3607               	rlcf	___awdiv@quotient,f,c
  3450  001946  3608               	rlcf	___awdiv@quotient+1,f,c
  3451  001948  5003               	movf	___awdiv@divisor,w,c
  3452  00194A  5C01               	subwf	___awdiv@dividend,w,c
  3453  00194C  5004               	movf	___awdiv@divisor+1,w,c
  3454  00194E  5802               	subwfb	___awdiv@dividend+1,w,c
  3455  001950  A0D8               	btfss	status,0,c
  3456  001952  D006               	goto	l2212
  3457  001954  5003               	movf	___awdiv@divisor,w,c
  3458  001956  5E01               	subwf	___awdiv@dividend,f,c
  3459  001958  5004               	movf	___awdiv@divisor+1,w,c
  3460  00195A  5A02               	subwfb	___awdiv@dividend+1,f,c
  3461  00195C  8007               	bsf	___awdiv@quotient,0,c
  3462  00195E  D000               	goto	l2212
  3463  001960                     l2212:
  3464  001960  90D8               	bcf	status,0,c
  3465  001962  3204               	rrcf	___awdiv@divisor+1,f,c
  3466  001964  3203               	rrcf	___awdiv@divisor,f,c
  3467  001966  2E05               	decfsz	___awdiv@counter,f,c
  3468  001968  D7EC               	goto	l2204
  3469  00196A  D000               	goto	l2216
  3470  00196C                     l2216:
  3471  00196C  5006               	movf	___awdiv@sign,w,c
  3472  00196E  B4D8               	btfsc	status,2,c
  3473  001970  D005               	goto	l2220
  3474  001972  6C07               	negf	___awdiv@quotient,c
  3475  001974  1E08               	comf	___awdiv@quotient+1,f,c
  3476  001976  B0D8               	btfsc	status,0,c
  3477  001978  2A08               	incf	___awdiv@quotient+1,f,c
  3478  00197A  D000               	goto	l2220
  3479  00197C                     l2220:
  3480  00197C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3481  001980  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3482  001984  0012               	return	
  3483  001986  0012               	return		;funcret
  3484  001988                     __end_of___awdiv:
  3485                           	opt stack 0
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           postdec1	equ	0xFE5
  3495                           fsr1l	equ	0xFE1
  3496                           status	equ	0xFD8
  3497                           
  3498 ;; *************** function _RtccWriteTime *****************
  3499 ;; Defined at:
  3500 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  pTm             2    0[COMRAM] PTR const struct .
  3503 ;;		 -> RtccTime(4), 
  3504 ;;  di              1    2[COMRAM] enum E7121
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  tempHourWDay    2    9[COMRAM] struct .
  3507 ;;  tempMinSec      2    7[COMRAM] struct .
  3508 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3509 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3510 ;;  wasOn           1    4[COMRAM] enum E7121
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      enum E7121
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3520 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;Total ram usage:       11 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    1
  3527 ;; This function calls:
  3528 ;;		_RtccWrOn
  3529 ;; This function is called by:
  3530 ;;		_Write_RTC
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text22
  3535  001370                     __ptext22:
  3536                           	opt stack 0
  3537  001370                     _RtccWriteTime:
  3538                           	opt stack 27
  3539                           
  3540                           ;incstack = 0
  3541  001370  0E00               	movlw	0
  3542  001372  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3543  001374  EE20 F002          	lfsr	2,2
  3544  001378  5001               	movf	RtccWriteTime@pTm,w,c
  3545  00137A  26D9               	addwf	fsr2l,f,c
  3546  00137C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3547  00137E  22DA               	addwfc	fsr2h,f,c
  3548  001380  0E5A               	movlw	90
  3549  001382  60DF               	cpfslt	indf2,c
  3550  001384  0012               	return	
  3551  001386  EE20 F001          	lfsr	2,1
  3552  00138A  5001               	movf	RtccWriteTime@pTm,w,c
  3553  00138C  26D9               	addwf	fsr2l,f,c
  3554  00138E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3555  001390  22DA               	addwfc	fsr2h,f,c
  3556  001392  0E5A               	movlw	90
  3557  001394  60DF               	cpfslt	indf2,c
  3558  001396  0012               	return	
  3559  001398  EE20 F003          	lfsr	2,3
  3560  00139C  5001               	movf	RtccWriteTime@pTm,w,c
  3561  00139E  26D9               	addwf	fsr2l,f,c
  3562  0013A0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3563  0013A2  22DA               	addwfc	fsr2h,f,c
  3564  0013A4  0E24               	movlw	36
  3565  0013A6  64DF               	cpfsgt	indf2,c
  3566  0013A8  D002               	goto	l1924
  3567  0013AA  0012               	return	
  3568                           
  3569                           ;	Return value of _RtccWriteTime is never used
  3570  0013AC  0012               	return	
  3571  0013AE                     l1924:
  3572  0013AE  EE20 F002          	lfsr	2,2
  3573  0013B2  5001               	movf	RtccWriteTime@pTm,w,c
  3574  0013B4  26D9               	addwf	fsr2l,f,c
  3575  0013B6  5002               	movf	RtccWriteTime@pTm+1,w,c
  3576  0013B8  22DA               	addwfc	fsr2h,f,c
  3577  0013BA  50DF               	movf	indf2,w,c
  3578  0013BC  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3579  0013BE  EE20 F001          	lfsr	2,1
  3580  0013C2  5001               	movf	RtccWriteTime@pTm,w,c
  3581  0013C4  26D9               	addwf	fsr2l,f,c
  3582  0013C6  5002               	movf	RtccWriteTime@pTm+1,w,c
  3583  0013C8  22DA               	addwfc	fsr2h,f,c
  3584  0013CA  50DF               	movf	indf2,w,c
  3585  0013CC  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3586  0013CE  5003               	movf	RtccWriteTime@di,w,c
  3587  0013D0  B4D8               	btfsc	status,2,c
  3588  0013D2  D002               	goto	l1930
  3589  0013D4  9CF2               	bcf	intcon,6,c	;volatile
  3590  0013D6  D000               	goto	l1930
  3591  0013D8                     l1930:
  3592  0013D8  0E00               	movlw	0
  3593  0013DA  BB3F               	btfsc	63,5,b	;volatile
  3594  0013DC  0E01               	movlw	1
  3595  0013DE  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3596  0013E0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3597  0013E2  A4D8               	btfss	status,2,c
  3598  0013E4  D003               	goto	l1934
  3599  0013E6  EC72  F00E         	call	_RtccWrOn	;wreg free
  3600  0013EA  D000               	goto	l1934
  3601  0013EC                     l1934:
  3602  0013EC  0E00               	movlw	0
  3603  0013EE  BF3F               	btfsc	63,7,b	;volatile
  3604  0013F0  0E01               	movlw	1
  3605  0013F2  6E05               	movwf	RtccWriteTime@wasOn,c
  3606  0013F4  5005               	movf	RtccWriteTime@wasOn,w,c
  3607  0013F6  B4D8               	btfsc	status,2,c
  3608  0013F8  D007               	goto	l1940
  3609  0013FA  0E00               	movlw	0
  3610  0013FC  BE91               	btfsc	3985,7,c	;volatile
  3611  0013FE  0E01               	movlw	1
  3612  001400  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3613  001402  010F               	movlb	15	; () banked
  3614  001404  9F3F               	bcf	63,7,b	;volatile
  3615  001406  D000               	goto	l1940
  3616  001408                     l1940:
  3617  001408  0EFC               	movlw	252
  3618  00140A  010F               	movlb	15	; () banked
  3619  00140C  173F               	andwf	63,f,b	;volatile
  3620  00140E  010F               	movlb	15	; () banked
  3621  001410  813F               	bsf	63,0,b	;volatile
  3622                           
  3623                           ; BSR set to: 15
  3624  001412  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3625                           
  3626                           ; BSR set to: 15
  3627  001416  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3628                           
  3629                           ; BSR set to: 15
  3630  00141A  EE20 F003          	lfsr	2,3
  3631  00141E  5001               	movf	RtccWriteTime@pTm,w,c
  3632  001420  26D9               	addwf	fsr2l,f,c
  3633  001422  5002               	movf	RtccWriteTime@pTm+1,w,c
  3634  001424  22DA               	addwfc	fsr2h,f,c
  3635  001426  50DF               	movf	indf2,w,c
  3636  001428  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3637                           
  3638                           ; BSR set to: 15
  3639  00142A  0EFC               	movlw	252
  3640  00142C  010F               	movlb	15	; () banked
  3641  00142E  173F               	andwf	63,f,b	;volatile
  3642                           
  3643                           ; BSR set to: 15
  3644  001430  010F               	movlb	15	; () banked
  3645  001432  813F               	bsf	63,0,b	;volatile
  3646                           
  3647                           ; BSR set to: 15
  3648  001434  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651  001438  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3652                           
  3653                           ; BSR set to: 15
  3654  00143C  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657  001440  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3658                           
  3659                           ; BSR set to: 15
  3660  001444  5005               	movf	RtccWriteTime@wasOn,w,c
  3661  001446  B4D8               	btfsc	status,2,c
  3662  001448  D00D               	goto	l1972
  3663                           
  3664                           ; BSR set to: 15
  3665  00144A  010F               	movlb	15	; () banked
  3666  00144C  8F3F               	bsf	63,7,b	;volatile
  3667                           
  3668                           ; BSR set to: 15
  3669  00144E  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3670  001450  B4D8               	btfsc	status,2,c
  3671  001452  D002               	goto	l1968
  3672                           
  3673                           ; BSR set to: 15
  3674  001454  8E91               	bsf	3985,7,c	;volatile
  3675  001456  D000               	goto	l1968
  3676  001458                     l1968:
  3677                           
  3678                           ; BSR set to: 15
  3679  001458  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3680  00145A  B4D8               	btfsc	status,2,c
  3681  00145C  D009               	goto	l1976
  3682                           
  3683                           ; BSR set to: 15
  3684  00145E  EC72  F00E         	call	_RtccWrOn	;wreg free
  3685  001462  D006               	goto	l1976
  3686  001464                     l1972:
  3687  001464  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3688  001466  A4D8               	btfss	status,2,c
  3689  001468  D003               	goto	l1976
  3690  00146A  010F               	movlb	15	; () banked
  3691  00146C  9B3F               	bcf	63,5,b	;volatile
  3692                           
  3693                           ; BSR set to: 15
  3694  00146E  D000               	goto	l1976
  3695  001470                     l1976:
  3696  001470  5003               	movf	RtccWriteTime@di,w,c
  3697  001472  B4D8               	btfsc	status,2,c
  3698  001474  0012               	return	
  3699  001476  8CF2               	bsf	intcon,6,c	;volatile
  3700  001478  0012               	return	
  3701                           
  3702                           ;	Return value of _RtccWriteTime is never used
  3703  00147A  0012               	return		;funcret
  3704  00147C                     __end_of_RtccWriteTime:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           postinc0	equ	0xFEE
  3714                           wreg	equ	0xFE8
  3715                           postdec1	equ	0xFE5
  3716                           fsr1l	equ	0xFE1
  3717                           indf2	equ	0xFDF
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722 ;; *************** function _RtccWriteDate *****************
  3723 ;; Defined at:
  3724 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  pDt             2    0[COMRAM] PTR const struct .
  3727 ;;		 -> RtccDate(4), 
  3728 ;;  di              1    2[COMRAM] enum E7121
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  tempHourWDay    2   11[COMRAM] struct .
  3731 ;;  tempDayMonth    2    9[COMRAM] struct .
  3732 ;;  tempYear        2    6[COMRAM] struct .
  3733 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3734 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3735 ;;  wasOn           1    4[COMRAM] enum E7121
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      enum E7121
  3738 ;; Registers used:
  3739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3745 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;Total ram usage:       13 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    1
  3752 ;; This function calls:
  3753 ;;		_RtccWrOn
  3754 ;; This function is called by:
  3755 ;;		_Write_RTC
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text23
  3760  00122A                     __ptext23:
  3761                           	opt stack 0
  3762  00122A                     _RtccWriteDate:
  3763                           	opt stack 27
  3764                           
  3765                           ;incstack = 0
  3766  00122A  0E00               	movlw	0
  3767  00122C  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3768  00122E  EE20 F002          	lfsr	2,2
  3769  001232  5001               	movf	RtccWriteDate@pDt,w,c
  3770  001234  26D9               	addwf	fsr2l,f,c
  3771  001236  5002               	movf	RtccWriteDate@pDt+1,w,c
  3772  001238  22DA               	addwfc	fsr2h,f,c
  3773  00123A  0E13               	movlw	19
  3774  00123C  60DF               	cpfslt	indf2,c
  3775  00123E  0012               	return	
  3776  001240  EE20 F002          	lfsr	2,2
  3777  001244  5001               	movf	RtccWriteDate@pDt,w,c
  3778  001246  26D9               	addwf	fsr2l,f,c
  3779  001248  5002               	movf	RtccWriteDate@pDt+1,w,c
  3780  00124A  22DA               	addwfc	fsr2h,f,c
  3781  00124C  50DF               	movf	indf2,w,c
  3782  00124E  B4D8               	btfsc	status,2,c
  3783  001250  0012               	return	
  3784  001252  EE20 F001          	lfsr	2,1
  3785  001256  5001               	movf	RtccWriteDate@pDt,w,c
  3786  001258  26D9               	addwf	fsr2l,f,c
  3787  00125A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3788  00125C  22DA               	addwfc	fsr2h,f,c
  3789  00125E  0E32               	movlw	50
  3790  001260  60DF               	cpfslt	indf2,c
  3791  001262  0012               	return	
  3792  001264  EE20 F001          	lfsr	2,1
  3793  001268  5001               	movf	RtccWriteDate@pDt,w,c
  3794  00126A  26D9               	addwf	fsr2l,f,c
  3795  00126C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3796  00126E  22DA               	addwfc	fsr2h,f,c
  3797  001270  50DF               	movf	indf2,w,c
  3798  001272  B4D8               	btfsc	status,2,c
  3799  001274  0012               	return	
  3800  001276  EE20 F003          	lfsr	2,3
  3801  00127A  5001               	movf	RtccWriteDate@pDt,w,c
  3802  00127C  26D9               	addwf	fsr2l,f,c
  3803  00127E  5002               	movf	RtccWriteDate@pDt+1,w,c
  3804  001280  22DA               	addwfc	fsr2h,f,c
  3805  001282  0E99               	movlw	153
  3806  001284  64DF               	cpfsgt	indf2,c
  3807  001286  D002               	goto	l1992
  3808  001288  0012               	return	
  3809                           
  3810                           ;	Return value of _RtccWriteDate is never used
  3811  00128A  0012               	return	
  3812  00128C                     l1992:
  3813  00128C  EE20 F003          	lfsr	2,3
  3814  001290  5001               	movf	RtccWriteDate@pDt,w,c
  3815  001292  26D9               	addwf	fsr2l,f,c
  3816  001294  5002               	movf	RtccWriteDate@pDt+1,w,c
  3817  001296  22DA               	addwfc	fsr2h,f,c
  3818  001298  50DF               	movf	indf2,w,c
  3819  00129A  6E07               	movwf	RtccWriteDate@tempYear,c
  3820  00129C  EE20 F001          	lfsr	2,1
  3821  0012A0  5001               	movf	RtccWriteDate@pDt,w,c
  3822  0012A2  26D9               	addwf	fsr2l,f,c
  3823  0012A4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3824  0012A6  22DA               	addwfc	fsr2h,f,c
  3825  0012A8  50DF               	movf	indf2,w,c
  3826  0012AA  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3827  0012AC  EE20 F002          	lfsr	2,2
  3828  0012B0  5001               	movf	RtccWriteDate@pDt,w,c
  3829  0012B2  26D9               	addwf	fsr2l,f,c
  3830  0012B4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3831  0012B6  22DA               	addwfc	fsr2h,f,c
  3832  0012B8  50DF               	movf	indf2,w,c
  3833  0012BA  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3834  0012BC  5003               	movf	RtccWriteDate@di,w,c
  3835  0012BE  B4D8               	btfsc	status,2,c
  3836  0012C0  D002               	goto	l1998
  3837  0012C2  9CF2               	bcf	intcon,6,c	;volatile
  3838  0012C4  D000               	goto	l1998
  3839  0012C6                     l1998:
  3840  0012C6  0E00               	movlw	0
  3841  0012C8  BB3F               	btfsc	63,5,b	;volatile
  3842  0012CA  0E01               	movlw	1
  3843  0012CC  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3844  0012CE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3845  0012D0  A4D8               	btfss	status,2,c
  3846  0012D2  D003               	goto	l2002
  3847  0012D4  EC72  F00E         	call	_RtccWrOn	;wreg free
  3848  0012D8  D000               	goto	l2002
  3849  0012DA                     l2002:
  3850  0012DA  0E00               	movlw	0
  3851  0012DC  BF3F               	btfsc	63,7,b	;volatile
  3852  0012DE  0E01               	movlw	1
  3853  0012E0  6E05               	movwf	RtccWriteDate@wasOn,c
  3854  0012E2  5005               	movf	RtccWriteDate@wasOn,w,c
  3855  0012E4  B4D8               	btfsc	status,2,c
  3856  0012E6  D007               	goto	l2008
  3857  0012E8  0E00               	movlw	0
  3858  0012EA  BE91               	btfsc	3985,7,c	;volatile
  3859  0012EC  0E01               	movlw	1
  3860  0012EE  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3861  0012F0  010F               	movlb	15	; () banked
  3862  0012F2  9F3F               	bcf	63,7,b	;volatile
  3863  0012F4  D000               	goto	l2008
  3864  0012F6                     l2008:
  3865  0012F6  0EFC               	movlw	252
  3866  0012F8  010F               	movlb	15	; () banked
  3867  0012FA  173F               	andwf	63,f,b	;volatile
  3868  0012FC  010F               	movlb	15	; () banked
  3869  0012FE  813F               	bsf	63,0,b	;volatile
  3870                           
  3871                           ; BSR set to: 15
  3872  001300  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3873                           
  3874                           ; BSR set to: 15
  3875  001304  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3876                           
  3877                           ; BSR set to: 15
  3878  001308  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3879  00130C  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3880  001310  50DF               	movf	indf2,w,c
  3881  001312  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3882                           
  3883                           ; BSR set to: 15
  3884  001314  0EFC               	movlw	252
  3885  001316  010F               	movlb	15	; () banked
  3886  001318  173F               	andwf	63,f,b	;volatile
  3887                           
  3888                           ; BSR set to: 15
  3889  00131A  0E03               	movlw	3
  3890  00131C  010F               	movlb	15	; () banked
  3891  00131E  133F               	iorwf	63,f,b	;volatile
  3892                           
  3893                           ; BSR set to: 15
  3894  001320  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3895                           
  3896                           ; BSR set to: 15
  3897  001324  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3898                           
  3899                           ; BSR set to: 15
  3900  001328  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3901                           
  3902                           ; BSR set to: 15
  3903  00132C  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3904                           
  3905                           ; BSR set to: 15
  3906  001330  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3907                           
  3908                           ; BSR set to: 15
  3909  001334  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3910                           
  3911                           ; BSR set to: 15
  3912  001338  5005               	movf	RtccWriteDate@wasOn,w,c
  3913  00133A  B4D8               	btfsc	status,2,c
  3914  00133C  D00D               	goto	l2044
  3915                           
  3916                           ; BSR set to: 15
  3917  00133E  010F               	movlb	15	; () banked
  3918  001340  8F3F               	bsf	63,7,b	;volatile
  3919                           
  3920                           ; BSR set to: 15
  3921  001342  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3922  001344  B4D8               	btfsc	status,2,c
  3923  001346  D002               	goto	l2040
  3924                           
  3925                           ; BSR set to: 15
  3926  001348  8E91               	bsf	3985,7,c	;volatile
  3927  00134A  D000               	goto	l2040
  3928  00134C                     l2040:
  3929                           
  3930                           ; BSR set to: 15
  3931  00134C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3932  00134E  B4D8               	btfsc	status,2,c
  3933  001350  D009               	goto	l2048
  3934                           
  3935                           ; BSR set to: 15
  3936  001352  EC72  F00E         	call	_RtccWrOn	;wreg free
  3937  001356  D006               	goto	l2048
  3938  001358                     l2044:
  3939  001358  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3940  00135A  A4D8               	btfss	status,2,c
  3941  00135C  D003               	goto	l2048
  3942  00135E  010F               	movlb	15	; () banked
  3943  001360  9B3F               	bcf	63,5,b	;volatile
  3944                           
  3945                           ; BSR set to: 15
  3946  001362  D000               	goto	l2048
  3947  001364                     l2048:
  3948  001364  5003               	movf	RtccWriteDate@di,w,c
  3949  001366  B4D8               	btfsc	status,2,c
  3950  001368  0012               	return	
  3951  00136A  9CF2               	bcf	intcon,6,c	;volatile
  3952  00136C  0012               	return	
  3953                           
  3954                           ;	Return value of _RtccWriteDate is never used
  3955  00136E  0012               	return		;funcret
  3956  001370                     __end_of_RtccWriteDate:
  3957                           	opt stack 0
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           postinc0	equ	0xFEE
  3966                           wreg	equ	0xFE8
  3967                           postdec1	equ	0xFE5
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _RtccWrOn *****************
  3975 ;; Defined at:
  3976 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  data            2    0        unsigned int 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, status,2
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_Write_RTC
  4000 ;;		_RtccWriteDate
  4001 ;;		_RtccWriteTime
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text24
  4006  001CE4                     __ptext24:
  4007                           	opt stack 0
  4008  001CE4                     _RtccWrOn:
  4009                           	opt stack 27
  4010                           
  4011                           ;incstack = 0
  4012  001CE4  9CF2               	bcf	intcon,6,c	;volatile
  4013  001CE6  0E55               	movlw	85
  4014  001CE8  6EA7               	movwf	4007,c	;volatile
  4015  001CEA  0EAA               	movlw	170
  4016  001CEC  6EA7               	movwf	4007,c	;volatile
  4017  001CEE  010F               	movlb	15	; () banked
  4018  001CF0  8B3F               	bsf	63,5,b	;volatile
  4019                           
  4020                           ; BSR set to: 15
  4021  001CF2  8CF2               	bsf	intcon,6,c	;volatile
  4022                           
  4023                           ; BSR set to: 15
  4024  001CF4  0012               	return		;funcret
  4025  001CF6                     __end_of_RtccWrOn:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           postdec1	equ	0xFE5
  4037                           fsr1l	equ	0xFE1
  4038                           indf2	equ	0xFDF
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           postdec1	equ	0xFE5
  4052                           fsr1l	equ	0xFE1
  4053                           indf2	equ	0xFDF
  4054                           fsr2h	equ	0xFDA
  4055                           fsr2l	equ	0xFD9
  4056                           status	equ	0xFD8
  4057                           
  4058                           	psect	rparam
  4059  0000                     tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           intcon	equ	0xFF2
  4066                           postinc0	equ	0xFEE
  4067                           wreg	equ	0xFE8
  4068                           postdec1	equ	0xFE5
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     66      95
    BANK0           160      0      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_read_temperature
    _write->___awdiv
    _on_numbers->_on_number
    _read_temperature->___fttol
    _calculate_temperature->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    ___fttol->_calculate_temperature
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14002
                                             62 COMRAM     4     4      0
                              _Setup
                           _caratula
                   _read_temperature
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                9     7      2    2219
                                              8 COMRAM     9     7      2
                            ___awdiv
                             ___wmul
                      _clear_Segment
                         _on_numbers
 ---------------------------------------------------------------------------------
 (2) _on_numbers                                           3     0      3     386
                                              4 COMRAM     3     0      3
                          _on_number
 ---------------------------------------------------------------------------------
 (3) _on_number                                            4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clear_Segment                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_temperature                                     5     3      2    8424
                                             57 COMRAM     5     3      2
                            ___fttol
              _calculate_temperature
 ---------------------------------------------------------------------------------
 (2) _calculate_temperature                                3     0      3    8062
                                             39 COMRAM     3     0      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2587
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3203
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             42 COMRAM    15    11      4
              _calculate_temperature (ARG)
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3311
                          _Write_RTC
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     778
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     589
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2533
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1324
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
   _read_temperature
     ___fttol
       _calculate_temperature (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _calculate_temperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _write
     ___awdiv
     ___wmul
     _clear_Segment
     _on_numbers
       _on_number

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      43       5       41.9%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     42      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2       6        0.0%
DATA                 0      0      A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 11 20:56:11 2016

                             _a 0090                               _b 0092                               _c 0094  
                             _i 0096                               _j 0098                               _k 009A  
                            u10 1A14                              u30 1A2C                              u50 1A46  
                            u28 1A16                              u70 1A62                              u48 1A2E  
                ?_lcd_send_byte 0003                              u68 1A48                              u88 1A64  
                  ___awdiv@sign 0006             ___wmul@multiplicand 0003                    __CFG_CP0$OFF 000000  
                  ___ftadd@exp1 0027                    ___ftadd@exp2 0026                    ___ftadd@sign 0025  
                           l143 1C62                             l144 1C64                             l360 1682  
                           l370 1712                             l362 1692                             l363 16A2  
                           l364 16B2                             l365 16C2                             l366 16D2  
                           l367 16E2                             l368 16F2                             l369 1702  
                           l377 1CB8                             l832 1810                             l861 0F4A  
                           l865 0F74                             l876 1036                             l885 1052  
                           _dia 0045                             _mes 004B                             wreg 000FE8  
                          l1120 1CC2                            l2002 12DA                            l2100 0FE6  
                          l2110 101E                            l2102 0FF2                            l2040 134C  
                          l2008 12F6                            l2200 1930                            l2112 102A  
                          l2104 0FFA                            l2202 193A                            l2044 1358  
                          l2220 197C                            l2212 1960                            l2204 1942  
                          l2310 19DA                            l2302 19C6                            l2118 1070  
                          l2070 0F58                            l2048 1364                            l2216 196C  
                          l2232 1C20                            l2128 10A2                            l2144 14CC  
                          l2056 1722                            l1186 1CD4                            l2082 0F8E  
                          l2162 1512                            l2138 14A4                            l2092 0FB6  
                          l2076 0F82                            l2172 1540                            l2412 1A8C  
                          l2350 15AA                            l2166 1528                            l2158 1500  
                          l2176 1556                            l2168 152E                            l2432 188C  
                          l2194 191A                            l2098 0FDA                            l2418 1AC0  
                          l2188 1908                            l2292 19AE                            l2380 164A  
                          l2372 1622                            l2382 1654                            l2446 18E0  
                          l2296 19B6                            l2368 1612                            l1930 13D8  
                          l2386 166C                            l2378 163C                            l2490 1BBA  
                          l2482 1B94                            l1940 1408                            l1924 13AE  
                          l1934 13EC                            l1870 1794                            l1880 17F8  
                          l1872 17A0                            l1882 1804                            l1874 17C0  
                          l1866 1784                            l1972 1464                            l1894 182A  
                          l1878 17D8                            l1992 128C                            l1976 1470  
                          l1968 1458                            l1888 1818                            l1998 12C6  
                          u1311 0F16                            u1321 0F2A                            u1521 148C  
                          u1541 14B4                            u1711 158E                            u1730 15C8  
                          u1735 15C0                            u1808 1AB2                            u1907 18C6  
                          u1917 1A92                            u1790 1AB0                            u1927 1CC4  
                          u1937 1CD6                            u1897 18A2                ?_lcd_send_nibble 0001  
                          _anio 0043                            _flag 02F8                            _main 1B86  
                          _hora 0049                    ___ftpack@arg 0001                    ___ftpack@exp 0004  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                   __CFG_T1DIG$ON 000000                            prodh 000FF4  
                          prodl 000FF3                            start 0000                   __CFG_IESO$OFF 000000  
                  ___ftmul@cntr 001A                    ___param_bank 000010                    ___ftmul@sign 001B  
                  ___fttol@exp1 0039                    ___fttol@lval 0035                     _Delay1KTCYx 1CD2  
                 __CFG_PLLDIV$1 000000                           ?_main 0001                 __end_of___awdiv 1988  
               __end_of___ftadd 10CA           __size_of_Delay100TCYx 0012                 __end_of___ftmul 157E  
               ___awdiv@divisor 0003                 __end_of___fttol 1680                 ___awdiv@counter 0005  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                __CFG_FCMEN$OFF 000000                           _Setup 1BC8                   ___awtoft@sign 000C  
       ??_calculate_temperature 002B                           _mes_d 005C                           _mes_u 00A0  
                 ___ftpack@sign 0005                           _write 183A                  __pbitbssCOMRAM 02F8  
                         tablat 000FF5                           status 000FD8        __end_of_read_temperature 1AEE  
       __CFG_DSWDTOSC$INTOSCREF 000000                 __initialization 1B42                    _Delay100TCYx 1CC0  
                  __end_of_main 1BC8                 ??_lcd_send_byte 0004                          ??_main 003F  
                 ___fttol@sign1 0034         read_temperature@voltage 003D                   __activetblptr 000002  
              __end_of_RtccWrOn 1CF6           __end_of_clear_Segment 1D06                          ?_Setup 0001  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADRESH 000FC4  
                        _EECON2 000FA7                          _ANCON0 000F48                          _ANCON1 000F49  
              ___awdiv@dividend 0001                __end_of___awtoft 1C46                __end_of___ftpack 183A  
                        ?_write 0009                  __CFG_WDTEN$OFF 000000                RtccWriteDate@pDt 0001  
                        _RTCCFG 000F3F                  __CFG_WPCFG$OFF 000000                __end_of_caratula 1D14  
                __CFG_WPDIS$OFF 000000                  __CFG_XINST$OFF 000000                __end_of_lcd_init 1A08  
                        ___wmul 1C78                       ??___awdiv 0005                       ??___ftadd 0022  
                __CFG_STVREN$ON 000000                          _diasem 0047                       ??___ftmul 0013  
                        _anio_d 0059                       ??___fttol 002F                          _anio_u 009C  
                        _hora_d 005B                          _hora_u 009F                          clear_0 1B48  
                        clear_1 1B56                ___awdiv@quotient 0007                          _minuto 004D  
         __end_of_RtccWriteDate 1370           __end_of_RtccWriteTime 147C           ___ftmul@f3_as_product 0017  
              RtccWriteTime@pTm 0001                    __pdataCOMRAM 0043                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                    __accesstop 0060         __end_of__initialization 1B7C                      ___ftadd@f1 001C  
                    ___ftadd@f2 001F              __size_of_Write_RTC 0160                   ___rparam_used 000001  
                    ___awtoft@c 0009                      ___ftmul@f1 000D                      ___ftmul@f2 0010  
                    ___fttol@f1 002B                  __pcstackCOMRAM 0001                   __end_of_Setup 1C0A  
                 __end_of_write 18F2                 __CFG_DSWDTPS$G2 000000                 __CFG_OSC$INTOSC 000000  
                       ??_Setup 000E                         ??_write 000B                      __pbssBANK0 0060  
                    _dia_semana 009D       RtccWriteTime@tempHourWDay 000A                      __pnvCOMRAM 0059  
                     ?_RtccWrOn 0001                  lcd_send_byte@n 0003                         ?___wmul 0001  
            __size_of_on_number 00F4                    ?_Delay1KTCYx 0001                       ?___awtoft 0009  
                     ?___ftpack 0001               __end_of_Write_RTC 122A                       ?_caratula 0001  
                       _RTCVALH 000F99                         _RTCVALL 000F98                       ?_lcd_init 0001  
__size_of_calculate_temperature 0054   __end_of_calculate_temperature 1B42               ?_read_temperature 003A  
                       __Hparam 0000                         __Lparam 0000              ??_read_temperature 003C  
      __size_of_lcd_send_nibble 0076                      ??_RtccWrOn 0001                         ___awdiv 18F2  
                       ___ftadd 0F06                 __size_of___wmul 0028                         ___ftmul 147C  
                       ___fttol 157E                    __psmallconst 0F00                     _RtccTimeVal 008C  
                       __pcinit 1B42                         _fecha_d 005A                         _fecha_u 009E  
                    ??___awtoft 000C                      ??___ftpack 0006                         __ramtop 0F00  
                       __ptext0 1B86                         __ptext1 183A                         __ptext2 1CA0  
                       __ptext3 1680                         __ptext4 1CF6                         __ptext5 1C78  
                       __ptext6 1A7E                         __ptext7 1AEE                         __ptext8 147C  
                       __ptext9 0F06                         _buffer2 0060                       _T1CONbits 000FCD  
                    ??_caratula 0001                         _segundo 004F                   on_numbers@uni 0007  
                    ??_lcd_init 0005            end_of_initialization 1B7C               __end_of_on_number 1774  
                    _on_numbers 1CA0            lcd_send_byte@address 0004                   __Lmediumconst 0000  
                       postdec1 000FE5                         postinc0 000FEE           __end_of_lcd_send_byte 1C78  
                     _PORTBbits 000F81                       _PORTCbits 000F82                __CFG_DSBOREN$OFF 000000  
              __CFG_CPUDIV$OSC1 000000                       _TRISBbits 000F93                on_numbers@number 0005  
               _LCD_INIT_STRING 0F01                __CFG_IOL1WAY$OFF 000000       RtccWriteDate@tempDayMonth 000A  
           __CFG_MSSP7B_EN$MSK7 000000                     ___ftmul@exp 0016          __size_of_clear_Segment 0010  
              Delay100TCYx@unit 0001                  __end_of___wmul 1CA0                   __pidataCOMRAM 1D06  
     RtccWriteDate@tempHourWDay 000C               ??_lcd_send_nibble 0001            __size_of_Delay1KTCYx 0012  
              __CFG_DSWDTEN$OFF 000000             start_initialization 1B42                     ?_on_numbers 0005  
          RtccWriteTime@wasAlrm 0006            RtccWriteTime@wasWrEn 0007          __size_of_RtccWriteDate 0146  
               RtccWriteDate@di 0003          __size_of_RtccWriteTime 010C                        ??___wmul 0005  
             __size_of_RtccWrOn 0012                 RtccWriteTime@di 0003                __CFG_LPT1OSC$OFF 000000  
                   _ALRMCFGbits 000F91         __end_of_LCD_INIT_STRING 0F05               __size_of___awtoft 003C  
             __size_of___ftpack 00C6                     __pbssCOMRAM 004F                   _clear_Segment 1CF6  
                     _Write_RTC 10CA               __size_of_caratula 0002                 Delay1KTCYx@unit 0001  
             __size_of_lcd_init 0080                       __pnvBANK0 009C                   ?_Delay100TCYx 0001  
                      ?___awdiv 0001                        ?___ftadd 001C                        ?___ftmul 000D  
                      ?___fttol 002B         RtccWriteTime@tempMinSec 0008             __size_of_on_numbers 0020  
                 _RtccWriteDate 122A       __size_of_read_temperature 0070                     __smallconst 0F00  
                 _RtccWriteTime 1370            __CFG_RTCOSC$T1OSCREF 000000                  ?_clear_Segment 0001  
                __size_of_Setup 0042                      ?_Write_RTC 0001                  __size_of_write 00B8  
              _RtccAlrmTimeDate 0074                  ___wmul@product 0005                        _LATBbits 000F8A  
               on_number@number 0001           _calculate_temperature 1AEE                       _on_number 1680  
                      _PIE3bits 000FA3                       _segundo_d 005E                  ??_Delay100TCYx 0001  
                     _segundo_u 00A2                     write@number 0009                __CFG_WDTPS$32768 000000  
            RtccWriteDate@wasOn 0005              _Rtcc_read_TimeDate 0084                  ?_RtccWriteDate 0001  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001                  ?_RtccWriteTime 0001  
                     lcd_init@i 0005    calculate_temperature@voltage 0028                       main@count 0041  
                     copy_data0 1B70                      ?_on_number 0001                 _lcd_send_nibble 1A08  
                      __Hrparam 0000                        _RtccDate 0051                        __Lrparam 0000  
                      _RtccTime 0055                        _RtccWrOn 1CE4                __size_of___awdiv 0096  
              __size_of___ftadd 01C4                __size_of___ftmul 0102                __size_of___fttol 0102  
                      ___awtoft 1C0A                        ___ftpack 1774                 ??_clear_Segment 0001  
                  _RtccTimeDate 007C                        _caratula 1D12                     ??_Write_RTC 000E  
                      __ptext10 1C0A                        __ptext11 1774                        __ptext20 10CA  
                      __ptext12 157E                        __ptext21 18F2                        __ptext13 1D12  
                      __ptext22 1370                        __ptext14 1BC8                        __ptext23 122A  
                      __ptext15 1988                        __ptext24 1CE4                        __ptext16 1C46  
                      __ptext17 1A08                        __ptext18 1CC0                        __ptext19 1CD2  
                      _lcd_init 1988                    ??_on_numbers 0008          ?_calculate_temperature 0028  
        __size_of_lcd_send_byte 0032                   __size_of_main 0042                        _minuto_d 005D  
                      _minuto_u 00A1                   ??_Delay1KTCYx 0001                 ??_RtccWriteDate 0004  
               ??_RtccWriteTime 0004                 main@temperature 003F                _read_temperature 1A7E  
            __end_of_on_numbers 1CC0                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
            RtccWriteTime@wasOn 0005            __end_of_Delay100TCYx 1CD2         __end_of_lcd_send_nibble 1A7E  
                   ??_on_number 0003                      _OSCCONbits 000FD3                       write@time 0010  
         RtccWriteDate@tempYear 0007                   _lcd_send_byte 1C46                      _RTCCFGbits 000F3F  
           __end_of_Delay1KTCYx 1CE4                        write@dec 000E            RtccWriteDate@wasAlrm 0006  
                      write@uni 000C            RtccWriteDate@wasWrEn 0009           lcd_send_nibble@nibble 0002  
