

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 06 20:19:44 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  001736                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _anio
    39  001736  000F               	dw	15
    40                           
    41                           ;initializer for _dia
    42  001738  0008               	dw	8
    43                           
    44                           ;initializer for _diasem
    45  00173A  0003               	dw	3
    46                           
    47                           ;initializer for _hora
    48  00173C  0012               	dw	18
    49                           
    50                           ;initializer for _mes
    51  00173E  0009               	dw	9
    52                           
    53                           ;initializer for _minuto
    54  001740  001E               	dw	30
    55                           
    56                           	psect	smallconst
    57  000F00                     __psmallconst:
    58                           	opt stack 0
    59  000F00  00                 	db	0
    60  000F01                     _LCD_INIT_STRING:
    61                           	opt stack 0
    62  000F01  28                 	db	40
    63  000F02  0C                 	db	12
    64  000F03  01                 	db	1
    65  000F04  06                 	db	6
    66  000F05                     __end_of_LCD_INIT_STRING:
    67                           	opt stack 0
    68  000F05  00                 	db	0	; dummy byte at the end
    69  0000                     
    70                           	psect	nvCOMRAM
    71  000046                     __pnvCOMRAM:
    72                           	opt stack 0
    73  000046                     _anio_d:
    74                           	opt stack 0
    75  000046                     	ds	1
    76  000047                     _anio_u:
    77                           	opt stack 0
    78  000047                     	ds	1
    79  000048                     _dia_semana:
    80                           	opt stack 0
    81  000048                     	ds	1
    82  000049                     _fecha_d:
    83                           	opt stack 0
    84  000049                     	ds	1
    85  00004A                     _fecha_u:
    86                           	opt stack 0
    87  00004A                     	ds	1
    88  00004B                     _hora_d:
    89                           	opt stack 0
    90  00004B                     	ds	1
    91  00004C                     _hora_u:
    92                           	opt stack 0
    93  00004C                     	ds	1
    94  00004D                     _mes_d:
    95                           	opt stack 0
    96  00004D                     	ds	1
    97  00004E                     _mes_u:
    98                           	opt stack 0
    99  00004E                     	ds	1
   100  00004F                     _minuto_d:
   101                           	opt stack 0
   102  00004F                     	ds	1
   103  000050                     _minuto_u:
   104                           	opt stack 0
   105  000050                     	ds	1
   106  000051                     _segundo_d:
   107                           	opt stack 0
   108  000051                     	ds	1
   109  000052                     _segundo_u:
   110                           	opt stack 0
   111  000052                     	ds	1
   112  0000                     _ANCON0	set	3912
   113  0000                     _ANCON1	set	3913
   114  0000                     _RTCCFG	set	3903
   115  0000                     _RTCCFGbits	set	3903
   116  0000                     _ADCON0	set	4034
   117  0000                     _ADCON1	set	4033
   118  0000                     _ALRMCFGbits	set	3985
   119  0000                     _EECON2	set	4007
   120  0000                     _INTCONbits	set	4082
   121  0000                     _LATBbits	set	3978
   122  0000                     _OSCCONbits	set	4051
   123  0000                     _OSCTUNEbits	set	3995
   124  0000                     _PIE3bits	set	4003
   125  0000                     _PORTBbits	set	3969
   126  0000                     _PORTCbits	set	3970
   127  0000                     _RTCVALH	set	3993
   128  0000                     _RTCVALL	set	3992
   129  0000                     _T1CONbits	set	4045
   130  0000                     _TRISA	set	3986
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISBbits	set	3987
   133  0000                     _TRISC	set	3988
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  0015D4                     __pcinit:
   139                           	opt stack 0
   140  0015D4                     start_initialization:
   141                           	opt stack 0
   142  0015D4                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK0 (20 bytes)
   146  0015D4  EE00  F060         	lfsr	0,__pbssBANK0
   147  0015D8  0E14               	movlw	20
   148  0015DA                     clear_0:
   149  0015DA  6AEE               	clrf	postinc0,c
   150  0015DC  06E8               	decf	wreg,f,c
   151  0015DE  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   154  0015E0  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   155                           
   156                           ; Clear objects allocated to COMRAM (50 bytes)
   157  0015E2  EE00  F001         	lfsr	0,__pbssCOMRAM
   158  0015E6  0E32               	movlw	50
   159  0015E8                     clear_1:
   160  0015E8  6AEE               	clrf	postinc0,c
   161  0015EA  06E8               	decf	wreg,f,c
   162  0015EC  E1FD               	bnz	clear_1
   163                           
   164                           ; Initialize objects allocated to COMRAM (12 bytes)
   165                           ; load TBLPTR registers with __pidataCOMRAM
   166  0015EE  0E36               	movlw	low __pidataCOMRAM
   167  0015F0  6EF6               	movwf	tblptrl,c
   168  0015F2  0E17               	movlw	high __pidataCOMRAM
   169  0015F4  6EF7               	movwf	tblptrh,c
   170  0015F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   171  0015F8  6EF8               	movwf	tblptru,c
   172  0015FA  EE00  F053         	lfsr	0,__pdataCOMRAM
   173  0015FE  EE10 F00C          	lfsr	1,12
   174  001602                     copy_data0:
   175  001602  0009               	tblrd		*+
   176  001604  CFF5 FFEE          	movff	tablat,postinc0
   177  001608  50E5               	movf	postdec1,w,c
   178  00160A  50E1               	movf	fsr1l,w,c
   179  00160C  E1FA               	bnz	copy_data0
   180  00160E                     end_of_initialization:
   181                           	opt stack 0
   182  00160E                     __end_of__initialization:
   183                           	opt stack 0
   184  00160E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  001610  6EF8               	movwf	tblptru,c
   186  001612  0100               	movlb	0
   187  001614  EF2C  F00B         	goto	_main	;jump to C main() function
   188                           tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           tblptrl	equ	0xFF6
   191                           tablat	equ	0xFF5
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           postdec1	equ	0xFE5
   195                           fsr1l	equ	0xFE1
   196                           
   197                           	psect	bitbssCOMRAM
   198  0002F8                     __pbitbssCOMRAM:
   199                           	opt stack 0
   200  0002F8                     _flag:
   201                           	opt stack 0
   202  0002F8                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           postdec1	equ	0xFE5
   210                           fsr1l	equ	0xFE1
   211                           
   212                           	psect	bssCOMRAM
   213  000001                     __pbssCOMRAM:
   214                           	opt stack 0
   215  000001                     _RtccAlrmTimeDate:
   216                           	opt stack 0
   217  000001                     	ds	8
   218  000009                     _RtccTimeDate:
   219                           	opt stack 0
   220  000009                     	ds	8
   221  000011                     _Rtcc_read_TimeDate:
   222                           	opt stack 0
   223  000011                     	ds	8
   224  000019                     _RtccTimeVal:
   225                           	opt stack 0
   226  000019                     	ds	4
   227  00001D                     _a:
   228                           	opt stack 0
   229  00001D                     	ds	2
   230  00001F                     _b:
   231                           	opt stack 0
   232  00001F                     	ds	2
   233  000021                     _c:
   234                           	opt stack 0
   235  000021                     	ds	2
   236  000023                     _i:
   237                           	opt stack 0
   238  000023                     	ds	2
   239  000025                     _j:
   240                           	opt stack 0
   241  000025                     	ds	2
   242  000027                     _k:
   243                           	opt stack 0
   244  000027                     	ds	2
   245  000029                     _segundo:
   246                           	opt stack 0
   247  000029                     	ds	2
   248  00002B                     _RtccDate:
   249                           	opt stack 0
   250  00002B                     	ds	4
   251  00002F                     _RtccTime:
   252                           	opt stack 0
   253  00002F                     	ds	4
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	dataCOMRAM
   264  000053                     __pdataCOMRAM:
   265                           	opt stack 0
   266  000053                     _anio:
   267                           	opt stack 0
   268  000053                     	ds	2
   269  000055                     _dia:
   270                           	opt stack 0
   271  000055                     	ds	2
   272  000057                     _diasem:
   273                           	opt stack 0
   274  000057                     	ds	2
   275  000059                     _hora:
   276                           	opt stack 0
   277  000059                     	ds	2
   278  00005B                     _mes:
   279                           	opt stack 0
   280  00005B                     	ds	2
   281  00005D                     _minuto:
   282                           	opt stack 0
   283  00005D                     	ds	2
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	bssBANK0
   294  000060                     __pbssBANK0:
   295                           	opt stack 0
   296  000060                     _buffer2:
   297                           	opt stack 0
   298  000060                     	ds	20
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackCOMRAM
   309  000033                     __pcstackCOMRAM:
   310                           	opt stack 0
   311  000033                     ??_lcd_send_nibble:
   312  000033                     ?___wmul:
   313                           	opt stack 0
   314  000033                     ?___awdiv:
   315                           	opt stack 0
   316  000033                     Delay100TCYx@unit:
   317                           	opt stack 0
   318  000033                     Delay1KTCYx@unit:
   319                           	opt stack 0
   320  000033                     on_number@number:
   321                           	opt stack 0
   322  000033                     RtccWriteDate@pDt:
   323                           	opt stack 0
   324  000033                     RtccWriteTime@pTm:
   325                           	opt stack 0
   326  000033                     ___wmul@multiplier:
   327                           	opt stack 0
   328  000033                     ___awdiv@dividend:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  000033                     	ds	1
   333  000034                     lcd_send_nibble@nibble:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x1
   337  000034                     	ds	1
   338  000035                     ??_on_number:
   339  000035                     lcd_send_byte@n:
   340                           	opt stack 0
   341  000035                     RtccWriteDate@di:
   342                           	opt stack 0
   343  000035                     RtccWriteTime@di:
   344                           	opt stack 0
   345  000035                     ___wmul@multiplicand:
   346                           	opt stack 0
   347  000035                     ___awdiv@divisor:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x2
   351  000035                     	ds	1
   352  000036                     lcd_send_byte@address:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x3
   356  000036                     	ds	1
   357  000037                     lcd_init@i:
   358                           	opt stack 0
   359  000037                     RtccWriteDate@wasOn:
   360                           	opt stack 0
   361  000037                     RtccWriteTime@wasOn:
   362                           	opt stack 0
   363  000037                     ___awdiv@counter:
   364                           	opt stack 0
   365  000037                     ___wmul@product:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x4
   369  000037                     	ds	1
   370  000038                     RtccWriteDate@wasAlrm:
   371                           	opt stack 0
   372  000038                     RtccWriteTime@wasAlrm:
   373                           	opt stack 0
   374  000038                     ___awdiv@sign:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x5
   378  000038                     	ds	1
   379  000039                     RtccWriteTime@wasWrEn:
   380                           	opt stack 0
   381  000039                     RtccWriteDate@tempYear:
   382                           	opt stack 0
   383  000039                     ___awdiv@quotient:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x6
   387  000039                     	ds	1
   388  00003A                     RtccWriteTime@tempMinSec:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x7
   392  00003A                     	ds	1
   393  00003B                     RtccWriteDate@wasWrEn:
   394                           	opt stack 0
   395  00003B                     write@number:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x8
   399  00003B                     	ds	1
   400  00003C                     RtccWriteDate@tempDayMonth:
   401                           	opt stack 0
   402  00003C                     RtccWriteTime@tempHourWDay:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x9
   406  00003C                     	ds	1
   407  00003D                     ??_write:
   408                           
   409                           ; 0 bytes @ 0xA
   410  00003D                     	ds	1
   411  00003E                     write@uni:
   412                           	opt stack 0
   413  00003E                     RtccWriteDate@tempHourWDay:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0xB
   417  00003E                     	ds	2
   418  000040                     write@dec:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xD
   422  000040                     	ds	2
   423  000042                     write@time:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xF
   427  000042                     	ds	2
   428  000044                     main@count:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x11
   432  000044                     	ds	2
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 78 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  count           2   17[COMRAM] short 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  2  118[None  ] int 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels required when called:    4
   467 ;; This function calls:
   468 ;;		_Setup
   469 ;;		_caratula
   470 ;;		_write
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text0
   477  001658                     __ptext0:
   478                           	opt stack 0
   479  001658                     _main:
   480                           	opt stack 27
   481                           
   482                           ;main.c: 79: Setup();
   483                           
   484                           ; BSR set to: 15
   485                           ;incstack = 0
   486  001658  EC0C  F00B         	call	_Setup	;wreg free
   487                           
   488                           ;main.c: 80: caratula();
   489  00165C  ECA1  F00B         	call	_caratula	;wreg free
   490                           
   491                           ;main.c: 82: short count = 0;
   492  001660  0E00               	movlw	0
   493  001662  6E45               	movwf	main@count+1,c
   494  001664  0E00               	movlw	0
   495  001666  6E44               	movwf	main@count,c
   496                           
   497                           ;main.c: 84: PORTCbits.RC7 = 1;
   498  001668  8E82               	bsf	3970,7,c	;volatile
   499                           
   500                           ;main.c: 85: PORTBbits.RB0 = 1;
   501  00166A  8081               	bsf	3969,0,c	;volatile
   502  00166C  D000               	goto	l1997
   503  00166E                     l1997:
   504                           
   505                           ;main.c: 92: write(count);
   506  00166E  C044  F03B         	movff	main@count,write@number
   507  001672  C045  F03C         	movff	main@count+1,write@number+1
   508  001676  ECCA  F009         	call	_write	;wreg free
   509                           
   510                           ;main.c: 94: count++;
   511  00167A  4A44               	infsnz	main@count,f,c
   512  00167C  2A45               	incf	main@count+1,f,c
   513                           
   514                           ;main.c: 96: if ( count == 100) count = 0;
   515  00167E  0E64               	movlw	100
   516  001680  1844               	xorwf	main@count,w,c
   517  001682  1045               	iorwf	main@count+1,w,c
   518  001684  A4D8               	btfss	status,2,c
   519  001686  D7F3               	goto	l1997
   520  001688  0E00               	movlw	0
   521  00168A  6E45               	movwf	main@count+1,c
   522  00168C  0E00               	movlw	0
   523  00168E  6E44               	movwf	main@count,c
   524  001690  D7EE               	goto	l1997
   525                           
   526                           ;main.c: 99: }
   527                           ;main.c: 101: return 0;
   528                           ;	Return value of _main is never used
   529  001692  EF00  F000         	goto	start
   530  001696                     __end_of_main:
   531                           	opt stack 0
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           status	equ	0xFD8
   541                           
   542 ;; *************** function _write *****************
   543 ;; Defined at:
   544 ;;		line 71 in file "display7seg.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  number          2    8[COMRAM] short 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  time            2   15[COMRAM] int 
   549 ;;  dec             2   13[COMRAM] short 
   550 ;;  uni             2   11[COMRAM] short 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   561 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   563 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   564 ;;Total ram usage:        9 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    1
   567 ;; This function calls:
   568 ;;		___awdiv
   569 ;;		___wmul
   570 ;;		_clear_Segment
   571 ;;		_on_number
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  001394                     __ptext1:
   579                           	opt stack 0
   580  001394                     _write:
   581                           	opt stack 29
   582                           
   583                           ;display7seg.c: 72: int time = 0;
   584                           
   585                           ;incstack = 0
   586  001394  0E00               	movlw	0
   587  001396  6E43               	movwf	write@time+1,c
   588  001398  0E00               	movlw	0
   589  00139A  6E42               	movwf	write@time,c
   590                           
   591                           ;display7seg.c: 73: short dec = number/10;
   592  00139C  C03B  F033         	movff	write@number,___awdiv@dividend
   593  0013A0  C03C  F034         	movff	write@number+1,___awdiv@dividend+1
   594  0013A4  0E00               	movlw	0
   595  0013A6  6E36               	movwf	___awdiv@divisor+1,c
   596  0013A8  0E0A               	movlw	10
   597  0013AA  6E35               	movwf	___awdiv@divisor,c
   598  0013AC  EC24  F00A         	call	___awdiv	;wreg free
   599  0013B0  C033  F040         	movff	?___awdiv,write@dec
   600  0013B4  C034  F041         	movff	?___awdiv+1,write@dec+1
   601                           
   602                           ;display7seg.c: 74: short uni = number - dec*10;
   603  0013B8  C040  F033         	movff	write@dec,___wmul@multiplier
   604  0013BC  C041  F034         	movff	write@dec+1,___wmul@multiplier+1
   605  0013C0  0E00               	movlw	0
   606  0013C2  6E36               	movwf	___wmul@multiplicand+1,c
   607  0013C4  0E0A               	movlw	10
   608  0013C6  6E35               	movwf	___wmul@multiplicand,c
   609  0013C8  EC64  F00B         	call	___wmul	;wreg free
   610  0013CC  1E33               	comf	?___wmul,f,c
   611  0013CE  1E34               	comf	?___wmul+1,f,c
   612  0013D0  4A33               	infsnz	?___wmul,f,c
   613  0013D2  2A34               	incf	?___wmul+1,f,c
   614  0013D4  503B               	movf	write@number,w,c
   615  0013D6  2433               	addwf	?___wmul,w,c
   616  0013D8  6E3E               	movwf	write@uni,c
   617  0013DA  503C               	movf	write@number+1,w,c
   618  0013DC  2034               	addwfc	?___wmul+1,w,c
   619  0013DE  6E3F               	movwf	write@uni+1,c
   620                           
   621                           ;display7seg.c: 75: clear_Segment();
   622  0013E0  EC93  F00B         	call	_clear_Segment	;wreg free
   623                           
   624                           ;display7seg.c: 76: while(time < 500){
   625  0013E4  D028               	goto	l1961
   626  0013E6                     l1943:
   627                           
   628                           ;display7seg.c: 80: on_number(uni);
   629  0013E6  C03E  F033         	movff	write@uni,on_number@number
   630  0013EA  C03F  F034         	movff	write@uni+1,on_number@number+1
   631  0013EE  EC50  F009         	call	_on_number	;wreg free
   632                           
   633                           ;display7seg.c: 81: PORTCbits.RC7 = 0;
   634  0013F2  9E82               	bcf	3970,7,c	;volatile
   635                           
   636                           ;display7seg.c: 82: PORTBbits.RB0 = 1;
   637  0013F4  8081               	bsf	3969,0,c	;volatile
   638                           
   639                           ;display7seg.c: 83: _delay((unsigned long)((10)*(8000000/4000.0)));
   640  0013F6  0E1A               	movlw	26
   641  0013F8  6E3D               	movwf	??_write& (0+255),c
   642  0013FA  0EF8               	movlw	248
   643  0013FC                     u937:
   644  0013FC  2EE8               	decfsz	wreg,f,c
   645  0013FE  D7FE               	goto	u937
   646  001400  2E3D               	decfsz	??_write& (0+255),f,c
   647  001402  D7FC               	goto	u937
   648  001404  D000               	nop2	
   649                           
   650                           ;display7seg.c: 84: PORTCbits.RC7 = 1;
   651  001406  8E82               	bsf	3970,7,c	;volatile
   652                           
   653                           ;display7seg.c: 85: on_number(dec);
   654  001408  C040  F033         	movff	write@dec,on_number@number
   655  00140C  C041  F034         	movff	write@dec+1,on_number@number+1
   656  001410  EC50  F009         	call	_on_number	;wreg free
   657                           
   658                           ;display7seg.c: 86: PORTBbits.RB0 = 0;
   659  001414  9081               	bcf	3969,0,c	;volatile
   660                           
   661                           ;display7seg.c: 87: _delay((unsigned long)((10)*(8000000/4000.0)));
   662  001416  0E1A               	movlw	26
   663  001418  6E3D               	movwf	??_write& (0+255),c
   664  00141A  0EF8               	movlw	248
   665  00141C                     u947:
   666  00141C  2EE8               	decfsz	wreg,f,c
   667  00141E  D7FE               	goto	u947
   668  001420  2E3D               	decfsz	??_write& (0+255),f,c
   669  001422  D7FC               	goto	u947
   670  001424  D000               	nop2	
   671                           
   672                           ;display7seg.c: 88: PORTBbits.RB0 = 1;
   673  001426  8081               	bsf	3969,0,c	;volatile
   674                           
   675                           ;display7seg.c: 90: time = time + 20;
   676  001428  0E14               	movlw	20
   677  00142A  2442               	addwf	write@time,w,c
   678  00142C  6E42               	movwf	write@time,c
   679  00142E  0E00               	movlw	0
   680  001430  2043               	addwfc	write@time+1,w,c
   681  001432  6E43               	movwf	write@time+1,c
   682  001434  D000               	goto	l1961
   683  001436                     l1961:
   684  001436  BE43               	btfsc	write@time+1,7,c
   685  001438  D7D6               	goto	l1943
   686  00143A  0EF4               	movlw	244
   687  00143C  5C42               	subwf	write@time,w,c
   688  00143E  0E01               	movlw	1
   689  001440  5843               	subwfb	write@time+1,w,c
   690  001442  A0D8               	btfss	status,0,c
   691  001444  D7D0               	goto	l1943
   692  001446  0012               	return		;funcret
   693  001448                     __end_of_write:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _on_number *****************
   706 ;; Defined at:
   707 ;;		line 3 in file "display7seg.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  number          2    0[COMRAM] short 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;		None               void
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_write
   731 ;;		_on_numbers
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736  0012A0                     __ptext2:
   737                           	opt stack 0
   738  0012A0                     _on_number:
   739                           	opt stack 29
   740                           
   741                           ;display7seg.c: 5: switch (number){
   742                           
   743                           ;incstack = 0
   744  0012A0  D050               	goto	l1903
   745  0012A2                     l358:
   746                           
   747                           ;display7seg.c: 7: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.RB
      +                          4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 0;
   748  0012A2  8E81               	bsf	3969,7,c	;volatile
   749  0012A4  8C81               	bsf	3969,6,c	;volatile
   750  0012A6  8A81               	bsf	3969,5,c	;volatile
   751  0012A8  8881               	bsf	3969,4,c	;volatile
   752  0012AA  8681               	bsf	3969,3,c	;volatile
   753  0012AC  8481               	bsf	3969,2,c	;volatile
   754  0012AE  9281               	bcf	3969,1,c	;volatile
   755                           
   756                           ;display7seg.c: 8: break;
   757  0012B0  0012               	return	
   758  0012B2                     l360:
   759                           
   760                           ;display7seg.c: 11: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   761  0012B2  9E81               	bcf	3969,7,c	;volatile
   762  0012B4  8C81               	bsf	3969,6,c	;volatile
   763  0012B6  8A81               	bsf	3969,5,c	;volatile
   764  0012B8  9881               	bcf	3969,4,c	;volatile
   765  0012BA  9681               	bcf	3969,3,c	;volatile
   766  0012BC  9481               	bcf	3969,2,c	;volatile
   767  0012BE  9281               	bcf	3969,1,c	;volatile
   768                           
   769                           ;display7seg.c: 12: break;
   770  0012C0  0012               	return	
   771  0012C2                     l361:
   772                           
   773                           ;display7seg.c: 15: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 0; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   774  0012C2  8E81               	bsf	3969,7,c	;volatile
   775  0012C4  8C81               	bsf	3969,6,c	;volatile
   776  0012C6  9A81               	bcf	3969,5,c	;volatile
   777  0012C8  8881               	bsf	3969,4,c	;volatile
   778  0012CA  8681               	bsf	3969,3,c	;volatile
   779  0012CC  9481               	bcf	3969,2,c	;volatile
   780  0012CE  8281               	bsf	3969,1,c	;volatile
   781                           
   782                           ;display7seg.c: 16: break;
   783  0012D0  0012               	return	
   784  0012D2                     l362:
   785                           
   786                           ;display7seg.c: 19: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   787  0012D2  8E81               	bsf	3969,7,c	;volatile
   788  0012D4  8C81               	bsf	3969,6,c	;volatile
   789  0012D6  8A81               	bsf	3969,5,c	;volatile
   790  0012D8  8881               	bsf	3969,4,c	;volatile
   791  0012DA  9681               	bcf	3969,3,c	;volatile
   792  0012DC  9481               	bcf	3969,2,c	;volatile
   793  0012DE  8281               	bsf	3969,1,c	;volatile
   794                           
   795                           ;display7seg.c: 20: break;
   796  0012E0  0012               	return	
   797  0012E2                     l363:
   798                           
   799                           ;display7seg.c: 23: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   800  0012E2  9E81               	bcf	3969,7,c	;volatile
   801  0012E4  8C81               	bsf	3969,6,c	;volatile
   802  0012E6  8A81               	bsf	3969,5,c	;volatile
   803  0012E8  9881               	bcf	3969,4,c	;volatile
   804  0012EA  9681               	bcf	3969,3,c	;volatile
   805  0012EC  8481               	bsf	3969,2,c	;volatile
   806  0012EE  8281               	bsf	3969,1,c	;volatile
   807                           
   808                           ;display7seg.c: 24: break;
   809  0012F0  0012               	return	
   810  0012F2                     l364:
   811                           
   812                           ;display7seg.c: 27: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   813  0012F2  8E81               	bsf	3969,7,c	;volatile
   814  0012F4  9C81               	bcf	3969,6,c	;volatile
   815  0012F6  8A81               	bsf	3969,5,c	;volatile
   816  0012F8  8881               	bsf	3969,4,c	;volatile
   817  0012FA  9681               	bcf	3969,3,c	;volatile
   818  0012FC  8481               	bsf	3969,2,c	;volatile
   819  0012FE  8281               	bsf	3969,1,c	;volatile
   820                           
   821                           ;display7seg.c: 28: break;
   822  001300  0012               	return	
   823  001302                     l365:
   824                           
   825                           ;display7seg.c: 31: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   826  001302  8E81               	bsf	3969,7,c	;volatile
   827  001304  9C81               	bcf	3969,6,c	;volatile
   828  001306  8A81               	bsf	3969,5,c	;volatile
   829  001308  8881               	bsf	3969,4,c	;volatile
   830  00130A  8681               	bsf	3969,3,c	;volatile
   831  00130C  8481               	bsf	3969,2,c	;volatile
   832  00130E  8281               	bsf	3969,1,c	;volatile
   833                           
   834                           ;display7seg.c: 32: break;
   835  001310  0012               	return	
   836  001312                     l366:
   837                           
   838                           ;display7seg.c: 35: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   839  001312  8E81               	bsf	3969,7,c	;volatile
   840  001314  8C81               	bsf	3969,6,c	;volatile
   841  001316  8A81               	bsf	3969,5,c	;volatile
   842  001318  9881               	bcf	3969,4,c	;volatile
   843  00131A  9681               	bcf	3969,3,c	;volatile
   844  00131C  9481               	bcf	3969,2,c	;volatile
   845  00131E  9281               	bcf	3969,1,c	;volatile
   846                           
   847                           ;display7seg.c: 36: break;
   848  001320  0012               	return	
   849  001322                     l367:
   850                           
   851                           ;display7seg.c: 39: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   852  001322  8E81               	bsf	3969,7,c	;volatile
   853  001324  8C81               	bsf	3969,6,c	;volatile
   854  001326  8A81               	bsf	3969,5,c	;volatile
   855  001328  8881               	bsf	3969,4,c	;volatile
   856  00132A  8681               	bsf	3969,3,c	;volatile
   857  00132C  8481               	bsf	3969,2,c	;volatile
   858  00132E  8281               	bsf	3969,1,c	;volatile
   859                           
   860                           ;display7seg.c: 40: break;
   861  001330  0012               	return	
   862  001332                     l368:
   863                           
   864                           ;display7seg.c: 43: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
   865  001332  8E81               	bsf	3969,7,c	;volatile
   866  001334  8C81               	bsf	3969,6,c	;volatile
   867  001336  8A81               	bsf	3969,5,c	;volatile
   868  001338  8881               	bsf	3969,4,c	;volatile
   869  00133A  9681               	bcf	3969,3,c	;volatile
   870  00133C  8481               	bsf	3969,2,c	;volatile
   871  00133E  8281               	bsf	3969,1,c	;volatile
   872                           
   873                           ;display7seg.c: 45: }
   874                           
   875                           ;display7seg.c: 44: break;
   876  001340  0012               	return	
   877  001342                     l1903:
   878  001342  C033  F035         	movff	on_number@number,??_on_number
   879  001346  C034  F036         	movff	on_number@number+1,??_on_number+1
   880                           
   881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   882                           ; Switch size 1, requested type "space"
   883                           ; Number of cases is 1, Range of values is 0 to 0
   884                           ; switch strategies available:
   885                           ; Name         Instructions Cycles
   886                           ; simple_byte            4     3 (average)
   887                           ;	Chosen strategy is simple_byte
   888  00134A  5036               	movf	??_on_number+1,w,c
   889  00134C  0A00               	xorlw	0	; case 0
   890  00134E  A4D8               	btfss	status,2,c
   891  001350  0012               	return	
   892                           
   893                           ; Switch size 1, requested type "space"
   894                           ; Number of cases is 10, Range of values is 0 to 9
   895                           ; switch strategies available:
   896                           ; Name         Instructions Cycles
   897                           ; simple_byte           31    16 (average)
   898                           ;	Chosen strategy is simple_byte
   899  001352  5035               	movf	??_on_number,w,c
   900  001354  0A00               	xorlw	0	; case 0
   901  001356  B4D8               	btfsc	status,2,c
   902  001358  D7A4               	goto	l358
   903  00135A  0A01               	xorlw	1	; case 1
   904  00135C  B4D8               	btfsc	status,2,c
   905  00135E  D7A9               	goto	l360
   906  001360  0A03               	xorlw	3	; case 2
   907  001362  B4D8               	btfsc	status,2,c
   908  001364  D7AE               	goto	l361
   909  001366  0A01               	xorlw	1	; case 3
   910  001368  B4D8               	btfsc	status,2,c
   911  00136A  D7B3               	goto	l362
   912  00136C  0A07               	xorlw	7	; case 4
   913  00136E  B4D8               	btfsc	status,2,c
   914  001370  D7B8               	goto	l363
   915  001372  0A01               	xorlw	1	; case 5
   916  001374  B4D8               	btfsc	status,2,c
   917  001376  D7BD               	goto	l364
   918  001378  0A03               	xorlw	3	; case 6
   919  00137A  B4D8               	btfsc	status,2,c
   920  00137C  D7C2               	goto	l365
   921  00137E  0A01               	xorlw	1	; case 7
   922  001380  B4D8               	btfsc	status,2,c
   923  001382  D7C7               	goto	l366
   924  001384  0A0F               	xorlw	15	; case 8
   925  001386  B4D8               	btfsc	status,2,c
   926  001388  D7CC               	goto	l367
   927  00138A  0A01               	xorlw	1	; case 9
   928  00138C  A4D8               	btfss	status,2,c
   929  00138E  0012               	return	
   930  001390  D7D0               	goto	l368
   931  001392  0012               	return		;funcret
   932  001394                     __end_of_on_number:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _clear_Segment *****************
   945 ;; Defined at:
   946 ;;		line 48 in file "display7seg.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		None
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_write
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text3
   974  001726                     __ptext3:
   975                           	opt stack 0
   976  001726                     _clear_Segment:
   977                           	opt stack 29
   978                           
   979                           ;display7seg.c: 49: PORTBbits.RB7 = 0;
   980                           
   981                           ;incstack = 0
   982  001726  9E81               	bcf	3969,7,c	;volatile
   983                           
   984                           ;display7seg.c: 50: PORTBbits.RB6 = 0;
   985  001728  9C81               	bcf	3969,6,c	;volatile
   986                           
   987                           ;display7seg.c: 51: PORTBbits.RB5 = 0;
   988  00172A  9A81               	bcf	3969,5,c	;volatile
   989                           
   990                           ;display7seg.c: 52: PORTBbits.RB4 = 0;
   991  00172C  9881               	bcf	3969,4,c	;volatile
   992                           
   993                           ;display7seg.c: 53: PORTBbits.RB3 = 0;
   994  00172E  9681               	bcf	3969,3,c	;volatile
   995                           
   996                           ;display7seg.c: 54: PORTBbits.RB2 = 0;
   997  001730  9481               	bcf	3969,2,c	;volatile
   998                           
   999                           ;display7seg.c: 55: PORTBbits.RB1 = 0;
  1000  001732  9281               	bcf	3969,1,c	;volatile
  1001  001734  0012               	return		;funcret
  1002  001736                     __end_of_clear_Segment:
  1003                           	opt stack 0
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           postdec1	equ	0xFE5
  1011                           fsr1l	equ	0xFE1
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function ___wmul *****************
  1015 ;; Defined at:
  1016 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  multiplier      2    0[COMRAM] unsigned int 
  1019 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  product         2    4[COMRAM] unsigned int 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2    0[COMRAM] unsigned int 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, prodl, prodh
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;Total ram usage:        6 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_write
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text4
  1045  0016C8                     __ptext4:
  1046                           	opt stack 0
  1047  0016C8                     ___wmul:
  1048                           	opt stack 29
  1049                           
  1050                           ;incstack = 0
  1051  0016C8  5033               	movf	___wmul@multiplier,w,c
  1052  0016CA  0235               	mulwf	___wmul@multiplicand,c
  1053  0016CC  CFF3 F037          	movff	prodl,___wmul@product
  1054  0016D0  CFF4 F038          	movff	prodh,___wmul@product+1
  1055  0016D4  5033               	movf	___wmul@multiplier,w,c
  1056  0016D6  0236               	mulwf	___wmul@multiplicand+1,c
  1057  0016D8  50F3               	movf	prodl,w,c
  1058  0016DA  2638               	addwf	___wmul@product+1,f,c
  1059  0016DC  5034               	movf	___wmul@multiplier+1,w,c
  1060  0016DE  0235               	mulwf	___wmul@multiplicand,c
  1061  0016E0  50F3               	movf	prodl,w,c
  1062  0016E2  2638               	addwf	___wmul@product+1,f,c
  1063  0016E4  C037  F033         	movff	___wmul@product,?___wmul
  1064  0016E8  C038  F034         	movff	___wmul@product+1,?___wmul+1
  1065  0016EC  0012               	return	
  1066  0016EE  0012               	return		;funcret
  1067  0016F0                     __end_of___wmul:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           prodh	equ	0xFF4
  1074                           prodl	equ	0xFF3
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _caratula *****************
  1082 ;; Defined at:
  1083 ;;		line 13 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		None
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text5
  1111  001742                     __ptext5:
  1112                           	opt stack 0
  1113  001742                     _caratula:
  1114                           	opt stack 30
  1115                           
  1116                           ;incstack = 0
  1117  001742  0012               	return		;funcret
  1118  001744                     __end_of_caratula:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           prodh	equ	0xFF4
  1125                           prodl	equ	0xFF3
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1l	equ	0xFE1
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _Setup *****************
  1133 ;; Defined at:
  1134 ;;		line 33 in file "main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		_Write_RTC
  1157 ;;		_lcd_init
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text6
  1164  001618                     __ptext6:
  1165                           	opt stack 0
  1166  001618                     _Setup:
  1167                           	opt stack 27
  1168                           
  1169                           ;main.c: 35: OSCTUNEbits.INTSRC=1;
  1170                           
  1171                           ;incstack = 0
  1172  001618  8E9B               	bsf	3995,7,c	;volatile
  1173                           
  1174                           ;main.c: 36: OSCTUNEbits.PLLEN=0;
  1175  00161A  9C9B               	bcf	3995,6,c	;volatile
  1176                           
  1177                           ;main.c: 37: OSCCONbits.IRCF0=1;
  1178  00161C  88D3               	bsf	4051,4,c	;volatile
  1179                           
  1180                           ;main.c: 38: OSCCONbits.IRCF1=1;
  1181  00161E  8AD3               	bsf	4051,5,c	;volatile
  1182                           
  1183                           ;main.c: 39: OSCCONbits.IRCF2=1;
  1184  001620  8CD3               	bsf	4051,6,c	;volatile
  1185                           
  1186                           ;main.c: 40: OSCCONbits.SCS0=0;
  1187  001622  90D3               	bcf	4051,0,c	;volatile
  1188                           
  1189                           ;main.c: 41: OSCCONbits.SCS1=0;
  1190  001624  92D3               	bcf	4051,1,c	;volatile
  1191                           
  1192                           ;main.c: 42: TRISA = 0b11110000;
  1193  001626  0EF0               	movlw	240
  1194  001628  6E92               	movwf	3986,c	;volatile
  1195                           
  1196                           ;main.c: 43: TRISB = 0;
  1197  00162A  0E00               	movlw	0
  1198  00162C  6E93               	movwf	3987,c	;volatile
  1199                           
  1200                           ;main.c: 44: TRISC = 0b0110111;
  1201  00162E  0E37               	movlw	55
  1202  001630  6E94               	movwf	3988,c	;volatile
  1203                           
  1204                           ;main.c: 48: ANCON0=0b11111111;
  1205  001632  010F               	movlb	15	; () banked
  1206  001634  6948               	setf	72,b	;volatile
  1207                           
  1208                           ; BSR set to: 15
  1209                           ;main.c: 50: ANCON1=0b11111111;
  1210  001636  010F               	movlb	15	; () banked
  1211  001638  6949               	setf	73,b	;volatile
  1212                           
  1213                           ;main.c: 51: ADCON0=0b00101101;
  1214  00163A  0E2D               	movlw	45
  1215  00163C  6EC2               	movwf	4034,c	;volatile
  1216                           
  1217                           ;main.c: 52: ADCON1=0b00010000;
  1218  00163E  0E10               	movlw	16
  1219  001640  6EC1               	movwf	4033,c	;volatile
  1220                           
  1221                           ; BSR set to: 15
  1222                           ;main.c: 53: RTCCFGbits.RTCEN=1;
  1223  001642  010F               	movlb	15	; () banked
  1224  001644  8F3F               	bsf	63,7,b	;volatile
  1225                           
  1226                           ; BSR set to: 15
  1227                           ;main.c: 54: RTCCFGbits.RTCWREN=1;
  1228  001646  010F               	movlb	15	; () banked
  1229  001648  8B3F               	bsf	63,5,b	;volatile
  1230                           
  1231                           ; BSR set to: 15
  1232                           ;main.c: 55: T1CONbits.T1OSCEN=1;
  1233  00164A  86CD               	bsf	4045,3,c	;volatile
  1234                           
  1235                           ; BSR set to: 15
  1236                           ;main.c: 56: Write_RTC();
  1237  00164C  EC83  F007         	call	_Write_RTC	;wreg free
  1238                           
  1239                           ;main.c: 57: lcd_init();
  1240  001650  EC6F  F00A         	call	_lcd_init	;wreg free
  1241                           
  1242                           ;main.c: 59: LATBbits.LATB1 = 1;;
  1243  001654  828A               	bsf	3978,1,c	;volatile
  1244  001656  0012               	return		;funcret
  1245  001658                     __end_of_Setup:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           prodh	equ	0xFF4
  1252                           prodl	equ	0xFF3
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           fsr1l	equ	0xFE1
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _lcd_init *****************
  1260 ;; Defined at:
  1261 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  i               1    4[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    2
  1282 ;; This function calls:
  1283 ;;		_Delay1KTCYx
  1284 ;;		_lcd_send_byte
  1285 ;;		_lcd_send_nibble
  1286 ;; This function is called by:
  1287 ;;		_Setup
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text7
  1292  0014DE                     __ptext7:
  1293                           	opt stack 0
  1294  0014DE                     _lcd_init:
  1295                           	opt stack 27
  1296                           
  1297                           ;unmc_lcd_216.c: 120: int8 i;
  1298                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1299                           
  1300                           ;incstack = 0
  1301  0014DE  9693               	bcf	3987,3,c	;volatile
  1302                           
  1303                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1304  0014E0  9493               	bcf	3987,2,c	;volatile
  1305                           
  1306                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1307  0014E2  968A               	bcf	3978,3,c	;volatile
  1308                           
  1309                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1310  0014E4  948A               	bcf	3978,2,c	;volatile
  1311                           
  1312                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1313  0014E6  9893               	bcf	3987,4,c	;volatile
  1314                           
  1315                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1316  0014E8  9A93               	bcf	3987,5,c	;volatile
  1317                           
  1318                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1319  0014EA  9C93               	bcf	3987,6,c	;volatile
  1320                           
  1321                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1322  0014EC  9E93               	bcf	3987,7,c	;volatile
  1323                           
  1324                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1325  0014EE  0E0A               	movlw	10
  1326  0014F0  EC81  F00B         	call	_Delay1KTCYx
  1327                           
  1328                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1329  0014F4  0E0A               	movlw	10
  1330  0014F6  EC81  F00B         	call	_Delay1KTCYx
  1331                           
  1332                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1333  0014FA  0E0A               	movlw	10
  1334  0014FC  EC81  F00B         	call	_Delay1KTCYx
  1335                           
  1336                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1337  001500  0E00               	movlw	0
  1338  001502  6E37               	movwf	lcd_init@i,c
  1339  001504                     l1863:
  1340  001504  0E02               	movlw	2
  1341  001506  6437               	cpfsgt	lcd_init@i,c
  1342  001508  D001               	goto	l1867
  1343  00150A  D008               	goto	l1873
  1344  00150C                     l1867:
  1345                           
  1346                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1347  00150C  0E03               	movlw	3
  1348  00150E  ECAF  F00A         	call	_lcd_send_nibble
  1349                           
  1350                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1351  001512  0E0A               	movlw	10
  1352  001514  EC81  F00B         	call	_Delay1KTCYx
  1353  001518  2A37               	incf	lcd_init@i,f,c
  1354  00151A  D7F4               	goto	l1863
  1355  00151C                     l1873:
  1356                           
  1357                           ;unmc_lcd_216.c: 146: }
  1358                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1359  00151C  0E02               	movlw	2
  1360  00151E  ECAF  F00A         	call	_lcd_send_nibble
  1361                           
  1362                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1363  001522  0E00               	movlw	0
  1364  001524  6E37               	movwf	lcd_init@i,c
  1365  001526  0E03               	movlw	3
  1366  001528  6437               	cpfsgt	lcd_init@i,c
  1367  00152A  D002               	goto	l1881
  1368  00152C  0012               	return	
  1369  00152E  0012               	return	
  1370  001530                     l1881:
  1371                           
  1372                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1373  001530  5037               	movf	lcd_init@i,w,c
  1374  001532  0D01               	mullw	1
  1375  001534  0E01               	movlw	low _LCD_INIT_STRING
  1376  001536  24F3               	addwf	prodl,w,c
  1377  001538  6EF6               	movwf	tblptrl,c
  1378  00153A  0E0F               	movlw	high _LCD_INIT_STRING
  1379  00153C  20F4               	addwfc	prodh,w,c
  1380  00153E  6EF7               	movwf	tblptrh,c
  1381  001540                     	if	0	;There are less than 3 active tblptr bytes
  1382  001540                     	endif
  1383  001540  0008               	tblrd		*
  1384  001542  CFF5 F035          	movff	tablat,lcd_send_byte@n
  1385  001546  0E00               	movlw	0
  1386  001548  EC4B  F00B         	call	_lcd_send_byte
  1387                           
  1388                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1389  00154C  0E0A               	movlw	10
  1390  00154E  EC81  F00B         	call	_Delay1KTCYx
  1391  001552  2A37               	incf	lcd_init@i,f,c
  1392  001554  0E03               	movlw	3
  1393  001556  6437               	cpfsgt	lcd_init@i,c
  1394  001558  D7EB               	goto	l1881
  1395  00155A  0012               	return	
  1396  00155C  0012               	return		;funcret
  1397  00155E                     __end_of_lcd_init:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           prodh	equ	0xFF4
  1404                           prodl	equ	0xFF3
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1l	equ	0xFE1
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _lcd_send_byte *****************
  1412 ;; Defined at:
  1413 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  address         1    wreg     unsigned char 
  1416 ;;  n               1    2[COMRAM] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  address         1    3[COMRAM] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;		None               void
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		_Delay100TCYx
  1437 ;;		_lcd_send_nibble
  1438 ;; This function is called by:
  1439 ;;		_lcd_init
  1440 ;;		_lcd_gotoxy
  1441 ;;		_lcd_putc
  1442 ;;		_lcd_comand
  1443 ;;		_lcd_setcursor_vb
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text8
  1448  001696                     __ptext8:
  1449                           	opt stack 0
  1450  001696                     _lcd_send_byte:
  1451                           	opt stack 27
  1452                           
  1453                           ;incstack = 0
  1454                           ;lcd_send_byte@address stored from wreg
  1455  001696  6E36               	movwf	lcd_send_byte@address,c
  1456                           
  1457                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  1458  001698  968A               	bcf	3978,3,c	;volatile
  1459                           
  1460                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  1461  00169A  0E02               	movlw	2
  1462  00169C  EC78  F00B         	call	_Delay100TCYx
  1463                           
  1464                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  1465  0016A0  9893               	bcf	3987,4,c	;volatile
  1466                           
  1467                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  1468  0016A2  9A93               	bcf	3987,5,c	;volatile
  1469                           
  1470                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  1471  0016A4  9C93               	bcf	3987,6,c	;volatile
  1472                           
  1473                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  1474  0016A6  9E93               	bcf	3987,7,c	;volatile
  1475                           
  1476                           ;unmc_lcd_216.c: 101: if(address)
  1477  0016A8  5036               	movf	lcd_send_byte@address,w,c
  1478  0016AA  B4D8               	btfsc	status,2,c
  1479  0016AC  D002               	goto	l141
  1480                           
  1481                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  1482  0016AE  868A               	bsf	3978,3,c	;volatile
  1483  0016B0  D001               	goto	l142
  1484  0016B2                     l141:
  1485                           
  1486                           ;unmc_lcd_216.c: 103: else
  1487                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  1488  0016B2  968A               	bcf	3978,3,c	;volatile
  1489  0016B4                     l142:
  1490                           
  1491                           ;unmc_lcd_216.c: 106: __nop();
  1492  0016B4  F000               	nop	
  1493                           
  1494                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  1495  0016B6  3835               	swapf	lcd_send_byte@n,w,c
  1496  0016B8  0B0F               	andlw	15
  1497  0016BA  ECAF  F00A         	call	_lcd_send_nibble
  1498                           
  1499                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  1500  0016BE  5035               	movf	lcd_send_byte@n,w,c
  1501  0016C0  0B0F               	andlw	15
  1502  0016C2  ECAF  F00A         	call	_lcd_send_nibble
  1503  0016C6  0012               	return		;funcret
  1504  0016C8                     __end_of_lcd_send_byte:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodh	equ	0xFF4
  1511                           prodl	equ	0xFF3
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           postdec1	equ	0xFE5
  1515                           fsr1l	equ	0xFE1
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _lcd_send_nibble *****************
  1519 ;; Defined at:
  1520 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  nibble          1    wreg     unsigned char 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  nibble          1    1[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_lcd_send_byte
  1544 ;;		_lcd_init
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  00155E                     __ptext9:
  1550                           	opt stack 0
  1551  00155E                     _lcd_send_nibble:
  1552                           	opt stack 28
  1553                           
  1554                           ;incstack = 0
  1555                           ;lcd_send_nibble@nibble stored from wreg
  1556  00155E  6E34               	movwf	lcd_send_nibble@nibble,c
  1557                           
  1558                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  1559  001560  A034               	btfss	lcd_send_nibble@nibble,0,c
  1560  001562  D003               	goto	u10
  1561  001564  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1562  001566  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1563  001568  D001               	goto	u28
  1564  00156A                     u10:
  1565  00156A  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1566  00156C                     u28:
  1567  00156C  3A33               	swapf	??_lcd_send_nibble,f,c
  1568  00156E  508A               	movf	3978,w,c	;volatile
  1569  001570  1833               	xorwf	??_lcd_send_nibble,w,c
  1570  001572  0BEF               	andlw	-17
  1571  001574  1833               	xorwf	??_lcd_send_nibble,w,c
  1572  001576  6E8A               	movwf	3978,c	;volatile
  1573                           
  1574                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  1575  001578  A234               	btfss	lcd_send_nibble@nibble,1,c
  1576  00157A  D003               	goto	u30
  1577  00157C  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1578  00157E  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1579  001580  D001               	goto	u48
  1580  001582                     u30:
  1581  001582  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1582  001584                     u48:
  1583  001584  3A33               	swapf	??_lcd_send_nibble,f,c
  1584  001586  4633               	rlncf	??_lcd_send_nibble,f,c
  1585  001588  508A               	movf	3978,w,c	;volatile
  1586  00158A  1833               	xorwf	??_lcd_send_nibble,w,c
  1587  00158C  0BDF               	andlw	-33
  1588  00158E  1833               	xorwf	??_lcd_send_nibble,w,c
  1589  001590  6E8A               	movwf	3978,c	;volatile
  1590                           
  1591                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  1592  001592  A434               	btfss	lcd_send_nibble@nibble,2,c
  1593  001594  D003               	goto	u50
  1594  001596  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1595  001598  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1596  00159A  D001               	goto	u68
  1597  00159C                     u50:
  1598  00159C  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1599  00159E                     u68:
  1600  00159E  3A33               	swapf	??_lcd_send_nibble,f,c
  1601  0015A0  4633               	rlncf	??_lcd_send_nibble,f,c
  1602  0015A2  4633               	rlncf	??_lcd_send_nibble,f,c
  1603  0015A4  508A               	movf	3978,w,c	;volatile
  1604  0015A6  1833               	xorwf	??_lcd_send_nibble,w,c
  1605  0015A8  0BBF               	andlw	-65
  1606  0015AA  1833               	xorwf	??_lcd_send_nibble,w,c
  1607  0015AC  6E8A               	movwf	3978,c	;volatile
  1608                           
  1609                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  1610  0015AE  A634               	btfss	lcd_send_nibble@nibble,3,c
  1611  0015B0  D003               	goto	u70
  1612  0015B2  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1613  0015B4  2A33               	incf	??_lcd_send_nibble& (0+255),f,c
  1614  0015B6  D001               	goto	u88
  1615  0015B8                     u70:
  1616  0015B8  6A33               	clrf	??_lcd_send_nibble& (0+255),c
  1617  0015BA                     u88:
  1618  0015BA  3233               	rrcf	??_lcd_send_nibble,f,c
  1619  0015BC  3233               	rrcf	??_lcd_send_nibble,f,c
  1620  0015BE  508A               	movf	3978,w,c	;volatile
  1621  0015C0  1833               	xorwf	??_lcd_send_nibble,w,c
  1622  0015C2  0B7F               	andlw	-129
  1623  0015C4  1833               	xorwf	??_lcd_send_nibble,w,c
  1624  0015C6  6E8A               	movwf	3978,c	;volatile
  1625                           
  1626                           ;unmc_lcd_216.c: 32: __nop();
  1627  0015C8  F000               	nop	
  1628                           
  1629                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  1630  0015CA  848A               	bsf	3978,2,c	;volatile
  1631                           
  1632                           ;unmc_lcd_216.c: 34: __nop();__nop();
  1633  0015CC  F000               	nop	
  1634  0015CE  F000               	nop	
  1635                           
  1636                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  1637  0015D0  948A               	bcf	3978,2,c	;volatile
  1638  0015D2  0012               	return		;funcret
  1639  0015D4                     __end_of_lcd_send_nibble:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1l	equ	0xFE1
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _Delay100TCYx *****************
  1654 ;; Defined at:
  1655 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  unit            1    wreg     unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  unit            1    0[COMRAM] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;Total ram usage:        1 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_lcd_send_byte
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text10
  1683  0016F0                     __ptext10:
  1684                           	opt stack 0
  1685  0016F0                     _Delay100TCYx:
  1686                           	opt stack 27
  1687                           
  1688                           ;incstack = 0
  1689                           ;Delay100TCYx@unit stored from wreg
  1690  0016F0  6E33               	movwf	Delay100TCYx@unit,c
  1691  0016F2  0E21               	movlw	33
  1692  0016F4                     u957:
  1693  0016F4  2EE8               	decfsz	wreg,f,c
  1694  0016F6  D7FE               	goto	u957
  1695  0016F8  F000               	nop	
  1696  0016FA  2E33               	decfsz	Delay100TCYx@unit,f,c
  1697  0016FC  D7FA               	goto	l1103
  1698  0016FE  0012               	return	
  1699  001700  0012               	return		;funcret
  1700  001702                     __end_of_Delay100TCYx:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodh	equ	0xFF4
  1707                           prodl	equ	0xFF3
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1l	equ	0xFE1
  1712                           status	equ	0xFD8
  1713                           
  1714 ;; *************** function _Delay1KTCYx *****************
  1715 ;; Defined at:
  1716 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  unit            1    wreg     unsigned char 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  unit            1    0[COMRAM] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;		None               void
  1723 ;; Registers used:
  1724 ;;		wreg
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;Total ram usage:        1 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_lcd_init
  1740 ;;		_DelayPORXLCD
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text11
  1745  001702                     __ptext11:
  1746                           	opt stack 0
  1747  001702                     _Delay1KTCYx:
  1748                           	opt stack 28
  1749                           
  1750                           ;incstack = 0
  1751                           ;Delay1KTCYx@unit stored from wreg
  1752  001702  6E33               	movwf	Delay1KTCYx@unit,c
  1753  001704  0EFA               	movlw	250
  1754  001706                     u967:
  1755  001706  F000               	nop	
  1756  001708  2EE8               	decfsz	wreg,f,c
  1757  00170A  D7FD               	goto	u967
  1758  00170C  2E33               	decfsz	Delay1KTCYx@unit,f,c
  1759  00170E  D7FA               	goto	l1133
  1760  001710  0012               	return	
  1761  001712  0012               	return		;funcret
  1762  001714                     __end_of_Delay1KTCYx:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           prodh	equ	0xFF4
  1769                           prodl	equ	0xFF3
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1l	equ	0xFE1
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _Write_RTC *****************
  1777 ;; Defined at:
  1778 ;;		line 22 in file "Unimic/sources/unmc_rtcc_01.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    2
  1799 ;; This function calls:
  1800 ;;		_RtccWrOn
  1801 ;;		_RtccWriteDate
  1802 ;;		_RtccWriteTime
  1803 ;;		___awdiv
  1804 ;; This function is called by:
  1805 ;;		_Setup
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text12
  1810  000F06                     __ptext12:
  1811                           	opt stack 0
  1812  000F06                     _Write_RTC:
  1813                           	opt stack 27
  1814                           
  1815                           ;unmc_rtcc_01.c: 24: RtccWrOn();
  1816                           
  1817                           ;incstack = 0
  1818  000F06  EC8A  F00B         	call	_RtccWrOn	;wreg free
  1819                           
  1820                           ;unmc_rtcc_01.c: 26: PIE3bits.RTCCIE=1;
  1821  000F0A  80A3               	bsf	4003,0,c	;volatile
  1822                           
  1823                           ;unmc_rtcc_01.c: 27: segundo_d=segundo/10;
  1824  000F0C  C029  F033         	movff	_segundo,___awdiv@dividend
  1825  000F10  C02A  F034         	movff	_segundo+1,___awdiv@dividend+1
  1826  000F14  0E00               	movlw	0
  1827  000F16  6E36               	movwf	___awdiv@divisor+1,c
  1828  000F18  0E0A               	movlw	10
  1829  000F1A  6E35               	movwf	___awdiv@divisor,c
  1830  000F1C  EC24  F00A         	call	___awdiv	;wreg free
  1831  000F20  5033               	movf	?___awdiv,w,c
  1832  000F22  6E51               	movwf	_segundo_d,c
  1833                           
  1834                           ;unmc_rtcc_01.c: 28: segundo_u=segundo-segundo_d*10;
  1835  000F24  5051               	movf	_segundo_d,w,c
  1836  000F26  0D0A               	mullw	10
  1837  000F28  50F3               	movf	prodl,w,c
  1838  000F2A  0800               	sublw	0
  1839  000F2C  2429               	addwf	_segundo,w,c
  1840  000F2E  6E52               	movwf	_segundo_u,c
  1841                           
  1842                           ;unmc_rtcc_01.c: 29: RtccTime.f.sec =segundo_d*16+segundo_u;
  1843  000F30  5051               	movf	_segundo_d,w,c
  1844  000F32  0D10               	mullw	16
  1845  000F34  50F3               	movf	prodl,w,c
  1846  000F36  2452               	addwf	_segundo_u,w,c
  1847  000F38  6E30               	movwf	_RtccTime+1,c
  1848                           
  1849                           ;unmc_rtcc_01.c: 30: minuto_d=minuto/10;
  1850  000F3A  C05D  F033         	movff	_minuto,___awdiv@dividend
  1851  000F3E  C05E  F034         	movff	_minuto+1,___awdiv@dividend+1
  1852  000F42  0E00               	movlw	0
  1853  000F44  6E36               	movwf	___awdiv@divisor+1,c
  1854  000F46  0E0A               	movlw	10
  1855  000F48  6E35               	movwf	___awdiv@divisor,c
  1856  000F4A  EC24  F00A         	call	___awdiv	;wreg free
  1857  000F4E  5033               	movf	?___awdiv,w,c
  1858  000F50  6E4F               	movwf	_minuto_d,c
  1859                           
  1860                           ;unmc_rtcc_01.c: 31: minuto_u=minuto-minuto_d*10;
  1861  000F52  504F               	movf	_minuto_d,w,c
  1862  000F54  0D0A               	mullw	10
  1863  000F56  50F3               	movf	prodl,w,c
  1864  000F58  0800               	sublw	0
  1865  000F5A  245D               	addwf	_minuto,w,c
  1866  000F5C  6E50               	movwf	_minuto_u,c
  1867                           
  1868                           ;unmc_rtcc_01.c: 32: RtccTime.f.min =minuto_d*16+minuto_u;
  1869  000F5E  504F               	movf	_minuto_d,w,c
  1870  000F60  0D10               	mullw	16
  1871  000F62  50F3               	movf	prodl,w,c
  1872  000F64  2450               	addwf	_minuto_u,w,c
  1873  000F66  6E31               	movwf	_RtccTime+2,c
  1874                           
  1875                           ;unmc_rtcc_01.c: 33: hora_d=hora/10;
  1876  000F68  C059  F033         	movff	_hora,___awdiv@dividend
  1877  000F6C  C05A  F034         	movff	_hora+1,___awdiv@dividend+1
  1878  000F70  0E00               	movlw	0
  1879  000F72  6E36               	movwf	___awdiv@divisor+1,c
  1880  000F74  0E0A               	movlw	10
  1881  000F76  6E35               	movwf	___awdiv@divisor,c
  1882  000F78  EC24  F00A         	call	___awdiv	;wreg free
  1883  000F7C  5033               	movf	?___awdiv,w,c
  1884  000F7E  6E4B               	movwf	_hora_d,c
  1885                           
  1886                           ;unmc_rtcc_01.c: 34: hora_u=hora-hora_d*10;
  1887  000F80  504B               	movf	_hora_d,w,c
  1888  000F82  0D0A               	mullw	10
  1889  000F84  50F3               	movf	prodl,w,c
  1890  000F86  0800               	sublw	0
  1891  000F88  2459               	addwf	_hora,w,c
  1892  000F8A  6E4C               	movwf	_hora_u,c
  1893                           
  1894                           ;unmc_rtcc_01.c: 35: RtccTime.f.hour=hora_d*16+hora_u;
  1895  000F8C  504B               	movf	_hora_d,w,c
  1896  000F8E  0D10               	mullw	16
  1897  000F90  50F3               	movf	prodl,w,c
  1898  000F92  244C               	addwf	_hora_u,w,c
  1899  000F94  6E32               	movwf	_RtccTime+3,c
  1900                           
  1901                           ;unmc_rtcc_01.c: 36: anio_d=anio/10;
  1902  000F96  C053  F033         	movff	_anio,___awdiv@dividend
  1903  000F9A  C054  F034         	movff	_anio+1,___awdiv@dividend+1
  1904  000F9E  0E00               	movlw	0
  1905  000FA0  6E36               	movwf	___awdiv@divisor+1,c
  1906  000FA2  0E0A               	movlw	10
  1907  000FA4  6E35               	movwf	___awdiv@divisor,c
  1908  000FA6  EC24  F00A         	call	___awdiv	;wreg free
  1909  000FAA  5033               	movf	?___awdiv,w,c
  1910  000FAC  6E46               	movwf	_anio_d,c
  1911                           
  1912                           ;unmc_rtcc_01.c: 37: anio_u=anio-anio_d*10;
  1913  000FAE  5046               	movf	_anio_d,w,c
  1914  000FB0  0D0A               	mullw	10
  1915  000FB2  50F3               	movf	prodl,w,c
  1916  000FB4  0800               	sublw	0
  1917  000FB6  2453               	addwf	_anio,w,c
  1918  000FB8  6E47               	movwf	_anio_u,c
  1919                           
  1920                           ;unmc_rtcc_01.c: 38: RtccDate.f.year=anio_d*16+anio_u;
  1921  000FBA  5046               	movf	_anio_d,w,c
  1922  000FBC  0D10               	mullw	16
  1923  000FBE  50F3               	movf	prodl,w,c
  1924  000FC0  2447               	addwf	_anio_u,w,c
  1925  000FC2  6E2E               	movwf	_RtccDate+3,c
  1926                           
  1927                           ;unmc_rtcc_01.c: 39: mes_d=mes/10;
  1928  000FC4  C05B  F033         	movff	_mes,___awdiv@dividend
  1929  000FC8  C05C  F034         	movff	_mes+1,___awdiv@dividend+1
  1930  000FCC  0E00               	movlw	0
  1931  000FCE  6E36               	movwf	___awdiv@divisor+1,c
  1932  000FD0  0E0A               	movlw	10
  1933  000FD2  6E35               	movwf	___awdiv@divisor,c
  1934  000FD4  EC24  F00A         	call	___awdiv	;wreg free
  1935  000FD8  5033               	movf	?___awdiv,w,c
  1936  000FDA  6E4D               	movwf	_mes_d,c
  1937                           
  1938                           ;unmc_rtcc_01.c: 40: mes_u=mes-mes_d*10;
  1939  000FDC  504D               	movf	_mes_d,w,c
  1940  000FDE  0D0A               	mullw	10
  1941  000FE0  50F3               	movf	prodl,w,c
  1942  000FE2  0800               	sublw	0
  1943  000FE4  245B               	addwf	_mes,w,c
  1944  000FE6  6E4E               	movwf	_mes_u,c
  1945                           
  1946                           ;unmc_rtcc_01.c: 41: RtccDate.f.mon=mes_d*16+mes_u;
  1947  000FE8  504D               	movf	_mes_d,w,c
  1948  000FEA  0D10               	mullw	16
  1949  000FEC  50F3               	movf	prodl,w,c
  1950  000FEE  244E               	addwf	_mes_u,w,c
  1951  000FF0  6E2D               	movwf	_RtccDate+2,c
  1952                           
  1953                           ;unmc_rtcc_01.c: 42: fecha_d=dia/10;
  1954  000FF2  C055  F033         	movff	_dia,___awdiv@dividend
  1955  000FF6  C056  F034         	movff	_dia+1,___awdiv@dividend+1
  1956  000FFA  0E00               	movlw	0
  1957  000FFC  6E36               	movwf	___awdiv@divisor+1,c
  1958  000FFE  0E0A               	movlw	10
  1959  001000  6E35               	movwf	___awdiv@divisor,c
  1960  001002  EC24  F00A         	call	___awdiv	;wreg free
  1961  001006  5033               	movf	?___awdiv,w,c
  1962  001008  6E49               	movwf	_fecha_d,c
  1963                           
  1964                           ;unmc_rtcc_01.c: 43: fecha_u=dia-fecha_d*10;
  1965  00100A  5049               	movf	_fecha_d,w,c
  1966  00100C  0D0A               	mullw	10
  1967  00100E  50F3               	movf	prodl,w,c
  1968  001010  0800               	sublw	0
  1969  001012  2455               	addwf	_dia,w,c
  1970  001014  6E4A               	movwf	_fecha_u,c
  1971                           
  1972                           ;unmc_rtcc_01.c: 44: RtccDate.f.mday=fecha_d*16+fecha_u;
  1973  001016  5049               	movf	_fecha_d,w,c
  1974  001018  0D10               	mullw	16
  1975  00101A  50F3               	movf	prodl,w,c
  1976  00101C  244A               	addwf	_fecha_u,w,c
  1977  00101E  6E2C               	movwf	_RtccDate+1,c
  1978                           
  1979                           ;unmc_rtcc_01.c: 45: dia_semana=diasem;
  1980  001020  C057  F048         	movff	_diasem,_dia_semana
  1981                           
  1982                           ;unmc_rtcc_01.c: 46: RtccDate.f.wday =diasem;
  1983  001024  C057  F02B         	movff	_diasem,_RtccDate
  1984                           
  1985                           ;unmc_rtcc_01.c: 47: RtccWriteTime(&RtccTime,1);
  1986  001028  0E2F               	movlw	low _RtccTime
  1987  00102A  6E33               	movwf	RtccWriteTime@pTm,c
  1988  00102C  0E00               	movlw	high _RtccTime
  1989  00102E  6E34               	movwf	RtccWriteTime@pTm+1,c
  1990  001030  0E01               	movlw	1
  1991  001032  6E35               	movwf	RtccWriteTime@di,c
  1992  001034  ECCA  F008         	call	_RtccWriteTime	;wreg free
  1993                           
  1994                           ;unmc_rtcc_01.c: 48: RtccWriteDate(&RtccDate,1);
  1995  001038  0E2B               	movlw	low _RtccDate
  1996  00103A  6E33               	movwf	RtccWriteDate@pDt,c
  1997  00103C  0E00               	movlw	high _RtccDate
  1998  00103E  6E34               	movwf	RtccWriteDate@pDt+1,c
  1999  001040  0E01               	movlw	1
  2000  001042  6E35               	movwf	RtccWriteDate@di,c
  2001  001044  EC27  F008         	call	_RtccWriteDate	;wreg free
  2002                           
  2003                           ;unmc_rtcc_01.c: 49: (RTCCFGbits.RTCEN=1);
  2004  001048  010F               	movlb	15	; () banked
  2005  00104A  8F3F               	bsf	63,7,b	;volatile
  2006                           
  2007                           ; BSR set to: 15
  2008  00104C  0012               	return		;funcret
  2009  00104E                     __end_of_Write_RTC:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodh	equ	0xFF4
  2016                           prodl	equ	0xFF3
  2017                           postinc0	equ	0xFEE
  2018                           wreg	equ	0xFE8
  2019                           postdec1	equ	0xFE5
  2020                           fsr1l	equ	0xFE1
  2021                           status	equ	0xFD8
  2022                           
  2023 ;; *************** function ___awdiv *****************
  2024 ;; Defined at:
  2025 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  dividend        2    0[COMRAM] int 
  2028 ;;  divisor         2    2[COMRAM] int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  quotient        2    6[COMRAM] int 
  2031 ;;  sign            1    5[COMRAM] unsigned char 
  2032 ;;  counter         1    4[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2    0[COMRAM] int 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;Total ram usage:        8 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_Write_RTC
  2052 ;;		_write
  2053 ;;		__delay_s
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text13
  2058  001448                     __ptext13:
  2059                           	opt stack 0
  2060  001448                     ___awdiv:
  2061                           	opt stack 29
  2062                           
  2063                           ; BSR set to: 15
  2064                           ;incstack = 0
  2065  001448  0E00               	movlw	0
  2066  00144A  6E38               	movwf	___awdiv@sign,c
  2067  00144C  AE36               	btfss	___awdiv@divisor+1,7,c
  2068  00144E  D007               	goto	l1771
  2069  001450  6C35               	negf	___awdiv@divisor,c
  2070  001452  1E36               	comf	___awdiv@divisor+1,f,c
  2071  001454  B0D8               	btfsc	status,0,c
  2072  001456  2A36               	incf	___awdiv@divisor+1,f,c
  2073  001458  0E01               	movlw	1
  2074  00145A  6E38               	movwf	___awdiv@sign,c
  2075  00145C  D000               	goto	l1771
  2076  00145E                     l1771:
  2077  00145E  AE34               	btfss	___awdiv@dividend+1,7,c
  2078  001460  D007               	goto	l1777
  2079  001462  6C33               	negf	___awdiv@dividend,c
  2080  001464  1E34               	comf	___awdiv@dividend+1,f,c
  2081  001466  B0D8               	btfsc	status,0,c
  2082  001468  2A34               	incf	___awdiv@dividend+1,f,c
  2083  00146A  0E01               	movlw	1
  2084  00146C  1A38               	xorwf	___awdiv@sign,f,c
  2085  00146E  D000               	goto	l1777
  2086  001470                     l1777:
  2087  001470  0E00               	movlw	0
  2088  001472  6E3A               	movwf	___awdiv@quotient+1,c
  2089  001474  0E00               	movlw	0
  2090  001476  6E39               	movwf	___awdiv@quotient,c
  2091  001478  5035               	movf	___awdiv@divisor,w,c
  2092  00147A  1036               	iorwf	___awdiv@divisor+1,w,c
  2093  00147C  B4D8               	btfsc	status,2,c
  2094  00147E  D021               	goto	l1799
  2095  001480  0E01               	movlw	1
  2096  001482  6E37               	movwf	___awdiv@counter,c
  2097  001484  D005               	goto	l1785
  2098  001486                     l1783:
  2099  001486  90D8               	bcf	status,0,c
  2100  001488  3635               	rlcf	___awdiv@divisor,f,c
  2101  00148A  3636               	rlcf	___awdiv@divisor+1,f,c
  2102  00148C  2A37               	incf	___awdiv@counter,f,c
  2103  00148E  D000               	goto	l1785
  2104  001490                     l1785:
  2105  001490  BE36               	btfsc	___awdiv@divisor+1,7,c
  2106  001492  D002               	goto	l1787
  2107  001494  D7F8               	goto	l1783
  2108  001496  D000               	goto	l1787
  2109  001498                     l1787:
  2110  001498  90D8               	bcf	status,0,c
  2111  00149A  3639               	rlcf	___awdiv@quotient,f,c
  2112  00149C  363A               	rlcf	___awdiv@quotient+1,f,c
  2113  00149E  5035               	movf	___awdiv@divisor,w,c
  2114  0014A0  5C33               	subwf	___awdiv@dividend,w,c
  2115  0014A2  5036               	movf	___awdiv@divisor+1,w,c
  2116  0014A4  5834               	subwfb	___awdiv@dividend+1,w,c
  2117  0014A6  A0D8               	btfss	status,0,c
  2118  0014A8  D006               	goto	l1795
  2119  0014AA  5035               	movf	___awdiv@divisor,w,c
  2120  0014AC  5E33               	subwf	___awdiv@dividend,f,c
  2121  0014AE  5036               	movf	___awdiv@divisor+1,w,c
  2122  0014B0  5A34               	subwfb	___awdiv@dividend+1,f,c
  2123  0014B2  8039               	bsf	___awdiv@quotient,0,c
  2124  0014B4  D000               	goto	l1795
  2125  0014B6                     l1795:
  2126  0014B6  90D8               	bcf	status,0,c
  2127  0014B8  3236               	rrcf	___awdiv@divisor+1,f,c
  2128  0014BA  3235               	rrcf	___awdiv@divisor,f,c
  2129  0014BC  2E37               	decfsz	___awdiv@counter,f,c
  2130  0014BE  D7EC               	goto	l1787
  2131  0014C0  D000               	goto	l1799
  2132  0014C2                     l1799:
  2133  0014C2  5038               	movf	___awdiv@sign,w,c
  2134  0014C4  B4D8               	btfsc	status,2,c
  2135  0014C6  D005               	goto	l1803
  2136  0014C8  6C39               	negf	___awdiv@quotient,c
  2137  0014CA  1E3A               	comf	___awdiv@quotient+1,f,c
  2138  0014CC  B0D8               	btfsc	status,0,c
  2139  0014CE  2A3A               	incf	___awdiv@quotient+1,f,c
  2140  0014D0  D000               	goto	l1803
  2141  0014D2                     l1803:
  2142  0014D2  C039  F033         	movff	___awdiv@quotient,?___awdiv
  2143  0014D6  C03A  F034         	movff	___awdiv@quotient+1,?___awdiv+1
  2144  0014DA  0012               	return	
  2145  0014DC  0012               	return		;funcret
  2146  0014DE                     __end_of___awdiv:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1l	equ	0xFE1
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _RtccWriteTime *****************
  2161 ;; Defined at:
  2162 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  pTm             2    0[COMRAM] PTR const struct .
  2165 ;;		 -> RtccTime(4), 
  2166 ;;  di              1    2[COMRAM] enum E7121
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  tempHourWDay    2    9[COMRAM] struct .
  2169 ;;  tempMinSec      2    7[COMRAM] struct .
  2170 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2171 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2172 ;;  wasOn           1    4[COMRAM] enum E7121
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      enum E7121
  2175 ;; Registers used:
  2176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;Total ram usage:       11 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    1
  2189 ;; This function calls:
  2190 ;;		_RtccWrOn
  2191 ;; This function is called by:
  2192 ;;		_Write_RTC
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text14
  2197  001194                     __ptext14:
  2198                           	opt stack 0
  2199  001194                     _RtccWriteTime:
  2200                           	opt stack 27
  2201                           
  2202                           ;incstack = 0
  2203  001194  0E00               	movlw	0
  2204  001196  6E38               	movwf	RtccWriteTime@wasAlrm,c
  2205  001198  EE20 F002          	lfsr	2,2
  2206  00119C  5033               	movf	RtccWriteTime@pTm,w,c
  2207  00119E  26D9               	addwf	fsr2l,f,c
  2208  0011A0  5034               	movf	RtccWriteTime@pTm+1,w,c
  2209  0011A2  22DA               	addwfc	fsr2h,f,c
  2210  0011A4  0E5A               	movlw	90
  2211  0011A6  60DF               	cpfslt	indf2,c
  2212  0011A8  0012               	return	
  2213  0011AA  EE20 F001          	lfsr	2,1
  2214  0011AE  5033               	movf	RtccWriteTime@pTm,w,c
  2215  0011B0  26D9               	addwf	fsr2l,f,c
  2216  0011B2  5034               	movf	RtccWriteTime@pTm+1,w,c
  2217  0011B4  22DA               	addwfc	fsr2h,f,c
  2218  0011B6  0E5A               	movlw	90
  2219  0011B8  60DF               	cpfslt	indf2,c
  2220  0011BA  0012               	return	
  2221  0011BC  EE20 F003          	lfsr	2,3
  2222  0011C0  5033               	movf	RtccWriteTime@pTm,w,c
  2223  0011C2  26D9               	addwf	fsr2l,f,c
  2224  0011C4  5034               	movf	RtccWriteTime@pTm+1,w,c
  2225  0011C6  22DA               	addwfc	fsr2h,f,c
  2226  0011C8  0E24               	movlw	36
  2227  0011CA  64DF               	cpfsgt	indf2,c
  2228  0011CC  D002               	goto	l1635
  2229  0011CE  0012               	return	
  2230                           
  2231                           ;	Return value of _RtccWriteTime is never used
  2232  0011D0  0012               	return	
  2233  0011D2                     l1635:
  2234  0011D2  EE20 F002          	lfsr	2,2
  2235  0011D6  5033               	movf	RtccWriteTime@pTm,w,c
  2236  0011D8  26D9               	addwf	fsr2l,f,c
  2237  0011DA  5034               	movf	RtccWriteTime@pTm+1,w,c
  2238  0011DC  22DA               	addwfc	fsr2h,f,c
  2239  0011DE  50DF               	movf	indf2,w,c
  2240  0011E0  6E3B               	movwf	RtccWriteTime@tempMinSec+1,c
  2241  0011E2  EE20 F001          	lfsr	2,1
  2242  0011E6  5033               	movf	RtccWriteTime@pTm,w,c
  2243  0011E8  26D9               	addwf	fsr2l,f,c
  2244  0011EA  5034               	movf	RtccWriteTime@pTm+1,w,c
  2245  0011EC  22DA               	addwfc	fsr2h,f,c
  2246  0011EE  50DF               	movf	indf2,w,c
  2247  0011F0  6E3A               	movwf	RtccWriteTime@tempMinSec,c
  2248  0011F2  5035               	movf	RtccWriteTime@di,w,c
  2249  0011F4  B4D8               	btfsc	status,2,c
  2250  0011F6  D002               	goto	l1641
  2251  0011F8  9CF2               	bcf	intcon,6,c	;volatile
  2252  0011FA  D000               	goto	l1641
  2253  0011FC                     l1641:
  2254  0011FC  0E00               	movlw	0
  2255  0011FE  BB3F               	btfsc	63,5,b	;volatile
  2256  001200  0E01               	movlw	1
  2257  001202  6E39               	movwf	RtccWriteTime@wasWrEn,c
  2258  001204  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2259  001206  A4D8               	btfss	status,2,c
  2260  001208  D003               	goto	l1645
  2261  00120A  EC8A  F00B         	call	_RtccWrOn	;wreg free
  2262  00120E  D000               	goto	l1645
  2263  001210                     l1645:
  2264  001210  0E00               	movlw	0
  2265  001212  BF3F               	btfsc	63,7,b	;volatile
  2266  001214  0E01               	movlw	1
  2267  001216  6E37               	movwf	RtccWriteTime@wasOn,c
  2268  001218  5037               	movf	RtccWriteTime@wasOn,w,c
  2269  00121A  B4D8               	btfsc	status,2,c
  2270  00121C  D007               	goto	l1651
  2271  00121E  0E00               	movlw	0
  2272  001220  BE91               	btfsc	3985,7,c	;volatile
  2273  001222  0E01               	movlw	1
  2274  001224  6E38               	movwf	RtccWriteTime@wasAlrm,c
  2275  001226  010F               	movlb	15	; () banked
  2276  001228  9F3F               	bcf	63,7,b	;volatile
  2277  00122A  D000               	goto	l1651
  2278  00122C                     l1651:
  2279  00122C  0EFC               	movlw	252
  2280  00122E  010F               	movlb	15	; () banked
  2281  001230  173F               	andwf	63,f,b	;volatile
  2282  001232  010F               	movlb	15	; () banked
  2283  001234  813F               	bsf	63,0,b	;volatile
  2284                           
  2285                           ; BSR set to: 15
  2286  001236  CF98 F03C          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2287                           
  2288                           ; BSR set to: 15
  2289  00123A  CF99 F03D          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2290                           
  2291                           ; BSR set to: 15
  2292  00123E  EE20 F003          	lfsr	2,3
  2293  001242  5033               	movf	RtccWriteTime@pTm,w,c
  2294  001244  26D9               	addwf	fsr2l,f,c
  2295  001246  5034               	movf	RtccWriteTime@pTm+1,w,c
  2296  001248  22DA               	addwfc	fsr2h,f,c
  2297  00124A  50DF               	movf	indf2,w,c
  2298  00124C  6E3C               	movwf	RtccWriteTime@tempHourWDay,c
  2299                           
  2300                           ; BSR set to: 15
  2301  00124E  0EFC               	movlw	252
  2302  001250  010F               	movlb	15	; () banked
  2303  001252  173F               	andwf	63,f,b	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306  001254  010F               	movlb	15	; () banked
  2307  001256  813F               	bsf	63,0,b	;volatile
  2308                           
  2309                           ; BSR set to: 15
  2310  001258  C03C  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2311                           
  2312                           ; BSR set to: 15
  2313  00125C  C03D  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2314                           
  2315                           ; BSR set to: 15
  2316  001260  C03A  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2317                           
  2318                           ; BSR set to: 15
  2319  001264  C03B  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2320                           
  2321                           ; BSR set to: 15
  2322  001268  5037               	movf	RtccWriteTime@wasOn,w,c
  2323  00126A  B4D8               	btfsc	status,2,c
  2324  00126C  D00D               	goto	l1683
  2325                           
  2326                           ; BSR set to: 15
  2327  00126E  010F               	movlb	15	; () banked
  2328  001270  8F3F               	bsf	63,7,b	;volatile
  2329                           
  2330                           ; BSR set to: 15
  2331  001272  5038               	movf	RtccWriteTime@wasAlrm,w,c
  2332  001274  B4D8               	btfsc	status,2,c
  2333  001276  D002               	goto	l1679
  2334                           
  2335                           ; BSR set to: 15
  2336  001278  8E91               	bsf	3985,7,c	;volatile
  2337  00127A  D000               	goto	l1679
  2338  00127C                     l1679:
  2339                           
  2340                           ; BSR set to: 15
  2341  00127C  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2342  00127E  B4D8               	btfsc	status,2,c
  2343  001280  D009               	goto	l1687
  2344                           
  2345                           ; BSR set to: 15
  2346  001282  EC8A  F00B         	call	_RtccWrOn	;wreg free
  2347  001286  D006               	goto	l1687
  2348  001288                     l1683:
  2349  001288  5039               	movf	RtccWriteTime@wasWrEn,w,c
  2350  00128A  A4D8               	btfss	status,2,c
  2351  00128C  D003               	goto	l1687
  2352  00128E  010F               	movlb	15	; () banked
  2353  001290  9B3F               	bcf	63,5,b	;volatile
  2354                           
  2355                           ; BSR set to: 15
  2356  001292  D000               	goto	l1687
  2357  001294                     l1687:
  2358  001294  5035               	movf	RtccWriteTime@di,w,c
  2359  001296  B4D8               	btfsc	status,2,c
  2360  001298  0012               	return	
  2361  00129A  8CF2               	bsf	intcon,6,c	;volatile
  2362  00129C  0012               	return	
  2363                           
  2364                           ;	Return value of _RtccWriteTime is never used
  2365  00129E  0012               	return		;funcret
  2366  0012A0                     __end_of_RtccWriteTime:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           intcon	equ	0xFF2
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postdec1	equ	0xFE5
  2378                           fsr1l	equ	0xFE1
  2379                           indf2	equ	0xFDF
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _RtccWriteDate *****************
  2385 ;; Defined at:
  2386 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  pDt             2    0[COMRAM] PTR const struct .
  2389 ;;		 -> RtccDate(4), 
  2390 ;;  di              1    2[COMRAM] enum E7121
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  tempHourWDay    2   11[COMRAM] struct .
  2393 ;;  tempDayMonth    2    9[COMRAM] struct .
  2394 ;;  tempYear        2    6[COMRAM] struct .
  2395 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2396 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2397 ;;  wasOn           1    4[COMRAM] enum E7121
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      enum E7121
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;Total ram usage:       13 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    1
  2414 ;; This function calls:
  2415 ;;		_RtccWrOn
  2416 ;; This function is called by:
  2417 ;;		_Write_RTC
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text15
  2422  00104E                     __ptext15:
  2423                           	opt stack 0
  2424  00104E                     _RtccWriteDate:
  2425                           	opt stack 27
  2426                           
  2427                           ;incstack = 0
  2428  00104E  0E00               	movlw	0
  2429  001050  6E38               	movwf	RtccWriteDate@wasAlrm,c
  2430  001052  EE20 F002          	lfsr	2,2
  2431  001056  5033               	movf	RtccWriteDate@pDt,w,c
  2432  001058  26D9               	addwf	fsr2l,f,c
  2433  00105A  5034               	movf	RtccWriteDate@pDt+1,w,c
  2434  00105C  22DA               	addwfc	fsr2h,f,c
  2435  00105E  0E13               	movlw	19
  2436  001060  60DF               	cpfslt	indf2,c
  2437  001062  0012               	return	
  2438  001064  EE20 F002          	lfsr	2,2
  2439  001068  5033               	movf	RtccWriteDate@pDt,w,c
  2440  00106A  26D9               	addwf	fsr2l,f,c
  2441  00106C  5034               	movf	RtccWriteDate@pDt+1,w,c
  2442  00106E  22DA               	addwfc	fsr2h,f,c
  2443  001070  50DF               	movf	indf2,w,c
  2444  001072  B4D8               	btfsc	status,2,c
  2445  001074  0012               	return	
  2446  001076  EE20 F001          	lfsr	2,1
  2447  00107A  5033               	movf	RtccWriteDate@pDt,w,c
  2448  00107C  26D9               	addwf	fsr2l,f,c
  2449  00107E  5034               	movf	RtccWriteDate@pDt+1,w,c
  2450  001080  22DA               	addwfc	fsr2h,f,c
  2451  001082  0E32               	movlw	50
  2452  001084  60DF               	cpfslt	indf2,c
  2453  001086  0012               	return	
  2454  001088  EE20 F001          	lfsr	2,1
  2455  00108C  5033               	movf	RtccWriteDate@pDt,w,c
  2456  00108E  26D9               	addwf	fsr2l,f,c
  2457  001090  5034               	movf	RtccWriteDate@pDt+1,w,c
  2458  001092  22DA               	addwfc	fsr2h,f,c
  2459  001094  50DF               	movf	indf2,w,c
  2460  001096  B4D8               	btfsc	status,2,c
  2461  001098  0012               	return	
  2462  00109A  EE20 F003          	lfsr	2,3
  2463  00109E  5033               	movf	RtccWriteDate@pDt,w,c
  2464  0010A0  26D9               	addwf	fsr2l,f,c
  2465  0010A2  5034               	movf	RtccWriteDate@pDt+1,w,c
  2466  0010A4  22DA               	addwfc	fsr2h,f,c
  2467  0010A6  0E99               	movlw	153
  2468  0010A8  64DF               	cpfsgt	indf2,c
  2469  0010AA  D002               	goto	l1703
  2470  0010AC  0012               	return	
  2471                           
  2472                           ;	Return value of _RtccWriteDate is never used
  2473  0010AE  0012               	return	
  2474  0010B0                     l1703:
  2475  0010B0  EE20 F003          	lfsr	2,3
  2476  0010B4  5033               	movf	RtccWriteDate@pDt,w,c
  2477  0010B6  26D9               	addwf	fsr2l,f,c
  2478  0010B8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2479  0010BA  22DA               	addwfc	fsr2h,f,c
  2480  0010BC  50DF               	movf	indf2,w,c
  2481  0010BE  6E39               	movwf	RtccWriteDate@tempYear,c
  2482  0010C0  EE20 F001          	lfsr	2,1
  2483  0010C4  5033               	movf	RtccWriteDate@pDt,w,c
  2484  0010C6  26D9               	addwf	fsr2l,f,c
  2485  0010C8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2486  0010CA  22DA               	addwfc	fsr2h,f,c
  2487  0010CC  50DF               	movf	indf2,w,c
  2488  0010CE  6E3C               	movwf	RtccWriteDate@tempDayMonth,c
  2489  0010D0  EE20 F002          	lfsr	2,2
  2490  0010D4  5033               	movf	RtccWriteDate@pDt,w,c
  2491  0010D6  26D9               	addwf	fsr2l,f,c
  2492  0010D8  5034               	movf	RtccWriteDate@pDt+1,w,c
  2493  0010DA  22DA               	addwfc	fsr2h,f,c
  2494  0010DC  50DF               	movf	indf2,w,c
  2495  0010DE  6E3D               	movwf	RtccWriteDate@tempDayMonth+1,c
  2496  0010E0  5035               	movf	RtccWriteDate@di,w,c
  2497  0010E2  B4D8               	btfsc	status,2,c
  2498  0010E4  D002               	goto	l1709
  2499  0010E6  9CF2               	bcf	intcon,6,c	;volatile
  2500  0010E8  D000               	goto	l1709
  2501  0010EA                     l1709:
  2502  0010EA  0E00               	movlw	0
  2503  0010EC  BB3F               	btfsc	63,5,b	;volatile
  2504  0010EE  0E01               	movlw	1
  2505  0010F0  6E3B               	movwf	RtccWriteDate@wasWrEn,c
  2506  0010F2  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2507  0010F4  A4D8               	btfss	status,2,c
  2508  0010F6  D003               	goto	l1713
  2509  0010F8  EC8A  F00B         	call	_RtccWrOn	;wreg free
  2510  0010FC  D000               	goto	l1713
  2511  0010FE                     l1713:
  2512  0010FE  0E00               	movlw	0
  2513  001100  BF3F               	btfsc	63,7,b	;volatile
  2514  001102  0E01               	movlw	1
  2515  001104  6E37               	movwf	RtccWriteDate@wasOn,c
  2516  001106  5037               	movf	RtccWriteDate@wasOn,w,c
  2517  001108  B4D8               	btfsc	status,2,c
  2518  00110A  D007               	goto	l1719
  2519  00110C  0E00               	movlw	0
  2520  00110E  BE91               	btfsc	3985,7,c	;volatile
  2521  001110  0E01               	movlw	1
  2522  001112  6E38               	movwf	RtccWriteDate@wasAlrm,c
  2523  001114  010F               	movlb	15	; () banked
  2524  001116  9F3F               	bcf	63,7,b	;volatile
  2525  001118  D000               	goto	l1719
  2526  00111A                     l1719:
  2527  00111A  0EFC               	movlw	252
  2528  00111C  010F               	movlb	15	; () banked
  2529  00111E  173F               	andwf	63,f,b	;volatile
  2530  001120  010F               	movlb	15	; () banked
  2531  001122  813F               	bsf	63,0,b	;volatile
  2532                           
  2533                           ; BSR set to: 15
  2534  001124  CF98 F03E          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537  001128  CF99 F03F          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540  00112C  C033  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2541  001130  C034  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2542  001134  50DF               	movf	indf2,w,c
  2543  001136  6E3F               	movwf	RtccWriteDate@tempHourWDay+1,c
  2544                           
  2545                           ; BSR set to: 15
  2546  001138  0EFC               	movlw	252
  2547  00113A  010F               	movlb	15	; () banked
  2548  00113C  173F               	andwf	63,f,b	;volatile
  2549                           
  2550                           ; BSR set to: 15
  2551  00113E  0E03               	movlw	3
  2552  001140  010F               	movlb	15	; () banked
  2553  001142  133F               	iorwf	63,f,b	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556  001144  C039  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2557                           
  2558                           ; BSR set to: 15
  2559  001148  C03A  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2560                           
  2561                           ; BSR set to: 15
  2562  00114C  C03C  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2563                           
  2564                           ; BSR set to: 15
  2565  001150  C03D  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568  001154  C03E  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  2569                           
  2570                           ; BSR set to: 15
  2571  001158  C03F  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  2572                           
  2573                           ; BSR set to: 15
  2574  00115C  5037               	movf	RtccWriteDate@wasOn,w,c
  2575  00115E  B4D8               	btfsc	status,2,c
  2576  001160  D00D               	goto	l1755
  2577                           
  2578                           ; BSR set to: 15
  2579  001162  010F               	movlb	15	; () banked
  2580  001164  8F3F               	bsf	63,7,b	;volatile
  2581                           
  2582                           ; BSR set to: 15
  2583  001166  5038               	movf	RtccWriteDate@wasAlrm,w,c
  2584  001168  B4D8               	btfsc	status,2,c
  2585  00116A  D002               	goto	l1751
  2586                           
  2587                           ; BSR set to: 15
  2588  00116C  8E91               	bsf	3985,7,c	;volatile
  2589  00116E  D000               	goto	l1751
  2590  001170                     l1751:
  2591                           
  2592                           ; BSR set to: 15
  2593  001170  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2594  001172  B4D8               	btfsc	status,2,c
  2595  001174  D009               	goto	l1759
  2596                           
  2597                           ; BSR set to: 15
  2598  001176  EC8A  F00B         	call	_RtccWrOn	;wreg free
  2599  00117A  D006               	goto	l1759
  2600  00117C                     l1755:
  2601  00117C  503B               	movf	RtccWriteDate@wasWrEn,w,c
  2602  00117E  A4D8               	btfss	status,2,c
  2603  001180  D003               	goto	l1759
  2604  001182  010F               	movlb	15	; () banked
  2605  001184  9B3F               	bcf	63,5,b	;volatile
  2606                           
  2607                           ; BSR set to: 15
  2608  001186  D000               	goto	l1759
  2609  001188                     l1759:
  2610  001188  5035               	movf	RtccWriteDate@di,w,c
  2611  00118A  B4D8               	btfsc	status,2,c
  2612  00118C  0012               	return	
  2613  00118E  9CF2               	bcf	intcon,6,c	;volatile
  2614  001190  0012               	return	
  2615                           
  2616                           ;	Return value of _RtccWriteDate is never used
  2617  001192  0012               	return		;funcret
  2618  001194                     __end_of_RtccWriteDate:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           fsr1l	equ	0xFE1
  2631                           indf2	equ	0xFDF
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _RtccWrOn *****************
  2637 ;; Defined at:
  2638 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  data            2    0        unsigned int 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;		None               void
  2645 ;; Registers used:
  2646 ;;		wreg, status,2
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_Write_RTC
  2662 ;;		_RtccWriteDate
  2663 ;;		_RtccWriteTime
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text16
  2668  001714                     __ptext16:
  2669                           	opt stack 0
  2670  001714                     _RtccWrOn:
  2671                           	opt stack 27
  2672                           
  2673                           ;incstack = 0
  2674  001714  9CF2               	bcf	intcon,6,c	;volatile
  2675  001716  0E55               	movlw	85
  2676  001718  6EA7               	movwf	4007,c	;volatile
  2677  00171A  0EAA               	movlw	170
  2678  00171C  6EA7               	movwf	4007,c	;volatile
  2679  00171E  010F               	movlb	15	; () banked
  2680  001720  8B3F               	bsf	63,5,b	;volatile
  2681                           
  2682                           ; BSR set to: 15
  2683  001722  8CF2               	bsf	intcon,6,c	;volatile
  2684                           
  2685                           ; BSR set to: 15
  2686  001724  0012               	return		;funcret
  2687  001726                     __end_of_RtccWrOn:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodh	equ	0xFF4
  2694                           prodl	equ	0xFF3
  2695                           intcon	equ	0xFF2
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           fsr1l	equ	0xFE1
  2700                           indf2	equ	0xFDF
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           intcon	equ	0xFF2
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postdec1	equ	0xFE5
  2714                           fsr1l	equ	0xFE1
  2715                           indf2	equ	0xFDF
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720                           	psect	rparam
  2721  0000                     tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           intcon	equ	0xFF2
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      95
    BANK0           160      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_write
    _write->___awdiv
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5405
                                             17 COMRAM     2     2      0
                              _Setup
                           _caratula
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                9     7      2    2047
                                              8 COMRAM     9     7      2
                            ___awdiv
                             ___wmul
                      _clear_Segment
                          _on_number
 ---------------------------------------------------------------------------------
 (2) _on_number                                            4     2      2     214
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clear_Segment                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3311
                          _Write_RTC
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     778
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     589
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2533
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1324
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
   _write
     ___awdiv
     ___wmul
     _clear_Segment
     _on_number

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      14       5       12.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     13      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73       6        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 06 20:19:44 2016

                        _a 001D                          _b 001F                          _c 0021  
                        _i 0023                          _j 0025                          _k 0027  
                       u10 156A                         u30 1582                         u50 159C  
                       u28 156C                         u70 15B8                         u48 1584  
           ?_lcd_send_byte 0035                         u68 159E                         u88 15BA  
             ___awdiv@sign 0038        ___wmul@multiplicand 0035               __CFG_CP0$OFF 000000  
                      l141 16B2                        l142 16B4                        l360 12B2  
                      l361 12C2                        l362 12D2                        l363 12E2  
                      l364 12F2                        l365 1302                        l366 1312  
                      l358 12A2                        l367 1322                        l368 1332  
                      u937 13FC                        u947 141C                        u957 16F4  
                      u967 1706                        _dia 0055                        _mes 005B  
                      wreg 000FE8                       l1103 16F2                       l1133 1704  
                     l1703 10B0                       l1713 10FE                       l1641 11FC  
                     l1651 122C                       l1635 11D2                       l1803 14D2  
                     l1709 10EA                       l1645 1210                       l1751 1170  
                     l1719 111A                       l1903 1342                       l1755 117C  
                     l1683 1288                       l1771 145E                       l1759 1188  
                     l1687 1294                       l1679 127C                       l1783 1486  
                     l1863 1504                       l1943 13E6                       l1785 1490  
                     l1777 1470                       l1881 1530                       l1873 151C  
                     l1961 1436                       l1795 14B6                       l1787 1498  
                     l1867 150C                       l1799 14C2                       l1997 166E  
         ?_lcd_send_nibble 0033                       _anio 0053                       _flag 02F8  
                     _main 1658                       _hora 0059                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_T1DIG$ON 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000               ___param_bank 000010  
              _Delay1KTCYx 1702              __CFG_PLLDIV$1 000000                      ?_main 0033  
          __end_of___awdiv 14DE      __size_of_Delay100TCYx 0012            ___awdiv@divisor 0035  
          ___awdiv@counter 0037                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94             __CFG_FCMEN$OFF 000000                      _Setup 1618  
                    _mes_d 004D                      _mes_u 004E                      _write 1394  
           __pbitbssCOMRAM 02F8                      tablat 000FF5                      status 000FD8  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 15D4               _Delay100TCYx 16F0  
             __end_of_main 1696            ??_lcd_send_byte 0036                     ??_main 0044  
            __activetblptr 000002           __end_of_RtccWrOn 1726      __end_of_clear_Segment 1736  
                   ?_Setup 0033                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _EECON2 000FA7                     _ANCON0 000F48                     _ANCON1 000F49  
         ___awdiv@dividend 0033                     ?_write 003B             __CFG_WDTEN$OFF 000000  
         RtccWriteDate@pDt 0033                     _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000  
         __end_of_caratula 1744             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 155E                     ___wmul 16C8                  ??___awdiv 0037  
           __CFG_STVREN$ON 000000                     _diasem 0057                     _anio_d 0046  
                   _anio_u 0047                     _hora_d 004B                     _hora_u 004C  
                   clear_0 15DA                     clear_1 15E8           ___awdiv@quotient 0039  
                   _minuto 005D      __end_of_RtccWriteDate 1194      __end_of_RtccWriteTime 12A0  
         RtccWriteTime@pTm 0033               __pdataCOMRAM 0053               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 160E         __size_of_Write_RTC 0148  
            ___rparam_used 000001             __pcstackCOMRAM 0033              __end_of_Setup 1658  
            __end_of_write 1448            __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000  
                  ??_Setup 0040                    ??_write 003D                 __pbssBANK0 0060  
               _dia_semana 0048  RtccWriteTime@tempHourWDay 003C                 __pnvCOMRAM 0046  
                ?_RtccWrOn 0033             lcd_send_byte@n 0035                    ?___wmul 0033  
       __size_of_on_number 00F4               ?_Delay1KTCYx 0033          __end_of_Write_RTC 104E  
                ?_caratula 0033                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 0033                    __Hparam 0000                    __Lparam 0000  
 __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 0033                    ___awdiv 1448  
          __size_of___wmul 0028               __psmallconst 0F00                _RtccTimeVal 0019  
                  __pcinit 15D4                    _fecha_d 0049                    _fecha_u 004A  
                  __ramtop 0F00                    __ptext0 1658                    __ptext1 1394  
                  __ptext2 12A0                    __ptext3 1726                    __ptext4 16C8  
                  __ptext5 1742                    __ptext6 1618                    __ptext7 14DE  
                  __ptext8 1696                    __ptext9 155E                    _buffer2 0060  
                _T1CONbits 000FCD                 ??_caratula 0033                    _segundo 0029  
               ??_lcd_init 0037       end_of_initialization 160E          __end_of_on_number 1394  
     lcd_send_byte@address 0036              __Lmediumconst 0000                    postdec1 000FE5  
                  postinc0 000FEE      __end_of_lcd_send_byte 16C8                  _PORTBbits 000F81  
                _PORTCbits 000F82           __CFG_DSBOREN$OFF 000000           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93            _LCD_INIT_STRING 0F01           __CFG_IOL1WAY$OFF 000000  
RtccWriteDate@tempDayMonth 003C        __CFG_MSSP7B_EN$MSK7 000000     __size_of_clear_Segment 0010  
         Delay100TCYx@unit 0033             __end_of___wmul 16F0              __pidataCOMRAM 1736  
RtccWriteDate@tempHourWDay 003E          ??_lcd_send_nibble 0033       __size_of_Delay1KTCYx 0012  
         __CFG_DSWDTEN$OFF 000000        start_initialization 15D4       RtccWriteTime@wasAlrm 0038  
     RtccWriteTime@wasWrEn 0039     __size_of_RtccWriteDate 0146            RtccWriteDate@di 0035  
   __size_of_RtccWriteTime 010C                   ??___wmul 0037          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 0035           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F05                __pbssCOMRAM 0001              _clear_Segment 1726  
                _Write_RTC 0F06          __size_of_caratula 0002            Delay1KTCYx@unit 0033  
        __size_of_lcd_init 0080              ?_Delay100TCYx 0033                   ?___awdiv 0033  
  RtccWriteTime@tempMinSec 003A              _RtccWriteDate 104E                __smallconst 0F00  
            _RtccWriteTime 1194       __CFG_RTCOSC$T1OSCREF 000000             ?_clear_Segment 0033  
           __size_of_Setup 0040                 ?_Write_RTC 0033             __size_of_write 00B4  
         _RtccAlrmTimeDate 0001             ___wmul@product 0037                   _LATBbits 000F8A  
          on_number@number 0033                  _on_number 12A0                   _PIE3bits 000FA3  
                _segundo_d 0051             ??_Delay100TCYx 0033                  _segundo_u 0052  
              write@number 003B           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0037  
       _Rtcc_read_TimeDate 0011             ?_RtccWriteDate 0033          ___wmul@multiplier 0033  
           ?_RtccWriteTime 0033                  lcd_init@i 0037                  main@count 0044  
                copy_data0 1602                 ?_on_number 0033            _lcd_send_nibble 155E  
                 __Hrparam 0000                   _RtccDate 002B                   __Lrparam 0000  
                 _RtccTime 002F                   _RtccWrOn 1714           __size_of___awdiv 0096  
          ??_clear_Segment 0033               _RtccTimeDate 0009                   _caratula 1742  
              ??_Write_RTC 0040                   __ptext10 16F0                   __ptext11 1702  
                 __ptext12 0F06                   __ptext13 1448                   __ptext14 1194  
                 __ptext15 104E                   __ptext16 1714                   _lcd_init 14DE  
   __size_of_lcd_send_byte 0032              __size_of_main 003E                   _minuto_d 004F  
                 _minuto_u 0050              ??_Delay1KTCYx 0033            ??_RtccWriteDate 0036  
          ??_RtccWriteTime 0036                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0037       __end_of_Delay100TCYx 1702    __end_of_lcd_send_nibble 15D4  
              ??_on_number 0035                 _OSCCONbits 000FD3                  write@time 0042  
    RtccWriteDate@tempYear 0039              _lcd_send_byte 1696                 _RTCCFGbits 000F3F  
      __end_of_Delay1KTCYx 1714                   write@dec 0040       RtccWriteDate@wasAlrm 0038  
                 write@uni 003E       RtccWriteDate@wasWrEn 003B      lcd_send_nibble@nibble 0034  
