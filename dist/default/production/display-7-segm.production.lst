

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 18 19:08:45 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001D06                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  001D06  000F               	dw	15
    49                           
    50                           ;initializer for _dia
    51  001D08  0008               	dw	8
    52                           
    53                           ;initializer for _diasem
    54  001D0A  0003               	dw	3
    55                           
    56                           ;initializer for _hora
    57  001D0C  0012               	dw	18
    58                           
    59                           ;initializer for _mes
    60  001D0E  0009               	dw	9
    61                           
    62                           ;initializer for _minuto
    63  001D10  001E               	dw	30
    64                           
    65                           	psect	smallconst
    66  000F00                     __psmallconst:
    67                           	opt stack 0
    68  000F00  00                 	db	0
    69  000F01                     _LCD_INIT_STRING:
    70                           	opt stack 0
    71  000F01  28                 	db	40
    72  000F02  0C                 	db	12
    73  000F03  01                 	db	1
    74  000F04  06                 	db	6
    75  000F05                     __end_of_LCD_INIT_STRING:
    76                           	opt stack 0
    77  000F05  00                 	db	0	; dummy byte at the end
    78  0000                     
    79                           	psect	nvCOMRAM
    80  00005A                     __pnvCOMRAM:
    81                           	opt stack 0
    82  00005A                     _fecha_d:
    83                           	opt stack 0
    84  00005A                     	ds	1
    85  00005B                     _hora_d:
    86                           	opt stack 0
    87  00005B                     	ds	1
    88  00005C                     _mes_d:
    89                           	opt stack 0
    90  00005C                     	ds	1
    91  00005D                     _minuto_d:
    92                           	opt stack 0
    93  00005D                     	ds	1
    94  00005E                     _segundo_d:
    95                           	opt stack 0
    96  00005E                     	ds	1
    97                           
    98                           	psect	nvBANK0
    99  00009C                     __pnvBANK0:
   100                           	opt stack 0
   101  00009C                     _anio_d:
   102                           	opt stack 0
   103  00009C                     	ds	1
   104  00009D                     _anio_u:
   105                           	opt stack 0
   106  00009D                     	ds	1
   107  00009E                     _dia_semana:
   108                           	opt stack 0
   109  00009E                     	ds	1
   110  00009F                     _fecha_u:
   111                           	opt stack 0
   112  00009F                     	ds	1
   113  0000A0                     _hora_u:
   114                           	opt stack 0
   115  0000A0                     	ds	1
   116  0000A1                     _mes_u:
   117                           	opt stack 0
   118  0000A1                     	ds	1
   119  0000A2                     _minuto_u:
   120                           	opt stack 0
   121  0000A2                     	ds	1
   122  0000A3                     _segundo_u:
   123                           	opt stack 0
   124  0000A3                     	ds	1
   125  0000                     _ANCON0	set	3912
   126  0000                     _ANCON1	set	3913
   127  0000                     _RTCCFG	set	3903
   128  0000                     _RTCCFGbits	set	3903
   129  0000                     _ADCON0	set	4034
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADRESH	set	4036
   133  0000                     _ALRMCFGbits	set	3985
   134  0000                     _EECON2	set	4007
   135  0000                     _INTCONbits	set	4082
   136  0000                     _LATBbits	set	3978
   137  0000                     _OSCCONbits	set	4051
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _PIE3bits	set	4003
   140  0000                     _PORTBbits	set	3969
   141  0000                     _PORTCbits	set	3970
   142  0000                     _RTCVALH	set	3993
   143  0000                     _RTCVALL	set	3992
   144  0000                     _T1CONbits	set	4045
   145  0000                     _TRISA	set	3986
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISBbits	set	3987
   148  0000                     _TRISC	set	3988
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  001B58                     __pcinit:
   154                           	opt stack 0
   155  001B58                     start_initialization:
   156                           	opt stack 0
   157  001B58                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Clear objects allocated to BANK0 (60 bytes)
   161  001B58  EE00  F060         	lfsr	0,__pbssBANK0
   162  001B5C  0E3C               	movlw	60
   163  001B5E                     clear_0:
   164  001B5E  6AEE               	clrf	postinc0,c
   165  001B60  06E8               	decf	wreg,f,c
   166  001B62  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   169  001B64  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   170                           
   171                           ; Clear objects allocated to COMRAM (10 bytes)
   172  001B66  EE00  F050         	lfsr	0,__pbssCOMRAM
   173  001B6A  0E0A               	movlw	10
   174  001B6C                     clear_1:
   175  001B6C  6AEE               	clrf	postinc0,c
   176  001B6E  06E8               	decf	wreg,f,c
   177  001B70  E1FD               	bnz	clear_1
   178                           
   179                           ; Initialize objects allocated to COMRAM (12 bytes)
   180                           ; load TBLPTR registers with __pidataCOMRAM
   181  001B72  0E06               	movlw	low __pidataCOMRAM
   182  001B74  6EF6               	movwf	tblptrl,c
   183  001B76  0E1D               	movlw	high __pidataCOMRAM
   184  001B78  6EF7               	movwf	tblptrh,c
   185  001B7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   186  001B7C  6EF8               	movwf	tblptru,c
   187  001B7E  EE00  F044         	lfsr	0,__pdataCOMRAM
   188  001B82  EE10 F00C          	lfsr	1,12
   189  001B86                     copy_data0:
   190  001B86  0009               	tblrd		*+
   191  001B88  CFF5 FFEE          	movff	tablat,postinc0
   192  001B8C  50E5               	movf	postdec1,w,c
   193  001B8E  50E1               	movf	fsr1l,w,c
   194  001B90  E1FA               	bnz	copy_data0
   195  001B92                     end_of_initialization:
   196                           	opt stack 0
   197  001B92                     __end_of__initialization:
   198                           	opt stack 0
   199  001B92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  001B94  6EF8               	movwf	tblptru,c
   201  001B96  0100               	movlb	0
   202  001B98  EF26  F00E         	goto	_main	;jump to C main() function
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           postdec1	equ	0xFE5
   210                           fsr1l	equ	0xFE1
   211                           
   212                           	psect	bitbssCOMRAM
   213  0002F8                     __pbitbssCOMRAM:
   214                           	opt stack 0
   215  0002F8                     _flag:
   216                           	opt stack 0
   217  0002F8                     	ds	1
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227                           	psect	bssCOMRAM
   228  000050                     __pbssCOMRAM:
   229                           	opt stack 0
   230  000050                     _segundo:
   231                           	opt stack 0
   232  000050                     	ds	2
   233  000052                     _RtccDate:
   234                           	opt stack 0
   235  000052                     	ds	4
   236  000056                     _RtccTime:
   237                           	opt stack 0
   238  000056                     	ds	4
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	dataCOMRAM
   249  000044                     __pdataCOMRAM:
   250                           	opt stack 0
   251  000044                     _anio:
   252                           	opt stack 0
   253  000044                     	ds	2
   254  000046                     _dia:
   255                           	opt stack 0
   256  000046                     	ds	2
   257  000048                     _diasem:
   258                           	opt stack 0
   259  000048                     	ds	2
   260  00004A                     _hora:
   261                           	opt stack 0
   262  00004A                     	ds	2
   263  00004C                     _mes:
   264                           	opt stack 0
   265  00004C                     	ds	2
   266  00004E                     _minuto:
   267                           	opt stack 0
   268  00004E                     	ds	2
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssBANK0
   279  000060                     __pbssBANK0:
   280                           	opt stack 0
   281  000060                     _buffer2:
   282                           	opt stack 0
   283  000060                     	ds	20
   284  000074                     _RtccAlrmTimeDate:
   285                           	opt stack 0
   286  000074                     	ds	8
   287  00007C                     _RtccTimeDate:
   288                           	opt stack 0
   289  00007C                     	ds	8
   290  000084                     _Rtcc_read_TimeDate:
   291                           	opt stack 0
   292  000084                     	ds	8
   293  00008C                     _RtccTimeVal:
   294                           	opt stack 0
   295  00008C                     	ds	4
   296  000090                     _a:
   297                           	opt stack 0
   298  000090                     	ds	2
   299  000092                     _b:
   300                           	opt stack 0
   301  000092                     	ds	2
   302  000094                     _c:
   303                           	opt stack 0
   304  000094                     	ds	2
   305  000096                     _i:
   306                           	opt stack 0
   307  000096                     	ds	2
   308  000098                     _j:
   309                           	opt stack 0
   310  000098                     	ds	2
   311  00009A                     _k:
   312                           	opt stack 0
   313  00009A                     	ds	2
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt stack 0
   326  000001                     ??_lcd_send_nibble:
   327  000001                     ?___wmul:
   328                           	opt stack 0
   329  000001                     ?___awdiv:
   330                           	opt stack 0
   331  000001                     ?___ftpack:
   332                           	opt stack 0
   333  000001                     Delay100TCYx@unit:
   334                           	opt stack 0
   335  000001                     Delay1KTCYx@unit:
   336                           	opt stack 0
   337  000001                     on_number@number:
   338                           	opt stack 0
   339  000001                     RtccWriteDate@pDt:
   340                           	opt stack 0
   341  000001                     RtccWriteTime@pTm:
   342                           	opt stack 0
   343  000001                     ___wmul@multiplier:
   344                           	opt stack 0
   345  000001                     ___awdiv@dividend:
   346                           	opt stack 0
   347  000001                     ___ftpack@arg:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     lcd_send_nibble@nibble:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x1
   356  000002                     	ds	1
   357  000003                     ??_on_number:
   358  000003                     lcd_send_byte@n:
   359                           	opt stack 0
   360  000003                     RtccWriteDate@di:
   361                           	opt stack 0
   362  000003                     RtccWriteTime@di:
   363                           	opt stack 0
   364  000003                     ___wmul@multiplicand:
   365                           	opt stack 0
   366  000003                     ___awdiv@divisor:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370  000003                     	ds	1
   371  000004                     lcd_send_byte@address:
   372                           	opt stack 0
   373  000004                     ___ftpack@exp:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x3
   377  000004                     	ds	1
   378  000005                     lcd_init@i:
   379                           	opt stack 0
   380  000005                     RtccWriteDate@wasOn:
   381                           	opt stack 0
   382  000005                     RtccWriteTime@wasOn:
   383                           	opt stack 0
   384  000005                     ___awdiv@counter:
   385                           	opt stack 0
   386  000005                     ___ftpack@sign:
   387                           	opt stack 0
   388  000005                     on_numbers@number:
   389                           	opt stack 0
   390  000005                     ___wmul@product:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     ??___ftpack:
   396  000006                     RtccWriteDate@wasAlrm:
   397                           	opt stack 0
   398  000006                     RtccWriteTime@wasAlrm:
   399                           	opt stack 0
   400  000006                     ___awdiv@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404  000006                     	ds	1
   405  000007                     on_numbers@uni:
   406                           	opt stack 0
   407  000007                     RtccWriteTime@wasWrEn:
   408                           	opt stack 0
   409  000007                     RtccWriteDate@tempYear:
   410                           	opt stack 0
   411  000007                     ___awdiv@quotient:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x6
   415  000007                     	ds	1
   416  000008                     RtccWriteTime@tempMinSec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x7
   420  000008                     	ds	1
   421  000009                     ?___awtoft:
   422                           	opt stack 0
   423  000009                     RtccWriteDate@wasWrEn:
   424                           	opt stack 0
   425  000009                     write@number:
   426                           	opt stack 0
   427  000009                     ___awtoft@c:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x8
   431  000009                     	ds	1
   432  00000A                     RtccWriteDate@tempDayMonth:
   433                           	opt stack 0
   434  00000A                     RtccWriteTime@tempHourWDay:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x9
   438  00000A                     	ds	1
   439  00000B                     ??_write:
   440                           
   441                           ; 0 bytes @ 0xA
   442  00000B                     	ds	1
   443  00000C                     ___awtoft@sign:
   444                           	opt stack 0
   445  00000C                     write@uni:
   446                           	opt stack 0
   447  00000C                     RtccWriteDate@tempHourWDay:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0xB
   451  00000C                     	ds	1
   452  00000D                     ?___ftmul:
   453                           	opt stack 0
   454  00000D                     ___ftmul@f1:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     write@dec:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xD
   463  00000E                     	ds	2
   464  000010                     write@time:
   465                           	opt stack 0
   466  000010                     ___ftmul@f2:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0xF
   470  000010                     	ds	3
   471  000013                     ??___ftmul:
   472                           
   473                           ; 0 bytes @ 0x12
   474  000013                     	ds	3
   475  000016                     ___ftmul@exp:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x15
   479  000016                     	ds	1
   480  000017                     ___ftmul@f3_as_product:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x16
   484  000017                     	ds	3
   485  00001A                     ___ftmul@cntr:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x19
   489  00001A                     	ds	1
   490  00001B                     ___ftmul@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x1A
   494  00001B                     	ds	1
   495  00001C                     ?___ftadd:
   496                           	opt stack 0
   497  00001C                     ___ftadd@f1:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x1B
   501  00001C                     	ds	3
   502  00001F                     ___ftadd@f2:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x1E
   506  00001F                     	ds	3
   507  000022                     ??___ftadd:
   508                           
   509                           ; 0 bytes @ 0x21
   510  000022                     	ds	3
   511  000025                     ___ftadd@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x24
   515  000025                     	ds	1
   516  000026                     ___ftadd@exp2:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x25
   520  000026                     	ds	1
   521  000027                     ___ftadd@exp1:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x26
   525  000027                     	ds	1
   526  000028                     ?_calculate_temperature:
   527                           	opt stack 0
   528  000028                     calculate_temperature@voltage:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x27
   532  000028                     	ds	3
   533  00002B                     calculate_temperature@temperature:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x2A
   537  00002B                     	ds	3
   538  00002E                     ?___fttol:
   539                           	opt stack 0
   540  00002E                     ___fttol@f1:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0x2D
   544  00002E                     	ds	4
   545  000032                     ??___fttol:
   546                           
   547                           ; 0 bytes @ 0x31
   548  000032                     	ds	5
   549  000037                     ___fttol@sign1:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x36
   553  000037                     	ds	1
   554  000038                     ___fttol@lval:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x37
   558  000038                     	ds	4
   559  00003C                     ___fttol@exp1:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x3B
   563  00003C                     	ds	1
   564  00003D                     ?_read_temperature:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x3C
   568  00003D                     	ds	2
   569  00003F                     ??_read_temperature:
   570                           
   571                           ; 0 bytes @ 0x3E
   572  00003F                     	ds	1
   573  000040                     read_temperature@voltage:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x3F
   577  000040                     	ds	2
   578  000042                     main@temperature:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x41
   582  000042                     	ds	2
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 77 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  temperature     2   65[COMRAM] short 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  2  120[None  ] int 
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;Total ram usage:        2 bytes
   616 ;; Hardware stack levels required when called:    4
   617 ;; This function calls:
   618 ;;		_Setup
   619 ;;		_caratula
   620 ;;		_read_temperature
   621 ;;		_write
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628  001C4C                     __ptext0:
   629                           	opt stack 0
   630  001C4C                     _main:
   631                           	opt stack 27
   632                           
   633                           ;main.c: 78: Setup();
   634                           
   635                           ; BSR set to: 15
   636                           ;incstack = 0
   637  001C4C  ECCE  F00D         	call	_Setup	;wreg free
   638                           
   639                           ;main.c: 79: caratula();
   640  001C50  EC89  F00E         	call	_caratula	;wreg free
   641                           
   642                           ;main.c: 80: PORTCbits.RC7 = 1;
   643  001C54  8E82               	bsf	3970,7,c	;volatile
   644                           
   645                           ;main.c: 81: PORTBbits.RB0 = 1;
   646  001C56  8081               	bsf	3969,0,c	;volatile
   647  001C58  D000               	goto	l2472
   648  001C5A                     l2472:
   649                           
   650                           ;main.c: 84: short temperature = read_temperature();
   651  001C5A  EC79  F00D         	call	_read_temperature	;wreg free
   652  001C5E  C03D  F042         	movff	?_read_temperature,main@temperature
   653  001C62  C03E  F043         	movff	?_read_temperature+1,main@temperature+1
   654                           
   655                           ;main.c: 85: write(temperature);
   656  001C66  C042  F009         	movff	main@temperature,write@number
   657  001C6A  C043  F00A         	movff	main@temperature+1,write@number+1
   658  001C6E  EC20  F00C         	call	_write	;wreg free
   659  001C72  D7F3               	goto	l2472
   660                           
   661                           ;main.c: 86: }
   662                           ;main.c: 88: return 0;
   663                           ;	Return value of _main is never used
   664  001C74  EF00  F000         	goto	start
   665  001C78                     __end_of_main:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           
   676 ;; *************** function _write *****************
   677 ;; Defined at:
   678 ;;		line 70 in file "display7seg.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  number          2    8[COMRAM] short 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  time            2   15[COMRAM] int 
   683 ;;  dec             2   13[COMRAM] short 
   684 ;;  uni             2   11[COMRAM] short 
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   697 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   698 ;;Total ram usage:        9 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    2
   701 ;; This function calls:
   702 ;;		___awdiv
   703 ;;		___wmul
   704 ;;		_clear_Segment
   705 ;;		_on_numbers
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text1
   712  001840                     __ptext1:
   713                           	opt stack 0
   714  001840                     _write:
   715                           	opt stack 28
   716                           
   717                           ;display7seg.c: 71: int time = 0;
   718                           
   719                           ;incstack = 0
   720  001840  0E00               	movlw	0
   721  001842  6E11               	movwf	write@time+1,c
   722  001844  0E00               	movlw	0
   723  001846  6E10               	movwf	write@time,c
   724                           
   725                           ;display7seg.c: 72: short dec = number/10;
   726  001848  C009  F001         	movff	write@number,___awdiv@dividend
   727  00184C  C00A  F002         	movff	write@number+1,___awdiv@dividend+1
   728  001850  0E00               	movlw	0
   729  001852  6E04               	movwf	___awdiv@divisor+1,c
   730  001854  0E0A               	movlw	10
   731  001856  6E03               	movwf	___awdiv@divisor,c
   732  001858  EC7B  F00C         	call	___awdiv	;wreg free
   733  00185C  C001  F00E         	movff	?___awdiv,write@dec
   734  001860  C002  F00F         	movff	?___awdiv+1,write@dec+1
   735                           
   736                           ;display7seg.c: 73: short uni = number - dec*10;
   737  001864  C00E  F001         	movff	write@dec,___wmul@multiplier
   738  001868  C00F  F002         	movff	write@dec+1,___wmul@multiplier+1
   739  00186C  0E00               	movlw	0
   740  00186E  6E04               	movwf	___wmul@multiplicand+1,c
   741  001870  0E0A               	movlw	10
   742  001872  6E03               	movwf	___wmul@multiplicand,c
   743  001874  EC3C  F00E         	call	___wmul	;wreg free
   744  001878  1E01               	comf	?___wmul,f,c
   745  00187A  1E02               	comf	?___wmul+1,f,c
   746  00187C  4A01               	infsnz	?___wmul,f,c
   747  00187E  2A02               	incf	?___wmul+1,f,c
   748  001880  5009               	movf	write@number,w,c
   749  001882  2401               	addwf	?___wmul,w,c
   750  001884  6E0C               	movwf	write@uni,c
   751  001886  500A               	movf	write@number+1,w,c
   752  001888  2002               	addwfc	?___wmul+1,w,c
   753  00188A  6E0D               	movwf	write@uni+1,c
   754                           
   755                           ;display7seg.c: 74: clear_Segment();
   756  00188C  EC7B  F00E         	call	_clear_Segment	;wreg free
   757                           
   758                           ;display7seg.c: 75: while(time < 500){
   759  001890  D029               	goto	l2438
   760  001892                     l2426:
   761                           
   762                           ;display7seg.c: 76: on_numbers(uni, 1);
   763  001892  C00C  F005         	movff	write@uni,on_numbers@number
   764  001896  C00D  F006         	movff	write@uni+1,on_numbers@number+1
   765  00189A  0E01               	movlw	1
   766  00189C  6E07               	movwf	on_numbers@uni,c
   767  00189E  EC50  F00E         	call	_on_numbers	;wreg free
   768                           
   769                           ;display7seg.c: 77: _delay((unsigned long)((10)*(8000000/4000.0)));
   770  0018A2  0E1A               	movlw	26
   771  0018A4  6E0B               	movwf	??_write& (0+255),c
   772  0018A6  0EF8               	movlw	248
   773  0018A8                     u1897:
   774  0018A8  2EE8               	decfsz	wreg,f,c
   775  0018AA  D7FE               	goto	u1897
   776  0018AC  2E0B               	decfsz	??_write& (0+255),f,c
   777  0018AE  D7FC               	goto	u1897
   778  0018B0  D000               	nop2	
   779                           
   780                           ;display7seg.c: 78: PORTCbits.RC7 = 1;
   781  0018B2  8E82               	bsf	3970,7,c	;volatile
   782                           
   783                           ;display7seg.c: 79: on_numbers(dec, 0);
   784  0018B4  C00E  F005         	movff	write@dec,on_numbers@number
   785  0018B8  C00F  F006         	movff	write@dec+1,on_numbers@number+1
   786  0018BC  0E00               	movlw	0
   787  0018BE  6E07               	movwf	on_numbers@uni,c
   788  0018C0  EC50  F00E         	call	_on_numbers	;wreg free
   789                           
   790                           ;display7seg.c: 81: _delay((unsigned long)((10)*(8000000/4000.0)));
   791  0018C4  0E1A               	movlw	26
   792  0018C6  6E0B               	movwf	??_write& (0+255),c
   793  0018C8  0EF8               	movlw	248
   794  0018CA                     u1907:
   795  0018CA  2EE8               	decfsz	wreg,f,c
   796  0018CC  D7FE               	goto	u1907
   797  0018CE  2E0B               	decfsz	??_write& (0+255),f,c
   798  0018D0  D7FC               	goto	u1907
   799  0018D2  D000               	nop2	
   800                           
   801                           ;display7seg.c: 82: PORTBbits.RB0 = 1;
   802  0018D4  8081               	bsf	3969,0,c	;volatile
   803                           
   804                           ;display7seg.c: 83: time = time + 20;
   805  0018D6  0E14               	movlw	20
   806  0018D8  2410               	addwf	write@time,w,c
   807  0018DA  6E10               	movwf	write@time,c
   808  0018DC  0E00               	movlw	0
   809  0018DE  2011               	addwfc	write@time+1,w,c
   810  0018E0  6E11               	movwf	write@time+1,c
   811  0018E2  D000               	goto	l2438
   812  0018E4                     l2438:
   813  0018E4  BE11               	btfsc	write@time+1,7,c
   814  0018E6  D7D5               	goto	l2426
   815  0018E8  0EF4               	movlw	244
   816  0018EA  5C10               	subwf	write@time,w,c
   817  0018EC  0E01               	movlw	1
   818  0018EE  5811               	subwfb	write@time+1,w,c
   819  0018F0  A0D8               	btfss	status,0,c
   820  0018F2  D7CF               	goto	l2426
   821  0018F4  0012               	return		;funcret
   822  0018F6                     __end_of_write:
   823                           	opt stack 0
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           postdec1	equ	0xFE5
   831                           fsr1l	equ	0xFE1
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _on_numbers *****************
   835 ;; Defined at:
   836 ;;		line 58 in file "display7seg.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  number          2    4[COMRAM] short 
   839 ;;  uni             1    6[COMRAM] unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   851 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    1
   858 ;; This function calls:
   859 ;;		_on_number
   860 ;; This function is called by:
   861 ;;		_write
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text2
   866  001CA0                     __ptext2:
   867                           	opt stack 0
   868  001CA0                     _on_numbers:
   869                           	opt stack 28
   870                           
   871                           ;display7seg.c: 59: on_number(number);
   872                           
   873                           ;incstack = 0
   874  001CA0  C005  F001         	movff	on_numbers@number,on_number@number
   875  001CA4  C006  F002         	movff	on_numbers@number+1,on_number@number+1
   876  001CA8  EC43  F00B         	call	_on_number	;wreg free
   877                           
   878                           ;display7seg.c: 61: if(uni){
   879  001CAC  5007               	movf	on_numbers@uni,w,c
   880  001CAE  B4D8               	btfsc	status,2,c
   881  001CB0  D003               	goto	l376
   882                           
   883                           ;display7seg.c: 62: PORTCbits.RC7 = 0;
   884  001CB2  9E82               	bcf	3970,7,c	;volatile
   885                           
   886                           ;display7seg.c: 63: PORTBbits.RB0 = 1;
   887  001CB4  8081               	bsf	3969,0,c	;volatile
   888                           
   889                           ;display7seg.c: 64: }else{
   890  001CB6  0012               	return	
   891  001CB8                     l376:
   892                           
   893                           ;display7seg.c: 65: PORTCbits.RC7 = 1;
   894  001CB8  8E82               	bsf	3970,7,c	;volatile
   895                           
   896                           ;display7seg.c: 66: PORTBbits.RB0 = 0;
   897  001CBA  9081               	bcf	3969,0,c	;volatile
   898  001CBC  0012               	return	
   899  001CBE  0012               	return		;funcret
   900  001CC0                     __end_of_on_numbers:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           postdec1	equ	0xFE5
   909                           fsr1l	equ	0xFE1
   910                           status	equ	0xFD8
   911                           
   912 ;; *************** function _on_number *****************
   913 ;; Defined at:
   914 ;;		line 3 in file "display7seg.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  number          2    0[COMRAM] short 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;		None               void
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;Total ram usage:        4 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_on_numbers
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text3
   942  001686                     __ptext3:
   943                           	opt stack 0
   944  001686                     _on_number:
   945                           	opt stack 28
   946                           
   947                           ;display7seg.c: 5: switch (number){
   948                           
   949                           ;incstack = 0
   950  001686  D050               	goto	l2048
   951  001688                     l359:
   952                           
   953                           ;display7seg.c: 7: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.RB
      +                          4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 0;
   954  001688  8E81               	bsf	3969,7,c	;volatile
   955  00168A  8C81               	bsf	3969,6,c	;volatile
   956  00168C  8A81               	bsf	3969,5,c	;volatile
   957  00168E  8881               	bsf	3969,4,c	;volatile
   958  001690  8681               	bsf	3969,3,c	;volatile
   959  001692  8481               	bsf	3969,2,c	;volatile
   960  001694  9281               	bcf	3969,1,c	;volatile
   961                           
   962                           ;display7seg.c: 8: break;
   963  001696  0012               	return	
   964  001698                     l361:
   965                           
   966                           ;display7seg.c: 11: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
   967  001698  9E81               	bcf	3969,7,c	;volatile
   968  00169A  8C81               	bsf	3969,6,c	;volatile
   969  00169C  8A81               	bsf	3969,5,c	;volatile
   970  00169E  9881               	bcf	3969,4,c	;volatile
   971  0016A0  9681               	bcf	3969,3,c	;volatile
   972  0016A2  9481               	bcf	3969,2,c	;volatile
   973  0016A4  9281               	bcf	3969,1,c	;volatile
   974                           
   975                           ;display7seg.c: 12: break;
   976  0016A6  0012               	return	
   977  0016A8                     l362:
   978                           
   979                           ;display7seg.c: 15: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 0; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   980  0016A8  8E81               	bsf	3969,7,c	;volatile
   981  0016AA  8C81               	bsf	3969,6,c	;volatile
   982  0016AC  9A81               	bcf	3969,5,c	;volatile
   983  0016AE  8881               	bsf	3969,4,c	;volatile
   984  0016B0  8681               	bsf	3969,3,c	;volatile
   985  0016B2  9481               	bcf	3969,2,c	;volatile
   986  0016B4  8281               	bsf	3969,1,c	;volatile
   987                           
   988                           ;display7seg.c: 16: break;
   989  0016B6  0012               	return	
   990  0016B8                     l363:
   991                           
   992                           ;display7seg.c: 19: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1;
   993  0016B8  8E81               	bsf	3969,7,c	;volatile
   994  0016BA  8C81               	bsf	3969,6,c	;volatile
   995  0016BC  8A81               	bsf	3969,5,c	;volatile
   996  0016BE  8881               	bsf	3969,4,c	;volatile
   997  0016C0  9681               	bcf	3969,3,c	;volatile
   998  0016C2  9481               	bcf	3969,2,c	;volatile
   999  0016C4  8281               	bsf	3969,1,c	;volatile
  1000                           
  1001                           ;display7seg.c: 20: break;
  1002  0016C6  0012               	return	
  1003  0016C8                     l364:
  1004                           
  1005                           ;display7seg.c: 23: PORTBbits.RB7 = 0; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1006  0016C8  9E81               	bcf	3969,7,c	;volatile
  1007  0016CA  8C81               	bsf	3969,6,c	;volatile
  1008  0016CC  8A81               	bsf	3969,5,c	;volatile
  1009  0016CE  9881               	bcf	3969,4,c	;volatile
  1010  0016D0  9681               	bcf	3969,3,c	;volatile
  1011  0016D2  8481               	bsf	3969,2,c	;volatile
  1012  0016D4  8281               	bsf	3969,1,c	;volatile
  1013                           
  1014                           ;display7seg.c: 24: break;
  1015  0016D6  0012               	return	
  1016  0016D8                     l365:
  1017                           
  1018                           ;display7seg.c: 27: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1019  0016D8  8E81               	bsf	3969,7,c	;volatile
  1020  0016DA  9C81               	bcf	3969,6,c	;volatile
  1021  0016DC  8A81               	bsf	3969,5,c	;volatile
  1022  0016DE  8881               	bsf	3969,4,c	;volatile
  1023  0016E0  9681               	bcf	3969,3,c	;volatile
  1024  0016E2  8481               	bsf	3969,2,c	;volatile
  1025  0016E4  8281               	bsf	3969,1,c	;volatile
  1026                           
  1027                           ;display7seg.c: 28: break;
  1028  0016E6  0012               	return	
  1029  0016E8                     l366:
  1030                           
  1031                           ;display7seg.c: 31: PORTBbits.RB7 = 1; PORTBbits.RB6 = 0; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1032  0016E8  8E81               	bsf	3969,7,c	;volatile
  1033  0016EA  9C81               	bcf	3969,6,c	;volatile
  1034  0016EC  8A81               	bsf	3969,5,c	;volatile
  1035  0016EE  8881               	bsf	3969,4,c	;volatile
  1036  0016F0  8681               	bsf	3969,3,c	;volatile
  1037  0016F2  8481               	bsf	3969,2,c	;volatile
  1038  0016F4  8281               	bsf	3969,1,c	;volatile
  1039                           
  1040                           ;display7seg.c: 32: break;
  1041  0016F6  0012               	return	
  1042  0016F8                     l367:
  1043                           
  1044                           ;display7seg.c: 35: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0;
  1045  0016F8  8E81               	bsf	3969,7,c	;volatile
  1046  0016FA  8C81               	bsf	3969,6,c	;volatile
  1047  0016FC  8A81               	bsf	3969,5,c	;volatile
  1048  0016FE  9881               	bcf	3969,4,c	;volatile
  1049  001700  9681               	bcf	3969,3,c	;volatile
  1050  001702  9481               	bcf	3969,2,c	;volatile
  1051  001704  9281               	bcf	3969,1,c	;volatile
  1052                           
  1053                           ;display7seg.c: 36: break;
  1054  001706  0012               	return	
  1055  001708                     l368:
  1056                           
  1057                           ;display7seg.c: 39: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 1; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1058  001708  8E81               	bsf	3969,7,c	;volatile
  1059  00170A  8C81               	bsf	3969,6,c	;volatile
  1060  00170C  8A81               	bsf	3969,5,c	;volatile
  1061  00170E  8881               	bsf	3969,4,c	;volatile
  1062  001710  8681               	bsf	3969,3,c	;volatile
  1063  001712  8481               	bsf	3969,2,c	;volatile
  1064  001714  8281               	bsf	3969,1,c	;volatile
  1065                           
  1066                           ;display7seg.c: 40: break;
  1067  001716  0012               	return	
  1068  001718                     l369:
  1069                           
  1070                           ;display7seg.c: 43: PORTBbits.RB7 = 1; PORTBbits.RB6 = 1; PORTBbits.RB5 = 1; PORTBbits.R
      +                          B4 = 1; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB1 = 1;
  1071  001718  8E81               	bsf	3969,7,c	;volatile
  1072  00171A  8C81               	bsf	3969,6,c	;volatile
  1073  00171C  8A81               	bsf	3969,5,c	;volatile
  1074  00171E  8881               	bsf	3969,4,c	;volatile
  1075  001720  9681               	bcf	3969,3,c	;volatile
  1076  001722  8481               	bsf	3969,2,c	;volatile
  1077  001724  8281               	bsf	3969,1,c	;volatile
  1078                           
  1079                           ;display7seg.c: 45: }
  1080                           
  1081                           ;display7seg.c: 44: break;
  1082  001726  0012               	return	
  1083  001728                     l2048:
  1084  001728  C001  F003         	movff	on_number@number,??_on_number
  1085  00172C  C002  F004         	movff	on_number@number+1,??_on_number+1
  1086                           
  1087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1088                           ; Switch size 1, requested type "space"
  1089                           ; Number of cases is 1, Range of values is 0 to 0
  1090                           ; switch strategies available:
  1091                           ; Name         Instructions Cycles
  1092                           ; simple_byte            4     3 (average)
  1093                           ;	Chosen strategy is simple_byte
  1094  001730  5004               	movf	??_on_number+1,w,c
  1095  001732  0A00               	xorlw	0	; case 0
  1096  001734  A4D8               	btfss	status,2,c
  1097  001736  0012               	return	
  1098                           
  1099                           ; Switch size 1, requested type "space"
  1100                           ; Number of cases is 10, Range of values is 0 to 9
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte           31    16 (average)
  1104                           ;	Chosen strategy is simple_byte
  1105  001738  5003               	movf	??_on_number,w,c
  1106  00173A  0A00               	xorlw	0	; case 0
  1107  00173C  B4D8               	btfsc	status,2,c
  1108  00173E  D7A4               	goto	l359
  1109  001740  0A01               	xorlw	1	; case 1
  1110  001742  B4D8               	btfsc	status,2,c
  1111  001744  D7A9               	goto	l361
  1112  001746  0A03               	xorlw	3	; case 2
  1113  001748  B4D8               	btfsc	status,2,c
  1114  00174A  D7AE               	goto	l362
  1115  00174C  0A01               	xorlw	1	; case 3
  1116  00174E  B4D8               	btfsc	status,2,c
  1117  001750  D7B3               	goto	l363
  1118  001752  0A07               	xorlw	7	; case 4
  1119  001754  B4D8               	btfsc	status,2,c
  1120  001756  D7B8               	goto	l364
  1121  001758  0A01               	xorlw	1	; case 5
  1122  00175A  B4D8               	btfsc	status,2,c
  1123  00175C  D7BD               	goto	l365
  1124  00175E  0A03               	xorlw	3	; case 6
  1125  001760  B4D8               	btfsc	status,2,c
  1126  001762  D7C2               	goto	l366
  1127  001764  0A01               	xorlw	1	; case 7
  1128  001766  B4D8               	btfsc	status,2,c
  1129  001768  D7C7               	goto	l367
  1130  00176A  0A0F               	xorlw	15	; case 8
  1131  00176C  B4D8               	btfsc	status,2,c
  1132  00176E  D7CC               	goto	l368
  1133  001770  0A01               	xorlw	1	; case 9
  1134  001772  A4D8               	btfss	status,2,c
  1135  001774  0012               	return	
  1136  001776  D7D0               	goto	l369
  1137  001778  0012               	return		;funcret
  1138  00177A                     __end_of_on_number:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postdec1	equ	0xFE5
  1147                           fsr1l	equ	0xFE1
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _clear_Segment *****************
  1151 ;; Defined at:
  1152 ;;		line 48 in file "display7seg.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		None
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_write
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  001CF6                     __ptext4:
  1181                           	opt stack 0
  1182  001CF6                     _clear_Segment:
  1183                           	opt stack 29
  1184                           
  1185                           ;display7seg.c: 49: PORTBbits.RB7 = 0;
  1186                           
  1187                           ;incstack = 0
  1188  001CF6  9E81               	bcf	3969,7,c	;volatile
  1189                           
  1190                           ;display7seg.c: 50: PORTBbits.RB6 = 0;
  1191  001CF8  9C81               	bcf	3969,6,c	;volatile
  1192                           
  1193                           ;display7seg.c: 51: PORTBbits.RB5 = 0;
  1194  001CFA  9A81               	bcf	3969,5,c	;volatile
  1195                           
  1196                           ;display7seg.c: 52: PORTBbits.RB4 = 0;
  1197  001CFC  9881               	bcf	3969,4,c	;volatile
  1198                           
  1199                           ;display7seg.c: 53: PORTBbits.RB3 = 0;
  1200  001CFE  9681               	bcf	3969,3,c	;volatile
  1201                           
  1202                           ;display7seg.c: 54: PORTBbits.RB2 = 0;
  1203  001D00  9481               	bcf	3969,2,c	;volatile
  1204                           
  1205                           ;display7seg.c: 55: PORTBbits.RB1 = 0;
  1206  001D02  9281               	bcf	3969,1,c	;volatile
  1207  001D04  0012               	return		;funcret
  1208  001D06                     __end_of_clear_Segment:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1l	equ	0xFE1
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function ___wmul *****************
  1221 ;; Defined at:
  1222 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  multiplier      2    0[COMRAM] unsigned int 
  1225 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  product         2    4[COMRAM] unsigned int 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    0[COMRAM] unsigned int 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, prodl, prodh
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;Total ram usage:        6 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_write
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text5
  1251  001C78                     __ptext5:
  1252                           	opt stack 0
  1253  001C78                     ___wmul:
  1254                           	opt stack 29
  1255                           
  1256                           ;incstack = 0
  1257  001C78  5001               	movf	___wmul@multiplier,w,c
  1258  001C7A  0203               	mulwf	___wmul@multiplicand,c
  1259  001C7C  CFF3 F005          	movff	prodl,___wmul@product
  1260  001C80  CFF4 F006          	movff	prodh,___wmul@product+1
  1261  001C84  5001               	movf	___wmul@multiplier,w,c
  1262  001C86  0204               	mulwf	___wmul@multiplicand+1,c
  1263  001C88  50F3               	movf	prodl,w,c
  1264  001C8A  2606               	addwf	___wmul@product+1,f,c
  1265  001C8C  5002               	movf	___wmul@multiplier+1,w,c
  1266  001C8E  0203               	mulwf	___wmul@multiplicand,c
  1267  001C90  50F3               	movf	prodl,w,c
  1268  001C92  2606               	addwf	___wmul@product+1,f,c
  1269  001C94  C005  F001         	movff	___wmul@product,?___wmul
  1270  001C98  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1271  001C9C  0012               	return	
  1272  001C9E  0012               	return		;funcret
  1273  001CA0                     __end_of___wmul:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           prodh	equ	0xFF4
  1280                           prodl	equ	0xFF3
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           postdec1	equ	0xFE5
  1284                           fsr1l	equ	0xFE1
  1285                           status	equ	0xFD8
  1286                           
  1287 ;; *************** function _read_temperature *****************
  1288 ;; Defined at:
  1289 ;;		line 13 in file "ADconversor.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  voltage         2   63[COMRAM] short 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  2   60[COMRAM] short 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;Total ram usage:        5 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    3
  1310 ;; This function calls:
  1311 ;;		___fttol
  1312 ;;		_calculate_temperature
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319  001AF2                     __ptext6:
  1320                           	opt stack 0
  1321  001AF2                     _read_temperature:
  1322                           	opt stack 27
  1323                           
  1324                           ;ADconversor.c: 14: ADCON0bits.ADON = 1;
  1325                           
  1326                           ;incstack = 0
  1327  001AF2  80C2               	bsf	4034,0,c	;volatile
  1328                           
  1329                           ;ADconversor.c: 15: ADCON0bits.GO = 1;
  1330  001AF4  82C2               	bsf	4034,1,c	;volatile
  1331                           
  1332                           ;ADconversor.c: 16: short voltage = -1;
  1333  001AF6  6840               	setf	read_temperature@voltage,c
  1334  001AF8  6841               	setf	read_temperature@voltage+1,c
  1335                           
  1336                           ;ADconversor.c: 18: while(ADCON0bits.GO){
  1337  001AFA  D017               	goto	l2412
  1338  001AFC                     l2406:
  1339                           
  1340                           ;ADconversor.c: 19: _delay((unsigned long)((1)*(8000000/4000.0)));
  1341  001AFC  0E03               	movlw	3
  1342  001AFE  6E3F               	movwf	??_read_temperature& (0+255),c
  1343  001B00  0E98               	movlw	152
  1344  001B02                     u1917:
  1345  001B02  2EE8               	decfsz	wreg,f,c
  1346  001B04  D7FE               	goto	u1917
  1347  001B06  2E3F               	decfsz	??_read_temperature& (0+255),f,c
  1348  001B08  D7FC               	goto	u1917
  1349                           
  1350                           ;ADconversor.c: 20: voltage = (short)(ADRESH);
  1351  001B0A  CFC4 F040          	movff	4036,read_temperature@voltage	;volatile
  1352  001B0E  6A41               	clrf	read_temperature@voltage+1,c
  1353                           
  1354                           ;ADconversor.c: 22: ADCON0bits.GO = voltage < 0;
  1355  001B10  AE41               	btfss	read_temperature@voltage+1,7,c
  1356  001B12  D003               	goto	u1800
  1357  001B14  6A3F               	clrf	??_read_temperature& (0+255),c
  1358  001B16  2A3F               	incf	??_read_temperature& (0+255),f,c
  1359  001B18  D001               	goto	u1818
  1360  001B1A                     u1800:
  1361  001B1A  6A3F               	clrf	??_read_temperature& (0+255),c
  1362  001B1C                     u1818:
  1363  001B1C  463F               	rlncf	??_read_temperature,f,c
  1364  001B1E  50C2               	movf	4034,w,c	;volatile
  1365  001B20  183F               	xorwf	??_read_temperature,w,c
  1366  001B22  0BFD               	andlw	-3
  1367  001B24  183F               	xorwf	??_read_temperature,w,c
  1368  001B26  6EC2               	movwf	4034,c	;volatile
  1369  001B28  D000               	goto	l2412
  1370  001B2A                     l2412:
  1371  001B2A  B2C2               	btfsc	4034,1,c	;volatile
  1372  001B2C  D7E7               	goto	l2406
  1373                           
  1374                           ;ADconversor.c: 23: }
  1375                           ;ADconversor.c: 24: ADCON0bits.ADON = 0;
  1376  001B2E  90C2               	bcf	4034,0,c	;volatile
  1377                           
  1378                           ;ADconversor.c: 26: return (short)calculate_temperature(voltage);
  1379  001B30  C040  F028         	movff	read_temperature@voltage,calculate_temperature@voltage
  1380  001B34  C041  F029         	movff	read_temperature@voltage+1,calculate_temperature@voltage+1
  1381  001B38  EC41  F00D         	call	_calculate_temperature	;wreg free
  1382  001B3C  C028  F02E         	movff	?_calculate_temperature,___fttol@f1
  1383  001B40  C029  F02F         	movff	?_calculate_temperature+1,___fttol@f1+1
  1384  001B44  C02A  F030         	movff	?_calculate_temperature+2,___fttol@f1+2
  1385  001B48  ECC2  F00A         	call	___fttol	;wreg free
  1386  001B4C  C02E  F03D         	movff	?___fttol,?_read_temperature
  1387  001B50  C02F  F03E         	movff	?___fttol+1,?_read_temperature+1
  1388  001B54  0012               	return	
  1389  001B56  0012               	return		;funcret
  1390  001B58                     __end_of_read_temperature:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _calculate_temperature *****************
  1405 ;; Defined at:
  1406 ;;		line 3 in file "ADconversor.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  voltage         2   39[COMRAM] short 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  temperature     3   42[COMRAM] float 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  3   39[COMRAM] float 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;Total ram usage:        6 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		___awtoft
  1429 ;;		___ftadd
  1430 ;;		___ftmul
  1431 ;; This function is called by:
  1432 ;;		_read_temperature
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text7
  1437  001A82                     __ptext7:
  1438                           	opt stack 0
  1439  001A82                     _calculate_temperature:
  1440                           	opt stack 27
  1441                           
  1442                           ;ADconversor.c: 4: float temperature = 0.588 * (float)voltage - 50;
  1443                           
  1444                           ;incstack = 0
  1445  001A82  0E87               	movlw	135
  1446  001A84  6E10               	movwf	___ftmul@f2,c
  1447  001A86  0E16               	movlw	22
  1448  001A88  6E11               	movwf	___ftmul@f2+1,c
  1449  001A8A  0E3F               	movlw	63
  1450  001A8C  6E12               	movwf	___ftmul@f2+2,c
  1451  001A8E  C028  F009         	movff	calculate_temperature@voltage,___awtoft@c
  1452  001A92  C029  F00A         	movff	calculate_temperature@voltage+1,___awtoft@c+1
  1453  001A96  ECEF  F00D         	call	___awtoft	;wreg free
  1454  001A9A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1455  001A9E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1456  001AA2  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1457  001AA6  EC41  F00A         	call	___ftmul	;wreg free
  1458  001AAA  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1459  001AAE  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1460  001AB2  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1461  001AB6  0E00               	movlw	0
  1462  001AB8  6E1F               	movwf	___ftadd@f2,c
  1463  001ABA  0E48               	movlw	72
  1464  001ABC  6E20               	movwf	___ftadd@f2+1,c
  1465  001ABE  0EC2               	movlw	194
  1466  001AC0  6E21               	movwf	___ftadd@f2+2,c
  1467  001AC2  EC83  F007         	call	___ftadd	;wreg free
  1468  001AC6  C01C  F02B         	movff	?___ftadd,calculate_temperature@temperature
  1469  001ACA  C01D  F02C         	movff	?___ftadd+1,calculate_temperature@temperature+1
  1470  001ACE  C01E  F02D         	movff	?___ftadd+2,calculate_temperature@temperature+2
  1471                           
  1472                           ;ADconversor.c: 6: if(temperature < 0){
  1473  001AD2  AE2D               	btfss	calculate_temperature@temperature+2,7,c
  1474  001AD4  D007               	goto	l393
  1475                           
  1476                           ;ADconversor.c: 7: return 0;
  1477  001AD6  0E00               	movlw	0
  1478  001AD8  6E28               	movwf	?_calculate_temperature,c
  1479  001ADA  0E00               	movlw	0
  1480  001ADC  6E29               	movwf	?_calculate_temperature+1,c
  1481  001ADE  0E00               	movlw	0
  1482  001AE0  6E2A               	movwf	?_calculate_temperature+2,c
  1483  001AE2  0012               	return	
  1484  001AE4                     l393:
  1485                           
  1486                           ;ADconversor.c: 8: }
  1487                           ;ADconversor.c: 10: return temperature;
  1488  001AE4  C02B  F028         	movff	calculate_temperature@temperature,?_calculate_temperature
  1489  001AE8  C02C  F029         	movff	calculate_temperature@temperature+1,?_calculate_temperature+1
  1490  001AEC  C02D  F02A         	movff	calculate_temperature@temperature+2,?_calculate_temperature+2
  1491  001AF0  0012               	return		;funcret
  1492  001AF2                     __end_of_calculate_temperature:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1l	equ	0xFE1
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function ___ftmul *****************
  1507 ;; Defined at:
  1508 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  f1              3   12[COMRAM] float 
  1511 ;;  f2              3   15[COMRAM] float 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1514 ;;  sign            1   26[COMRAM] unsigned char 
  1515 ;;  cntr            1   25[COMRAM] unsigned char 
  1516 ;;  exp             1   21[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  3   12[COMRAM] float 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1526 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;Total ram usage:       15 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    1
  1533 ;; This function calls:
  1534 ;;		___ftpack
  1535 ;; This function is called by:
  1536 ;;		_calculate_temperature
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text8
  1541  001482                     __ptext8:
  1542                           	opt stack 0
  1543  001482                     ___ftmul:
  1544                           	opt stack 27
  1545                           
  1546                           ;incstack = 0
  1547  001482  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1548  001486  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1549  001488  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1550  00148A  340E               	rlcf	___ftmul@f1+1,w,c
  1551  00148C  3613               	rlcf	??___ftmul& (0+255),f,c
  1552  00148E  E301               	bnc	u1521
  1553  001490  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1554  001492                     u1521:
  1555  001492  5013               	movf	??___ftmul,w,c
  1556  001494  6E16               	movwf	___ftmul@exp,c
  1557  001496  5016               	movf	___ftmul@exp,w,c
  1558  001498  A4D8               	btfss	status,2,c
  1559  00149A  D007               	goto	l2130
  1560  00149C  0E00               	movlw	0
  1561  00149E  6E0D               	movwf	?___ftmul,c
  1562  0014A0  0E00               	movlw	0
  1563  0014A2  6E0E               	movwf	?___ftmul+1,c
  1564  0014A4  0E00               	movlw	0
  1565  0014A6  6E0F               	movwf	?___ftmul+2,c
  1566  0014A8  0012               	return	
  1567  0014AA                     l2130:
  1568  0014AA  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1569  0014AE  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1570  0014B0  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1571  0014B2  3411               	rlcf	___ftmul@f2+1,w,c
  1572  0014B4  3613               	rlcf	??___ftmul& (0+255),f,c
  1573  0014B6  E301               	bnc	u1541
  1574  0014B8  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1575  0014BA                     u1541:
  1576  0014BA  5013               	movf	??___ftmul,w,c
  1577  0014BC  6E1B               	movwf	___ftmul@sign,c
  1578  0014BE  501B               	movf	___ftmul@sign,w,c
  1579  0014C0  A4D8               	btfss	status,2,c
  1580  0014C2  D007               	goto	l2136
  1581  0014C4  0E00               	movlw	0
  1582  0014C6  6E0D               	movwf	?___ftmul,c
  1583  0014C8  0E00               	movlw	0
  1584  0014CA  6E0E               	movwf	?___ftmul+1,c
  1585  0014CC  0E00               	movlw	0
  1586  0014CE  6E0F               	movwf	?___ftmul+2,c
  1587  0014D0  0012               	return	
  1588  0014D2                     l2136:
  1589  0014D2  501B               	movf	___ftmul@sign,w,c
  1590  0014D4  0F7B               	addlw	123
  1591  0014D6  2616               	addwf	___ftmul@exp,f,c
  1592  0014D8  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1593  0014DC  5012               	movf	___ftmul@f2+2,w,c
  1594  0014DE  1A1B               	xorwf	___ftmul@sign,f,c
  1595  0014E0  0E80               	movlw	128
  1596  0014E2  161B               	andwf	___ftmul@sign,f,c
  1597  0014E4  8E0E               	bsf	___ftmul@f1+1,7,c
  1598  0014E6  8E11               	bsf	___ftmul@f2+1,7,c
  1599  0014E8  0EFF               	movlw	255
  1600  0014EA  1610               	andwf	___ftmul@f2,f,c
  1601  0014EC  0EFF               	movlw	255
  1602  0014EE  1611               	andwf	___ftmul@f2+1,f,c
  1603  0014F0  0E00               	movlw	0
  1604  0014F2  1612               	andwf	___ftmul@f2+2,f,c
  1605  0014F4  0E00               	movlw	0
  1606  0014F6  6E17               	movwf	___ftmul@f3_as_product,c
  1607  0014F8  0E00               	movlw	0
  1608  0014FA  6E18               	movwf	___ftmul@f3_as_product+1,c
  1609  0014FC  0E00               	movlw	0
  1610  0014FE  6E19               	movwf	___ftmul@f3_as_product+2,c
  1611  001500  0E07               	movlw	7
  1612  001502  6E1A               	movwf	___ftmul@cntr,c
  1613  001504  D000               	goto	l2150
  1614  001506                     l2150:
  1615  001506  A00D               	btfss	___ftmul@f1,0,c
  1616  001508  D007               	goto	l2154
  1617  00150A  5010               	movf	___ftmul@f2,w,c
  1618  00150C  2617               	addwf	___ftmul@f3_as_product,f,c
  1619  00150E  5011               	movf	___ftmul@f2+1,w,c
  1620  001510  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1621  001512  5012               	movf	___ftmul@f2+2,w,c
  1622  001514  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1623  001516  D000               	goto	l2154
  1624  001518                     l2154:
  1625  001518  90D8               	bcf	status,0,c
  1626  00151A  320F               	rrcf	___ftmul@f1+2,f,c
  1627  00151C  320E               	rrcf	___ftmul@f1+1,f,c
  1628  00151E  320D               	rrcf	___ftmul@f1,f,c
  1629  001520  90D8               	bcf	status,0,c
  1630  001522  3610               	rlcf	___ftmul@f2,f,c
  1631  001524  3611               	rlcf	___ftmul@f2+1,f,c
  1632  001526  3612               	rlcf	___ftmul@f2+2,f,c
  1633  001528  2E1A               	decfsz	___ftmul@cntr,f,c
  1634  00152A  D7ED               	goto	l2150
  1635  00152C  D000               	goto	l2158
  1636  00152E                     l2158:
  1637  00152E  0E09               	movlw	9
  1638  001530  6E1A               	movwf	___ftmul@cntr,c
  1639  001532  D000               	goto	l2160
  1640  001534                     l2160:
  1641  001534  A00D               	btfss	___ftmul@f1,0,c
  1642  001536  D007               	goto	l2164
  1643  001538  5010               	movf	___ftmul@f2,w,c
  1644  00153A  2617               	addwf	___ftmul@f3_as_product,f,c
  1645  00153C  5011               	movf	___ftmul@f2+1,w,c
  1646  00153E  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1647  001540  5012               	movf	___ftmul@f2+2,w,c
  1648  001542  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1649  001544  D000               	goto	l2164
  1650  001546                     l2164:
  1651  001546  90D8               	bcf	status,0,c
  1652  001548  320F               	rrcf	___ftmul@f1+2,f,c
  1653  00154A  320E               	rrcf	___ftmul@f1+1,f,c
  1654  00154C  320D               	rrcf	___ftmul@f1,f,c
  1655  00154E  90D8               	bcf	status,0,c
  1656  001550  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1657  001552  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1658  001554  3217               	rrcf	___ftmul@f3_as_product,f,c
  1659  001556  2E1A               	decfsz	___ftmul@cntr,f,c
  1660  001558  D7ED               	goto	l2160
  1661  00155A  D000               	goto	l2168
  1662  00155C                     l2168:
  1663  00155C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1664  001560  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1665  001564  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1666  001568  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1667  00156C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1668  001570  ECBD  F00B         	call	___ftpack	;wreg free
  1669  001574  C001  F00D         	movff	?___ftpack,?___ftmul
  1670  001578  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1671  00157C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1672  001580  0012               	return	
  1673  001582  0012               	return		;funcret
  1674  001584                     __end_of___ftmul:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           prodh	equ	0xFF4
  1681                           prodl	equ	0xFF3
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function ___ftadd *****************
  1689 ;; Defined at:
  1690 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftadd.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  f1              3   27[COMRAM] float 
  1693 ;;  f2              3   30[COMRAM] float 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  exp1            1   38[COMRAM] unsigned char 
  1696 ;;  exp2            1   37[COMRAM] unsigned char 
  1697 ;;  sign            1   36[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  3   27[COMRAM] float 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1707 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;Total ram usage:       12 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    1
  1714 ;; This function calls:
  1715 ;;		___ftpack
  1716 ;; This function is called by:
  1717 ;;		_calculate_temperature
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text9
  1722  000F06                     __ptext9:
  1723                           	opt stack 0
  1724  000F06                     ___ftadd:
  1725                           	opt stack 27
  1726                           
  1727                           ;incstack = 0
  1728  000F06  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  1729  000F0A  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1730  000F0C  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1731  000F0E  341D               	rlcf	___ftadd@f1+1,w,c
  1732  000F10  3622               	rlcf	??___ftadd& (0+255),f,c
  1733  000F12  E301               	bnc	u1311
  1734  000F14  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1735  000F16                     u1311:
  1736  000F16  5022               	movf	??___ftadd,w,c
  1737  000F18  6E27               	movwf	___ftadd@exp1,c
  1738  000F1A  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  1739  000F1E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1740  000F20  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1741  000F22  3420               	rlcf	___ftadd@f2+1,w,c
  1742  000F24  3622               	rlcf	??___ftadd& (0+255),f,c
  1743  000F26  E301               	bnc	u1321
  1744  000F28  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1745  000F2A                     u1321:
  1746  000F2A  5022               	movf	??___ftadd,w,c
  1747  000F2C  6E26               	movwf	___ftadd@exp2,c
  1748  000F2E  5027               	movf	___ftadd@exp1,w,c
  1749  000F30  B4D8               	btfsc	status,2,c
  1750  000F32  D00B               	goto	l861
  1751  000F34  5026               	movf	___ftadd@exp2,w,c
  1752  000F36  5C27               	subwf	___ftadd@exp1,w,c
  1753  000F38  B0D8               	btfsc	status,0,c
  1754  000F3A  D00E               	goto	l2062
  1755  000F3C  5027               	movf	___ftadd@exp1,w,c
  1756  000F3E  0800               	sublw	0
  1757  000F40  2426               	addwf	___ftadd@exp2,w,c
  1758  000F42  6E22               	movwf	??___ftadd& (0+255),c
  1759  000F44  0E18               	movlw	24
  1760  000F46  6422               	cpfsgt	??___ftadd,c
  1761  000F48  D007               	goto	l2062
  1762  000F4A                     l861:
  1763  000F4A  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  1764  000F4E  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  1765  000F52  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  1766  000F56  0012               	return	
  1767  000F58                     l2062:
  1768  000F58  5026               	movf	___ftadd@exp2,w,c
  1769  000F5A  B4D8               	btfsc	status,2,c
  1770  000F5C  D00B               	goto	l865
  1771  000F5E  5027               	movf	___ftadd@exp1,w,c
  1772  000F60  5C26               	subwf	___ftadd@exp2,w,c
  1773  000F62  B0D8               	btfsc	status,0,c
  1774  000F64  D00E               	goto	l2068
  1775  000F66  5026               	movf	___ftadd@exp2,w,c
  1776  000F68  0800               	sublw	0
  1777  000F6A  2427               	addwf	___ftadd@exp1,w,c
  1778  000F6C  6E22               	movwf	??___ftadd& (0+255),c
  1779  000F6E  0E18               	movlw	24
  1780  000F70  6422               	cpfsgt	??___ftadd,c
  1781  000F72  D007               	goto	l2068
  1782  000F74                     l865:
  1783  000F74  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  1784  000F78  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  1785  000F7C  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  1786  000F80  0012               	return	
  1787  000F82                     l2068:
  1788  000F82  0E06               	movlw	6
  1789  000F84  6E25               	movwf	___ftadd@sign,c
  1790  000F86  AE1E               	btfss	___ftadd@f1+2,7,c
  1791  000F88  D002               	goto	l2074
  1792  000F8A  8E25               	bsf	___ftadd@sign,7,c
  1793  000F8C  D000               	goto	l2074
  1794  000F8E                     l2074:
  1795  000F8E  BE21               	btfsc	___ftadd@f2+2,7,c
  1796  000F90  8C25               	bsf	___ftadd@sign,6,c
  1797  000F92  8E1D               	bsf	___ftadd@f1+1,7,c
  1798  000F94  0EFF               	movlw	255
  1799  000F96  161C               	andwf	___ftadd@f1,f,c
  1800  000F98  0EFF               	movlw	255
  1801  000F9A  161D               	andwf	___ftadd@f1+1,f,c
  1802  000F9C  0E00               	movlw	0
  1803  000F9E  161E               	andwf	___ftadd@f1+2,f,c
  1804  000FA0  8E20               	bsf	___ftadd@f2+1,7,c
  1805  000FA2  0EFF               	movlw	255
  1806  000FA4  161F               	andwf	___ftadd@f2,f,c
  1807  000FA6  0EFF               	movlw	255
  1808  000FA8  1620               	andwf	___ftadd@f2+1,f,c
  1809  000FAA  0E00               	movlw	0
  1810  000FAC  1621               	andwf	___ftadd@f2+2,f,c
  1811  000FAE  5026               	movf	___ftadd@exp2,w,c
  1812  000FB0  5C27               	subwf	___ftadd@exp1,w,c
  1813  000FB2  B0D8               	btfsc	status,0,c
  1814  000FB4  D01E               	goto	l2094
  1815  000FB6                     l2084:
  1816  000FB6  90D8               	bcf	status,0,c
  1817  000FB8  361F               	rlcf	___ftadd@f2,f,c
  1818  000FBA  3620               	rlcf	___ftadd@f2+1,f,c
  1819  000FBC  3621               	rlcf	___ftadd@f2+2,f,c
  1820  000FBE  0626               	decf	___ftadd@exp2,f,c
  1821  000FC0  5027               	movf	___ftadd@exp1,w,c
  1822  000FC2  1826               	xorwf	___ftadd@exp2,w,c
  1823  000FC4  B4D8               	btfsc	status,2,c
  1824  000FC6  D00F               	goto	l2092
  1825  000FC8  0625               	decf	___ftadd@sign,f,c
  1826  000FCA  C025  F022         	movff	___ftadd@sign,??___ftadd
  1827  000FCE  0E07               	movlw	7
  1828  000FD0  1622               	andwf	??___ftadd,f,c
  1829  000FD2  B4D8               	btfsc	status,2,c
  1830  000FD4  D008               	goto	l2092
  1831  000FD6  D7EF               	goto	l2084
  1832  000FD8  D006               	goto	l2092
  1833  000FDA                     l2090:
  1834  000FDA  90D8               	bcf	status,0,c
  1835  000FDC  321E               	rrcf	___ftadd@f1+2,f,c
  1836  000FDE  321D               	rrcf	___ftadd@f1+1,f,c
  1837  000FE0  321C               	rrcf	___ftadd@f1,f,c
  1838  000FE2  2A27               	incf	___ftadd@exp1,f,c
  1839  000FE4  D000               	goto	l2092
  1840  000FE6                     l2092:
  1841  000FE6  5026               	movf	___ftadd@exp2,w,c
  1842  000FE8  1827               	xorwf	___ftadd@exp1,w,c
  1843  000FEA  B4D8               	btfsc	status,2,c
  1844  000FEC  D024               	goto	l876
  1845  000FEE  D7F5               	goto	l2090
  1846  000FF0  D022               	goto	l876
  1847  000FF2                     l2094:
  1848  000FF2  5027               	movf	___ftadd@exp1,w,c
  1849  000FF4  5C26               	subwf	___ftadd@exp2,w,c
  1850  000FF6  B0D8               	btfsc	status,0,c
  1851  000FF8  D01E               	goto	l876
  1852  000FFA                     l2096:
  1853  000FFA  90D8               	bcf	status,0,c
  1854  000FFC  361C               	rlcf	___ftadd@f1,f,c
  1855  000FFE  361D               	rlcf	___ftadd@f1+1,f,c
  1856  001000  361E               	rlcf	___ftadd@f1+2,f,c
  1857  001002  0627               	decf	___ftadd@exp1,f,c
  1858  001004  5027               	movf	___ftadd@exp1,w,c
  1859  001006  1826               	xorwf	___ftadd@exp2,w,c
  1860  001008  B4D8               	btfsc	status,2,c
  1861  00100A  D00F               	goto	l2104
  1862  00100C  0625               	decf	___ftadd@sign,f,c
  1863  00100E  C025  F022         	movff	___ftadd@sign,??___ftadd
  1864  001012  0E07               	movlw	7
  1865  001014  1622               	andwf	??___ftadd,f,c
  1866  001016  B4D8               	btfsc	status,2,c
  1867  001018  D008               	goto	l2104
  1868  00101A  D7EF               	goto	l2096
  1869  00101C  D006               	goto	l2104
  1870  00101E                     l2102:
  1871  00101E  90D8               	bcf	status,0,c
  1872  001020  3221               	rrcf	___ftadd@f2+2,f,c
  1873  001022  3220               	rrcf	___ftadd@f2+1,f,c
  1874  001024  321F               	rrcf	___ftadd@f2,f,c
  1875  001026  2A26               	incf	___ftadd@exp2,f,c
  1876  001028  D000               	goto	l2104
  1877  00102A                     l2104:
  1878  00102A  5026               	movf	___ftadd@exp2,w,c
  1879  00102C  1827               	xorwf	___ftadd@exp1,w,c
  1880  00102E  B4D8               	btfsc	status,2,c
  1881  001030  D002               	goto	l876
  1882  001032  D7F5               	goto	l2102
  1883  001034  D000               	goto	l876
  1884  001036                     l876:
  1885  001036  AE25               	btfss	___ftadd@sign,7,c
  1886  001038  D00C               	goto	l885
  1887  00103A  0EFF               	movlw	255
  1888  00103C  1A1C               	xorwf	___ftadd@f1,f,c
  1889  00103E  0EFF               	movlw	255
  1890  001040  1A1D               	xorwf	___ftadd@f1+1,f,c
  1891  001042  0EFF               	movlw	255
  1892  001044  1A1E               	xorwf	___ftadd@f1+2,f,c
  1893  001046  0E01               	movlw	1
  1894  001048  261C               	addwf	___ftadd@f1,f,c
  1895  00104A  0E00               	movlw	0
  1896  00104C  221D               	addwfc	___ftadd@f1+1,f,c
  1897  00104E  0E00               	movlw	0
  1898  001050  221E               	addwfc	___ftadd@f1+2,f,c
  1899  001052                     l885:
  1900  001052  AC25               	btfss	___ftadd@sign,6,c
  1901  001054  D00D               	goto	l2110
  1902  001056  0EFF               	movlw	255
  1903  001058  1A1F               	xorwf	___ftadd@f2,f,c
  1904  00105A  0EFF               	movlw	255
  1905  00105C  1A20               	xorwf	___ftadd@f2+1,f,c
  1906  00105E  0EFF               	movlw	255
  1907  001060  1A21               	xorwf	___ftadd@f2+2,f,c
  1908  001062  0E01               	movlw	1
  1909  001064  261F               	addwf	___ftadd@f2,f,c
  1910  001066  0E00               	movlw	0
  1911  001068  2220               	addwfc	___ftadd@f2+1,f,c
  1912  00106A  0E00               	movlw	0
  1913  00106C  2221               	addwfc	___ftadd@f2+2,f,c
  1914  00106E  D000               	goto	l2110
  1915  001070                     l2110:
  1916  001070  0E00               	movlw	0
  1917  001072  6E25               	movwf	___ftadd@sign,c
  1918  001074  501C               	movf	___ftadd@f1,w,c
  1919  001076  261F               	addwf	___ftadd@f2,f,c
  1920  001078  501D               	movf	___ftadd@f1+1,w,c
  1921  00107A  2220               	addwfc	___ftadd@f2+1,f,c
  1922  00107C  501E               	movf	___ftadd@f1+2,w,c
  1923  00107E  2221               	addwfc	___ftadd@f2+2,f,c
  1924  001080  AE21               	btfss	___ftadd@f2+2,7,c
  1925  001082  D00F               	goto	l2120
  1926  001084  0EFF               	movlw	255
  1927  001086  1A1F               	xorwf	___ftadd@f2,f,c
  1928  001088  0EFF               	movlw	255
  1929  00108A  1A20               	xorwf	___ftadd@f2+1,f,c
  1930  00108C  0EFF               	movlw	255
  1931  00108E  1A21               	xorwf	___ftadd@f2+2,f,c
  1932  001090  0E01               	movlw	1
  1933  001092  261F               	addwf	___ftadd@f2,f,c
  1934  001094  0E00               	movlw	0
  1935  001096  2220               	addwfc	___ftadd@f2+1,f,c
  1936  001098  0E00               	movlw	0
  1937  00109A  2221               	addwfc	___ftadd@f2+2,f,c
  1938  00109C  0E01               	movlw	1
  1939  00109E  6E25               	movwf	___ftadd@sign,c
  1940  0010A0  D000               	goto	l2120
  1941  0010A2                     l2120:
  1942  0010A2  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  1943  0010A6  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1944  0010AA  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1945  0010AE  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  1946  0010B2  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  1947  0010B6  ECBD  F00B         	call	___ftpack	;wreg free
  1948  0010BA  C001  F01C         	movff	?___ftpack,?___ftadd
  1949  0010BE  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  1950  0010C2  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  1951  0010C6  0012               	return	
  1952  0010C8  0012               	return		;funcret
  1953  0010CA                     __end_of___ftadd:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           postdec1	equ	0xFE5
  1964                           fsr1l	equ	0xFE1
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function ___awtoft *****************
  1968 ;; Defined at:
  1969 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awtoft.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  c               2    8[COMRAM] int 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  sign            1   11[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  3    8[COMRAM] float 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;Total ram usage:        4 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    1
  1990 ;; This function calls:
  1991 ;;		___ftpack
  1992 ;; This function is called by:
  1993 ;;		_calculate_temperature
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text10
  1998  001BDE                     __ptext10:
  1999                           	opt stack 0
  2000  001BDE                     ___awtoft:
  2001                           	opt stack 27
  2002                           
  2003                           ;incstack = 0
  2004  001BDE  0E00               	movlw	0
  2005  001BE0  6E0C               	movwf	___awtoft@sign,c
  2006  001BE2  AE0A               	btfss	___awtoft@c+1,7,c
  2007  001BE4  D007               	goto	l2224
  2008  001BE6  6C09               	negf	___awtoft@c,c
  2009  001BE8  1E0A               	comf	___awtoft@c+1,f,c
  2010  001BEA  B0D8               	btfsc	status,0,c
  2011  001BEC  2A0A               	incf	___awtoft@c+1,f,c
  2012  001BEE  0E01               	movlw	1
  2013  001BF0  6E0C               	movwf	___awtoft@sign,c
  2014  001BF2  D000               	goto	l2224
  2015  001BF4                     l2224:
  2016  001BF4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2017  001BF8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2018  001BFC  6A03               	clrf	___ftpack@arg+2,c
  2019  001BFE  0E8E               	movlw	142
  2020  001C00  6E04               	movwf	___ftpack@exp,c
  2021  001C02  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2022  001C06  ECBD  F00B         	call	___ftpack	;wreg free
  2023  001C0A  C001  F009         	movff	?___ftpack,?___awtoft
  2024  001C0E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2025  001C12  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2026  001C16  0012               	return	
  2027  001C18  0012               	return		;funcret
  2028  001C1A                     __end_of___awtoft:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           fsr1l	equ	0xFE1
  2040                           status	equ	0xFD8
  2041                           
  2042 ;; *************** function ___ftpack *****************
  2043 ;; Defined at:
  2044 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\float.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  arg             3    0[COMRAM] unsigned um
  2047 ;;  exp             1    3[COMRAM] unsigned char 
  2048 ;;  sign            1    4[COMRAM] unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  3    0[COMRAM] float 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2060 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;Total ram usage:        8 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		___awtoft
  2070 ;;		___ftadd
  2071 ;;		___ftmul
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text11
  2076  00177A                     __ptext11:
  2077                           	opt stack 0
  2078  00177A                     ___ftpack:
  2079                           	opt stack 27
  2080                           
  2081                           ;incstack = 0
  2082  00177A  5004               	movf	___ftpack@exp,w,c
  2083  00177C  B4D8               	btfsc	status,2,c
  2084  00177E  D005               	goto	l1858
  2085  001780  5001               	movf	___ftpack@arg,w,c
  2086  001782  1002               	iorwf	___ftpack@arg+1,w,c
  2087  001784  1003               	iorwf	___ftpack@arg+2,w,c
  2088  001786  A4D8               	btfss	status,2,c
  2089  001788  D00E               	goto	l1864
  2090  00178A                     l1858:
  2091  00178A  0E00               	movlw	0
  2092  00178C  6E01               	movwf	?___ftpack,c
  2093  00178E  0E00               	movlw	0
  2094  001790  6E02               	movwf	?___ftpack+1,c
  2095  001792  0E00               	movlw	0
  2096  001794  6E03               	movwf	?___ftpack+2,c
  2097  001796  0012               	return	
  2098  001798  D006               	goto	l1864
  2099  00179A                     l1862:
  2100  00179A  2A04               	incf	___ftpack@exp,f,c
  2101  00179C  90D8               	bcf	status,0,c
  2102  00179E  3203               	rrcf	___ftpack@arg+2,f,c
  2103  0017A0  3202               	rrcf	___ftpack@arg+1,f,c
  2104  0017A2  3201               	rrcf	___ftpack@arg,f,c
  2105  0017A4  D000               	goto	l1864
  2106  0017A6                     l1864:
  2107  0017A6  0E00               	movlw	0
  2108  0017A8  1401               	andwf	___ftpack@arg,w,c
  2109  0017AA  6E06               	movwf	??___ftpack& (0+255),c
  2110  0017AC  0E00               	movlw	0
  2111  0017AE  1402               	andwf	___ftpack@arg+1,w,c
  2112  0017B0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2113  0017B2  0EFE               	movlw	254
  2114  0017B4  1403               	andwf	___ftpack@arg+2,w,c
  2115  0017B6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2116  0017B8  5006               	movf	??___ftpack,w,c
  2117  0017BA  1007               	iorwf	??___ftpack+1,w,c
  2118  0017BC  1008               	iorwf	??___ftpack+2,w,c
  2119  0017BE  B4D8               	btfsc	status,2,c
  2120  0017C0  D00E               	goto	l1870
  2121  0017C2  D7EB               	goto	l1862
  2122  0017C4  D00C               	goto	l1870
  2123  0017C6                     l1866:
  2124  0017C6  2A04               	incf	___ftpack@exp,f,c
  2125  0017C8  0E01               	movlw	1
  2126  0017CA  2601               	addwf	___ftpack@arg,f,c
  2127  0017CC  0E00               	movlw	0
  2128  0017CE  2202               	addwfc	___ftpack@arg+1,f,c
  2129  0017D0  0E00               	movlw	0
  2130  0017D2  2203               	addwfc	___ftpack@arg+2,f,c
  2131  0017D4  90D8               	bcf	status,0,c
  2132  0017D6  3203               	rrcf	___ftpack@arg+2,f,c
  2133  0017D8  3202               	rrcf	___ftpack@arg+1,f,c
  2134  0017DA  3201               	rrcf	___ftpack@arg,f,c
  2135  0017DC  D000               	goto	l1870
  2136  0017DE                     l1870:
  2137  0017DE  0E00               	movlw	0
  2138  0017E0  1401               	andwf	___ftpack@arg,w,c
  2139  0017E2  6E06               	movwf	??___ftpack& (0+255),c
  2140  0017E4  0E00               	movlw	0
  2141  0017E6  1402               	andwf	___ftpack@arg+1,w,c
  2142  0017E8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2143  0017EA  0EFF               	movlw	255
  2144  0017EC  1403               	andwf	___ftpack@arg+2,w,c
  2145  0017EE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2146  0017F0  5006               	movf	??___ftpack,w,c
  2147  0017F2  1007               	iorwf	??___ftpack+1,w,c
  2148  0017F4  1008               	iorwf	??___ftpack+2,w,c
  2149  0017F6  B4D8               	btfsc	status,2,c
  2150  0017F8  D008               	goto	l1874
  2151  0017FA  D7E5               	goto	l1866
  2152  0017FC  D006               	goto	l1874
  2153  0017FE                     l1872:
  2154  0017FE  0604               	decf	___ftpack@exp,f,c
  2155  001800  90D8               	bcf	status,0,c
  2156  001802  3601               	rlcf	___ftpack@arg,f,c
  2157  001804  3602               	rlcf	___ftpack@arg+1,f,c
  2158  001806  3603               	rlcf	___ftpack@arg+2,f,c
  2159  001808  D000               	goto	l1874
  2160  00180A                     l1874:
  2161  00180A  BE02               	btfsc	___ftpack@arg+1,7,c
  2162  00180C  D004               	goto	l832
  2163  00180E  0E02               	movlw	2
  2164  001810  6004               	cpfslt	___ftpack@exp,c
  2165  001812  D7F5               	goto	l1872
  2166  001814  D000               	goto	l832
  2167  001816                     l832:
  2168  001816  B004               	btfsc	___ftpack@exp,0,c
  2169  001818  D002               	goto	l1880
  2170  00181A  9E02               	bcf	___ftpack@arg+1,7,c
  2171  00181C  D000               	goto	l1880
  2172  00181E                     l1880:
  2173  00181E  90D8               	bcf	status,0,c
  2174  001820  3204               	rrcf	___ftpack@exp,f,c
  2175  001822  5004               	movf	___ftpack@exp,w,c
  2176  001824  1203               	iorwf	___ftpack@arg+2,f,c
  2177  001826  5005               	movf	___ftpack@sign,w,c
  2178  001828  B4D8               	btfsc	status,2,c
  2179  00182A  D002               	goto	l1886
  2180  00182C  8E03               	bsf	___ftpack@arg+2,7,c
  2181  00182E  D000               	goto	l1886
  2182  001830                     l1886:
  2183  001830  C001  F001         	movff	___ftpack@arg,?___ftpack
  2184  001834  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2185  001838  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2186  00183C  0012               	return	
  2187  00183E  0012               	return		;funcret
  2188  001840                     __end_of___ftpack:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           prodh	equ	0xFF4
  2195                           prodl	equ	0xFF3
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function ___fttol *****************
  2203 ;; Defined at:
  2204 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\fttol.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  f1              3   45[COMRAM] float 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  lval            4   55[COMRAM] unsigned long 
  2209 ;;  exp1            1   59[COMRAM] unsigned char 
  2210 ;;  sign1           1   54[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  4   45[COMRAM] long 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;Total ram usage:       15 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_read_temperature
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text12
  2234  001584                     __ptext12:
  2235                           	opt stack 0
  2236  001584                     ___fttol:
  2237                           	opt stack 29
  2238                           
  2239                           ;incstack = 0
  2240  001584  C030  F032         	movff	___fttol@f1+2,??___fttol
  2241  001588  6A33               	clrf	(??___fttol+1)& (0+255),c
  2242  00158A  6A34               	clrf	(??___fttol+2)& (0+255),c
  2243  00158C  342F               	rlcf	___fttol@f1+1,w,c
  2244  00158E  3632               	rlcf	??___fttol& (0+255),f,c
  2245  001590  E301               	bnc	u1721
  2246  001592  8033               	bsf	(??___fttol+1)& (0+255),0,c
  2247  001594                     u1721:
  2248  001594  5032               	movf	??___fttol,w,c
  2249  001596  6E3C               	movwf	___fttol@exp1,c
  2250  001598  503C               	movf	___fttol@exp1,w,c
  2251  00159A  A4D8               	btfss	status,2,c
  2252  00159C  D009               	goto	l2346
  2253  00159E  0E00               	movlw	0
  2254  0015A0  6E2E               	movwf	?___fttol,c
  2255  0015A2  0E00               	movlw	0
  2256  0015A4  6E2F               	movwf	?___fttol+1,c
  2257  0015A6  0E00               	movlw	0
  2258  0015A8  6E30               	movwf	?___fttol+2,c
  2259  0015AA  0E00               	movlw	0
  2260  0015AC  6E31               	movwf	?___fttol+3,c
  2261  0015AE  0012               	return	
  2262  0015B0                     l2346:
  2263  0015B0  0E17               	movlw	23
  2264  0015B2  6E32               	movwf	??___fttol& (0+255),c
  2265  0015B4  C02E  F033         	movff	___fttol@f1,??___fttol+1
  2266  0015B8  C02F  F034         	movff	___fttol@f1+1,??___fttol+2
  2267  0015BC  C030  F035         	movff	___fttol@f1+2,??___fttol+3
  2268  0015C0  2832               	incf	??___fttol,w,c
  2269  0015C2  6E36               	movwf	(??___fttol+4)& (0+255),c
  2270  0015C4  D004               	goto	u1740
  2271  0015C6                     u1745:
  2272  0015C6  90D8               	bcf	status,0,c
  2273  0015C8  3235               	rrcf	??___fttol+3,f,c
  2274  0015CA  3234               	rrcf	??___fttol+2,f,c
  2275  0015CC  3233               	rrcf	??___fttol+1,f,c
  2276  0015CE                     u1740:
  2277  0015CE  2E36               	decfsz	(??___fttol+4)& (0+255),f,c
  2278  0015D0  D7FA               	goto	u1745
  2279  0015D2  5033               	movf	??___fttol+1,w,c
  2280  0015D4  6E37               	movwf	___fttol@sign1,c
  2281  0015D6  8E2F               	bsf	___fttol@f1+1,7,c
  2282  0015D8  0EFF               	movlw	255
  2283  0015DA  162E               	andwf	___fttol@f1,f,c
  2284  0015DC  0EFF               	movlw	255
  2285  0015DE  162F               	andwf	___fttol@f1+1,f,c
  2286  0015E0  0E00               	movlw	0
  2287  0015E2  1630               	andwf	___fttol@f1+2,f,c
  2288  0015E4  502E               	movf	___fttol@f1,w,c
  2289  0015E6  6E38               	movwf	___fttol@lval,c
  2290  0015E8  502F               	movf	___fttol@f1+1,w,c
  2291  0015EA  6E39               	movwf	___fttol@lval+1,c
  2292  0015EC  5030               	movf	___fttol@f1+2,w,c
  2293  0015EE  6E3A               	movwf	___fttol@lval+2,c
  2294  0015F0  6A3B               	clrf	___fttol@lval+3,c
  2295  0015F2  0E8E               	movlw	142
  2296  0015F4  5E3C               	subwf	___fttol@exp1,f,c
  2297  0015F6  AE3C               	btfss	___fttol@exp1,7,c
  2298  0015F8  D017               	goto	l2368
  2299  0015FA  503C               	movf	___fttol@exp1,w,c
  2300  0015FC  0A80               	xorlw	128
  2301  0015FE  0F8F               	addlw	143
  2302  001600  B0D8               	btfsc	status,0,c
  2303  001602  D00A               	goto	l2364
  2304  001604  0E00               	movlw	0
  2305  001606  6E2E               	movwf	?___fttol,c
  2306  001608  0E00               	movlw	0
  2307  00160A  6E2F               	movwf	?___fttol+1,c
  2308  00160C  0E00               	movlw	0
  2309  00160E  6E30               	movwf	?___fttol+2,c
  2310  001610  0E00               	movlw	0
  2311  001612  6E31               	movwf	?___fttol+3,c
  2312  001614  0012               	return	
  2313  001616  D000               	goto	l2364
  2314  001618                     l2364:
  2315  001618  90D8               	bcf	status,0,c
  2316  00161A  323B               	rrcf	___fttol@lval+3,f,c
  2317  00161C  323A               	rrcf	___fttol@lval+2,f,c
  2318  00161E  3239               	rrcf	___fttol@lval+1,f,c
  2319  001620  3238               	rrcf	___fttol@lval,f,c
  2320  001622  3E3C               	incfsz	___fttol@exp1,f,c
  2321  001624  D7F9               	goto	l2364
  2322  001626  D019               	goto	l2378
  2323  001628                     l2368:
  2324  001628  0E17               	movlw	23
  2325  00162A  643C               	cpfsgt	___fttol@exp1,c
  2326  00162C  D011               	goto	l2376
  2327  00162E  0E00               	movlw	0
  2328  001630  6E2E               	movwf	?___fttol,c
  2329  001632  0E00               	movlw	0
  2330  001634  6E2F               	movwf	?___fttol+1,c
  2331  001636  0E00               	movlw	0
  2332  001638  6E30               	movwf	?___fttol+2,c
  2333  00163A  0E00               	movlw	0
  2334  00163C  6E31               	movwf	?___fttol+3,c
  2335  00163E  0012               	return	
  2336  001640  D007               	goto	l2376
  2337  001642                     l2374:
  2338  001642  90D8               	bcf	status,0,c
  2339  001644  3638               	rlcf	___fttol@lval,f,c
  2340  001646  3639               	rlcf	___fttol@lval+1,f,c
  2341  001648  363A               	rlcf	___fttol@lval+2,f,c
  2342  00164A  363B               	rlcf	___fttol@lval+3,f,c
  2343  00164C  063C               	decf	___fttol@exp1,f,c
  2344  00164E  D000               	goto	l2376
  2345  001650                     l2376:
  2346  001650  503C               	movf	___fttol@exp1,w,c
  2347  001652  B4D8               	btfsc	status,2,c
  2348  001654  D002               	goto	l2378
  2349  001656  D7F5               	goto	l2374
  2350  001658  D000               	goto	l2378
  2351  00165A                     l2378:
  2352  00165A  5037               	movf	___fttol@sign1,w,c
  2353  00165C  B4D8               	btfsc	status,2,c
  2354  00165E  D009               	goto	l2382
  2355  001660  1E3B               	comf	___fttol@lval+3,f,c
  2356  001662  1E3A               	comf	___fttol@lval+2,f,c
  2357  001664  1E39               	comf	___fttol@lval+1,f,c
  2358  001666  6C38               	negf	___fttol@lval,c
  2359  001668  0E00               	movlw	0
  2360  00166A  2239               	addwfc	___fttol@lval+1,f,c
  2361  00166C  223A               	addwfc	___fttol@lval+2,f,c
  2362  00166E  223B               	addwfc	___fttol@lval+3,f,c
  2363  001670  D000               	goto	l2382
  2364  001672                     l2382:
  2365  001672  C038  F02E         	movff	___fttol@lval,?___fttol
  2366  001676  C039  F02F         	movff	___fttol@lval+1,?___fttol+1
  2367  00167A  C03A  F030         	movff	___fttol@lval+2,?___fttol+2
  2368  00167E  C03B  F031         	movff	___fttol@lval+3,?___fttol+3
  2369  001682  0012               	return	
  2370  001684  0012               	return		;funcret
  2371  001686                     __end_of___fttol:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           prodh	equ	0xFF4
  2378                           prodl	equ	0xFF3
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1l	equ	0xFE1
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function _caratula *****************
  2386 ;; Defined at:
  2387 ;;		line 12 in file "main.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		None
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text13
  2415  001D12                     __ptext13:
  2416                           	opt stack 0
  2417  001D12                     _caratula:
  2418                           	opt stack 30
  2419                           
  2420                           ;incstack = 0
  2421  001D12  0012               	return		;funcret
  2422  001D14                     __end_of_caratula:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           postdec1	equ	0xFE5
  2433                           fsr1l	equ	0xFE1
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _Setup *****************
  2437 ;; Defined at:
  2438 ;;		line 32 in file "main.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;		None               void
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    3
  2459 ;; This function calls:
  2460 ;;		_Write_RTC
  2461 ;;		_lcd_init
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text14
  2468  001B9C                     __ptext14:
  2469                           	opt stack 0
  2470  001B9C                     _Setup:
  2471                           	opt stack 27
  2472                           
  2473                           ;main.c: 34: OSCTUNEbits.INTSRC=1;
  2474                           
  2475                           ;incstack = 0
  2476  001B9C  8E9B               	bsf	3995,7,c	;volatile
  2477                           
  2478                           ;main.c: 35: OSCTUNEbits.PLLEN=0;
  2479  001B9E  9C9B               	bcf	3995,6,c	;volatile
  2480                           
  2481                           ;main.c: 36: OSCCONbits.IRCF0=1;
  2482  001BA0  88D3               	bsf	4051,4,c	;volatile
  2483                           
  2484                           ;main.c: 37: OSCCONbits.IRCF1=1;
  2485  001BA2  8AD3               	bsf	4051,5,c	;volatile
  2486                           
  2487                           ;main.c: 38: OSCCONbits.IRCF2=1;
  2488  001BA4  8CD3               	bsf	4051,6,c	;volatile
  2489                           
  2490                           ;main.c: 39: OSCCONbits.SCS0=0;
  2491  001BA6  90D3               	bcf	4051,0,c	;volatile
  2492                           
  2493                           ;main.c: 40: OSCCONbits.SCS1=0;
  2494  001BA8  92D3               	bcf	4051,1,c	;volatile
  2495                           
  2496                           ;main.c: 41: TRISA = 0b11111001;
  2497  001BAA  0EF9               	movlw	249
  2498  001BAC  6E92               	movwf	3986,c	;volatile
  2499                           
  2500                           ;main.c: 42: TRISB = 0;
  2501  001BAE  0E00               	movlw	0
  2502  001BB0  6E93               	movwf	3987,c	;volatile
  2503                           
  2504                           ;main.c: 43: TRISC = 0b0110111;
  2505  001BB2  0E37               	movlw	55
  2506  001BB4  6E94               	movwf	3988,c	;volatile
  2507                           
  2508                           ;main.c: 47: ANCON0=0b11111110;
  2509  001BB6  0EFE               	movlw	254
  2510  001BB8  010F               	movlb	15	; () banked
  2511  001BBA  6F48               	movwf	72,b	;volatile
  2512                           
  2513                           ; BSR set to: 15
  2514                           ;main.c: 49: ANCON1=0b11111111;
  2515  001BBC  010F               	movlb	15	; () banked
  2516  001BBE  6949               	setf	73,b	;volatile
  2517                           
  2518                           ;main.c: 50: ADCON0=0b01000000;
  2519  001BC0  0E40               	movlw	64
  2520  001BC2  6EC2               	movwf	4034,c	;volatile
  2521                           
  2522                           ;main.c: 51: ADCON1=0b00111000;
  2523  001BC4  0E38               	movlw	56
  2524  001BC6  6EC1               	movwf	4033,c	;volatile
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;main.c: 52: RTCCFGbits.RTCEN=1;
  2528  001BC8  010F               	movlb	15	; () banked
  2529  001BCA  8F3F               	bsf	63,7,b	;volatile
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;main.c: 53: RTCCFGbits.RTCWREN=1;
  2533  001BCC  010F               	movlb	15	; () banked
  2534  001BCE  8B3F               	bsf	63,5,b	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;main.c: 54: T1CONbits.T1OSCEN=1;
  2538  001BD0  86CD               	bsf	4045,3,c	;volatile
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;main.c: 55: Write_RTC();
  2542  001BD2  EC65  F008         	call	_Write_RTC	;wreg free
  2543                           
  2544                           ;main.c: 56: lcd_init();
  2545  001BD6  ECC6  F00C         	call	_lcd_init	;wreg free
  2546                           
  2547                           ;main.c: 58: LATBbits.LATB1 = 1;;
  2548  001BDA  828A               	bsf	3978,1,c	;volatile
  2549  001BDC  0012               	return		;funcret
  2550  001BDE                     __end_of_Setup:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           postdec1	equ	0xFE5
  2561                           fsr1l	equ	0xFE1
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _lcd_init *****************
  2565 ;; Defined at:
  2566 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  i               1    4[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    2
  2587 ;; This function calls:
  2588 ;;		_Delay1KTCYx
  2589 ;;		_lcd_send_byte
  2590 ;;		_lcd_send_nibble
  2591 ;; This function is called by:
  2592 ;;		_Setup
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text15
  2597  00198C                     __ptext15:
  2598                           	opt stack 0
  2599  00198C                     _lcd_init:
  2600                           	opt stack 27
  2601                           
  2602                           ;unmc_lcd_216.c: 120: int8 i;
  2603                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2604                           
  2605                           ;incstack = 0
  2606  00198C  9693               	bcf	3987,3,c	;volatile
  2607                           
  2608                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2609  00198E  9493               	bcf	3987,2,c	;volatile
  2610                           
  2611                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2612  001990  968A               	bcf	3978,3,c	;volatile
  2613                           
  2614                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2615  001992  948A               	bcf	3978,2,c	;volatile
  2616                           
  2617                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2618  001994  9893               	bcf	3987,4,c	;volatile
  2619                           
  2620                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2621  001996  9A93               	bcf	3987,5,c	;volatile
  2622                           
  2623                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2624  001998  9C93               	bcf	3987,6,c	;volatile
  2625                           
  2626                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2627  00199A  9E93               	bcf	3987,7,c	;volatile
  2628                           
  2629                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2630  00199C  0E0A               	movlw	10
  2631  00199E  EC69  F00E         	call	_Delay1KTCYx
  2632                           
  2633                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2634  0019A2  0E0A               	movlw	10
  2635  0019A4  EC69  F00E         	call	_Delay1KTCYx
  2636                           
  2637                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2638  0019A8  0E0A               	movlw	10
  2639  0019AA  EC69  F00E         	call	_Delay1KTCYx
  2640                           
  2641                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2642  0019AE  0E00               	movlw	0
  2643  0019B0  6E05               	movwf	lcd_init@i,c
  2644  0019B2                     l2284:
  2645  0019B2  0E02               	movlw	2
  2646  0019B4  6405               	cpfsgt	lcd_init@i,c
  2647  0019B6  D001               	goto	l2288
  2648  0019B8  D008               	goto	l2294
  2649  0019BA                     l2288:
  2650                           
  2651                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2652  0019BA  0E03               	movlw	3
  2653  0019BC  EC06  F00D         	call	_lcd_send_nibble
  2654                           
  2655                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2656  0019C0  0E0A               	movlw	10
  2657  0019C2  EC69  F00E         	call	_Delay1KTCYx
  2658  0019C6  2A05               	incf	lcd_init@i,f,c
  2659  0019C8  D7F4               	goto	l2284
  2660  0019CA                     l2294:
  2661                           
  2662                           ;unmc_lcd_216.c: 146: }
  2663                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2664  0019CA  0E02               	movlw	2
  2665  0019CC  EC06  F00D         	call	_lcd_send_nibble
  2666                           
  2667                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2668  0019D0  0E00               	movlw	0
  2669  0019D2  6E05               	movwf	lcd_init@i,c
  2670  0019D4  0E03               	movlw	3
  2671  0019D6  6405               	cpfsgt	lcd_init@i,c
  2672  0019D8  D002               	goto	l2302
  2673  0019DA  0012               	return	
  2674  0019DC  0012               	return	
  2675  0019DE                     l2302:
  2676                           
  2677                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2678  0019DE  5005               	movf	lcd_init@i,w,c
  2679  0019E0  0D01               	mullw	1
  2680  0019E2  0E01               	movlw	low _LCD_INIT_STRING
  2681  0019E4  24F3               	addwf	prodl,w,c
  2682  0019E6  6EF6               	movwf	tblptrl,c
  2683  0019E8  0E0F               	movlw	high _LCD_INIT_STRING
  2684  0019EA  20F4               	addwfc	prodh,w,c
  2685  0019EC  6EF7               	movwf	tblptrh,c
  2686  0019EE                     	if	0	;There are less than 3 active tblptr bytes
  2687  0019EE                     	endif
  2688  0019EE  0008               	tblrd		*
  2689  0019F0  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2690  0019F4  0E00               	movlw	0
  2691  0019F6  EC0D  F00E         	call	_lcd_send_byte
  2692                           
  2693                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2694  0019FA  0E0A               	movlw	10
  2695  0019FC  EC69  F00E         	call	_Delay1KTCYx
  2696  001A00  2A05               	incf	lcd_init@i,f,c
  2697  001A02  0E03               	movlw	3
  2698  001A04  6405               	cpfsgt	lcd_init@i,c
  2699  001A06  D7EB               	goto	l2302
  2700  001A08  0012               	return	
  2701  001A0A  0012               	return		;funcret
  2702  001A0C                     __end_of_lcd_init:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1l	equ	0xFE1
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _lcd_send_byte *****************
  2717 ;; Defined at:
  2718 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  address         1    wreg     unsigned char 
  2721 ;;  n               1    2[COMRAM] unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  address         1    3[COMRAM] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;Total ram usage:        2 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    1
  2740 ;; This function calls:
  2741 ;;		_Delay100TCYx
  2742 ;;		_lcd_send_nibble
  2743 ;; This function is called by:
  2744 ;;		_lcd_init
  2745 ;;		_lcd_gotoxy
  2746 ;;		_lcd_putc
  2747 ;;		_lcd_comand
  2748 ;;		_lcd_setcursor_vb
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text16
  2753  001C1A                     __ptext16:
  2754                           	opt stack 0
  2755  001C1A                     _lcd_send_byte:
  2756                           	opt stack 27
  2757                           
  2758                           ;incstack = 0
  2759                           ;lcd_send_byte@address stored from wreg
  2760  001C1A  6E04               	movwf	lcd_send_byte@address,c
  2761                           
  2762                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2763  001C1C  968A               	bcf	3978,3,c	;volatile
  2764                           
  2765                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2766  001C1E  0E02               	movlw	2
  2767  001C20  EC60  F00E         	call	_Delay100TCYx
  2768                           
  2769                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2770  001C24  9893               	bcf	3987,4,c	;volatile
  2771                           
  2772                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2773  001C26  9A93               	bcf	3987,5,c	;volatile
  2774                           
  2775                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2776  001C28  9C93               	bcf	3987,6,c	;volatile
  2777                           
  2778                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2779  001C2A  9E93               	bcf	3987,7,c	;volatile
  2780                           
  2781                           ;unmc_lcd_216.c: 101: if(address)
  2782  001C2C  5004               	movf	lcd_send_byte@address,w,c
  2783  001C2E  B4D8               	btfsc	status,2,c
  2784  001C30  D002               	goto	l142
  2785                           
  2786                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2787  001C32  868A               	bsf	3978,3,c	;volatile
  2788  001C34  D001               	goto	l143
  2789  001C36                     l142:
  2790                           
  2791                           ;unmc_lcd_216.c: 103: else
  2792                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2793  001C36  968A               	bcf	3978,3,c	;volatile
  2794  001C38                     l143:
  2795                           
  2796                           ;unmc_lcd_216.c: 106: __nop();
  2797  001C38  F000               	nop	
  2798                           
  2799                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2800  001C3A  3803               	swapf	lcd_send_byte@n,w,c
  2801  001C3C  0B0F               	andlw	15
  2802  001C3E  EC06  F00D         	call	_lcd_send_nibble
  2803                           
  2804                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2805  001C42  5003               	movf	lcd_send_byte@n,w,c
  2806  001C44  0B0F               	andlw	15
  2807  001C46  EC06  F00D         	call	_lcd_send_nibble
  2808  001C4A  0012               	return		;funcret
  2809  001C4C                     __end_of_lcd_send_byte:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           prodh	equ	0xFF4
  2816                           prodl	equ	0xFF3
  2817                           postinc0	equ	0xFEE
  2818                           wreg	equ	0xFE8
  2819                           postdec1	equ	0xFE5
  2820                           fsr1l	equ	0xFE1
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _lcd_send_nibble *****************
  2824 ;; Defined at:
  2825 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  nibble          1    wreg     unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  nibble          1    1[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;		None               void
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_lcd_send_byte
  2849 ;;		_lcd_init
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text17
  2854  001A0C                     __ptext17:
  2855                           	opt stack 0
  2856  001A0C                     _lcd_send_nibble:
  2857                           	opt stack 28
  2858                           
  2859                           ;incstack = 0
  2860                           ;lcd_send_nibble@nibble stored from wreg
  2861  001A0C  6E02               	movwf	lcd_send_nibble@nibble,c
  2862                           
  2863                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2864  001A0E  A002               	btfss	lcd_send_nibble@nibble,0,c
  2865  001A10  D003               	goto	u10
  2866  001A12  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2867  001A14  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2868  001A16  D001               	goto	u28
  2869  001A18                     u10:
  2870  001A18  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2871  001A1A                     u28:
  2872  001A1A  3A01               	swapf	??_lcd_send_nibble,f,c
  2873  001A1C  508A               	movf	3978,w,c	;volatile
  2874  001A1E  1801               	xorwf	??_lcd_send_nibble,w,c
  2875  001A20  0BEF               	andlw	-17
  2876  001A22  1801               	xorwf	??_lcd_send_nibble,w,c
  2877  001A24  6E8A               	movwf	3978,c	;volatile
  2878                           
  2879                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2880  001A26  A202               	btfss	lcd_send_nibble@nibble,1,c
  2881  001A28  D003               	goto	u30
  2882  001A2A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2883  001A2C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2884  001A2E  D001               	goto	u48
  2885  001A30                     u30:
  2886  001A30  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2887  001A32                     u48:
  2888  001A32  3A01               	swapf	??_lcd_send_nibble,f,c
  2889  001A34  4601               	rlncf	??_lcd_send_nibble,f,c
  2890  001A36  508A               	movf	3978,w,c	;volatile
  2891  001A38  1801               	xorwf	??_lcd_send_nibble,w,c
  2892  001A3A  0BDF               	andlw	-33
  2893  001A3C  1801               	xorwf	??_lcd_send_nibble,w,c
  2894  001A3E  6E8A               	movwf	3978,c	;volatile
  2895                           
  2896                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2897  001A40  A402               	btfss	lcd_send_nibble@nibble,2,c
  2898  001A42  D003               	goto	u50
  2899  001A44  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2900  001A46  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2901  001A48  D001               	goto	u68
  2902  001A4A                     u50:
  2903  001A4A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2904  001A4C                     u68:
  2905  001A4C  3A01               	swapf	??_lcd_send_nibble,f,c
  2906  001A4E  4601               	rlncf	??_lcd_send_nibble,f,c
  2907  001A50  4601               	rlncf	??_lcd_send_nibble,f,c
  2908  001A52  508A               	movf	3978,w,c	;volatile
  2909  001A54  1801               	xorwf	??_lcd_send_nibble,w,c
  2910  001A56  0BBF               	andlw	-65
  2911  001A58  1801               	xorwf	??_lcd_send_nibble,w,c
  2912  001A5A  6E8A               	movwf	3978,c	;volatile
  2913                           
  2914                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2915  001A5C  A602               	btfss	lcd_send_nibble@nibble,3,c
  2916  001A5E  D003               	goto	u70
  2917  001A60  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2918  001A62  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2919  001A64  D001               	goto	u88
  2920  001A66                     u70:
  2921  001A66  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2922  001A68                     u88:
  2923  001A68  3201               	rrcf	??_lcd_send_nibble,f,c
  2924  001A6A  3201               	rrcf	??_lcd_send_nibble,f,c
  2925  001A6C  508A               	movf	3978,w,c	;volatile
  2926  001A6E  1801               	xorwf	??_lcd_send_nibble,w,c
  2927  001A70  0B7F               	andlw	-129
  2928  001A72  1801               	xorwf	??_lcd_send_nibble,w,c
  2929  001A74  6E8A               	movwf	3978,c	;volatile
  2930                           
  2931                           ;unmc_lcd_216.c: 32: __nop();
  2932  001A76  F000               	nop	
  2933                           
  2934                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2935  001A78  848A               	bsf	3978,2,c	;volatile
  2936                           
  2937                           ;unmc_lcd_216.c: 34: __nop();__nop();
  2938  001A7A  F000               	nop	
  2939  001A7C  F000               	nop	
  2940                           
  2941                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  2942  001A7E  948A               	bcf	3978,2,c	;volatile
  2943  001A80  0012               	return		;funcret
  2944  001A82                     __end_of_lcd_send_nibble:
  2945                           	opt stack 0
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           prodh	equ	0xFF4
  2951                           prodl	equ	0xFF3
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           postdec1	equ	0xFE5
  2955                           fsr1l	equ	0xFE1
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _Delay100TCYx *****************
  2959 ;; Defined at:
  2960 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  unit            1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  unit            1    0[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;		None               void
  2967 ;; Registers used:
  2968 ;;		wreg
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;Total ram usage:        1 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_lcd_send_byte
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text18
  2988  001CC0                     __ptext18:
  2989                           	opt stack 0
  2990  001CC0                     _Delay100TCYx:
  2991                           	opt stack 27
  2992                           
  2993                           ;incstack = 0
  2994                           ;Delay100TCYx@unit stored from wreg
  2995  001CC0  6E01               	movwf	Delay100TCYx@unit,c
  2996  001CC2  0E21               	movlw	33
  2997  001CC4                     u1927:
  2998  001CC4  2EE8               	decfsz	wreg,f,c
  2999  001CC6  D7FE               	goto	u1927
  3000  001CC8  F000               	nop	
  3001  001CCA  2E01               	decfsz	Delay100TCYx@unit,f,c
  3002  001CCC  D7FA               	goto	l1120
  3003  001CCE  0012               	return	
  3004  001CD0  0012               	return		;funcret
  3005  001CD2                     __end_of_Delay100TCYx:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           postdec1	equ	0xFE5
  3016                           fsr1l	equ	0xFE1
  3017                           status	equ	0xFD8
  3018                           
  3019 ;; *************** function _Delay1KTCYx *****************
  3020 ;; Defined at:
  3021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  unit            1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  unit            1    0[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;Total ram usage:        1 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_lcd_init
  3045 ;;		_DelayPORXLCD
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text19
  3050  001CD2                     __ptext19:
  3051                           	opt stack 0
  3052  001CD2                     _Delay1KTCYx:
  3053                           	opt stack 28
  3054                           
  3055                           ;incstack = 0
  3056                           ;Delay1KTCYx@unit stored from wreg
  3057  001CD2  6E01               	movwf	Delay1KTCYx@unit,c
  3058  001CD4  0EFA               	movlw	250
  3059  001CD6                     u1937:
  3060  001CD6  F000               	nop	
  3061  001CD8  2EE8               	decfsz	wreg,f,c
  3062  001CDA  D7FD               	goto	u1937
  3063  001CDC  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3064  001CDE  D7FA               	goto	l1186
  3065  001CE0  0012               	return	
  3066  001CE2  0012               	return		;funcret
  3067  001CE4                     __end_of_Delay1KTCYx:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           prodh	equ	0xFF4
  3074                           prodl	equ	0xFF3
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           postdec1	equ	0xFE5
  3078                           fsr1l	equ	0xFE1
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _Write_RTC *****************
  3082 ;; Defined at:
  3083 ;;		line 22 in file "Unimic/sources/unmc_rtcc_01.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    2
  3104 ;; This function calls:
  3105 ;;		_RtccWrOn
  3106 ;;		_RtccWriteDate
  3107 ;;		_RtccWriteTime
  3108 ;;		___awdiv
  3109 ;; This function is called by:
  3110 ;;		_Setup
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text20
  3115  0010CA                     __ptext20:
  3116                           	opt stack 0
  3117  0010CA                     _Write_RTC:
  3118                           	opt stack 27
  3119                           
  3120                           ;unmc_rtcc_01.c: 24: RtccWrOn();
  3121                           
  3122                           ;incstack = 0
  3123  0010CA  EC72  F00E         	call	_RtccWrOn	;wreg free
  3124                           
  3125                           ;unmc_rtcc_01.c: 26: PIE3bits.RTCCIE=1;
  3126  0010CE  80A3               	bsf	4003,0,c	;volatile
  3127                           
  3128                           ;unmc_rtcc_01.c: 27: segundo_d=segundo/10;
  3129  0010D0  C050  F001         	movff	_segundo,___awdiv@dividend
  3130  0010D4  C051  F002         	movff	_segundo+1,___awdiv@dividend+1
  3131  0010D8  0E00               	movlw	0
  3132  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3133  0010DC  0E0A               	movlw	10
  3134  0010DE  6E03               	movwf	___awdiv@divisor,c
  3135  0010E0  EC7B  F00C         	call	___awdiv	;wreg free
  3136  0010E4  5001               	movf	?___awdiv,w,c
  3137  0010E6  6E5E               	movwf	_segundo_d,c
  3138                           
  3139                           ;unmc_rtcc_01.c: 28: segundo_u=segundo-segundo_d*10;
  3140  0010E8  505E               	movf	_segundo_d,w,c
  3141  0010EA  0D0A               	mullw	10
  3142  0010EC  50F3               	movf	prodl,w,c
  3143  0010EE  0800               	sublw	0
  3144  0010F0  2450               	addwf	_segundo,w,c
  3145  0010F2  0100               	movlb	0	; () banked
  3146  0010F4  6FA3               	movwf	_segundo_u& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;unmc_rtcc_01.c: 29: RtccTime.f.sec =segundo_d*16+segundo_u;
  3150  0010F6  505E               	movf	_segundo_d,w,c
  3151  0010F8  0D10               	mullw	16
  3152  0010FA  50F3               	movf	prodl,w,c
  3153  0010FC  0100               	movlb	0	; () banked
  3154  0010FE  25A3               	addwf	_segundo_u& (0+255),w,b
  3155  001100  6E57               	movwf	_RtccTime+1,c
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;unmc_rtcc_01.c: 30: minuto_d=minuto/10;
  3159  001102  C04E  F001         	movff	_minuto,___awdiv@dividend
  3160  001106  C04F  F002         	movff	_minuto+1,___awdiv@dividend+1
  3161  00110A  0E00               	movlw	0
  3162  00110C  6E04               	movwf	___awdiv@divisor+1,c
  3163  00110E  0E0A               	movlw	10
  3164  001110  6E03               	movwf	___awdiv@divisor,c
  3165  001112  EC7B  F00C         	call	___awdiv	;wreg free
  3166  001116  5001               	movf	?___awdiv,w,c
  3167  001118  6E5D               	movwf	_minuto_d,c
  3168                           
  3169                           ;unmc_rtcc_01.c: 31: minuto_u=minuto-minuto_d*10;
  3170  00111A  505D               	movf	_minuto_d,w,c
  3171  00111C  0D0A               	mullw	10
  3172  00111E  50F3               	movf	prodl,w,c
  3173  001120  0800               	sublw	0
  3174  001122  244E               	addwf	_minuto,w,c
  3175  001124  0100               	movlb	0	; () banked
  3176  001126  6FA2               	movwf	_minuto_u& (0+255),b
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;unmc_rtcc_01.c: 32: RtccTime.f.min =minuto_d*16+minuto_u;
  3180  001128  505D               	movf	_minuto_d,w,c
  3181  00112A  0D10               	mullw	16
  3182  00112C  50F3               	movf	prodl,w,c
  3183  00112E  0100               	movlb	0	; () banked
  3184  001130  25A2               	addwf	_minuto_u& (0+255),w,b
  3185  001132  6E58               	movwf	_RtccTime+2,c
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;unmc_rtcc_01.c: 33: hora_d=hora/10;
  3189  001134  C04A  F001         	movff	_hora,___awdiv@dividend
  3190  001138  C04B  F002         	movff	_hora+1,___awdiv@dividend+1
  3191  00113C  0E00               	movlw	0
  3192  00113E  6E04               	movwf	___awdiv@divisor+1,c
  3193  001140  0E0A               	movlw	10
  3194  001142  6E03               	movwf	___awdiv@divisor,c
  3195  001144  EC7B  F00C         	call	___awdiv	;wreg free
  3196  001148  5001               	movf	?___awdiv,w,c
  3197  00114A  6E5B               	movwf	_hora_d,c
  3198                           
  3199                           ;unmc_rtcc_01.c: 34: hora_u=hora-hora_d*10;
  3200  00114C  505B               	movf	_hora_d,w,c
  3201  00114E  0D0A               	mullw	10
  3202  001150  50F3               	movf	prodl,w,c
  3203  001152  0800               	sublw	0
  3204  001154  244A               	addwf	_hora,w,c
  3205  001156  0100               	movlb	0	; () banked
  3206  001158  6FA0               	movwf	_hora_u& (0+255),b
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;unmc_rtcc_01.c: 35: RtccTime.f.hour=hora_d*16+hora_u;
  3210  00115A  505B               	movf	_hora_d,w,c
  3211  00115C  0D10               	mullw	16
  3212  00115E  50F3               	movf	prodl,w,c
  3213  001160  0100               	movlb	0	; () banked
  3214  001162  25A0               	addwf	_hora_u& (0+255),w,b
  3215  001164  6E59               	movwf	_RtccTime+3,c
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;unmc_rtcc_01.c: 36: anio_d=anio/10;
  3219  001166  C044  F001         	movff	_anio,___awdiv@dividend
  3220  00116A  C045  F002         	movff	_anio+1,___awdiv@dividend+1
  3221  00116E  0E00               	movlw	0
  3222  001170  6E04               	movwf	___awdiv@divisor+1,c
  3223  001172  0E0A               	movlw	10
  3224  001174  6E03               	movwf	___awdiv@divisor,c
  3225  001176  EC7B  F00C         	call	___awdiv	;wreg free
  3226  00117A  5001               	movf	?___awdiv,w,c
  3227  00117C  0100               	movlb	0	; () banked
  3228  00117E  6F9C               	movwf	_anio_d& (0+255),b
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;unmc_rtcc_01.c: 37: anio_u=anio-anio_d*10;
  3232  001180  0100               	movlb	0	; () banked
  3233  001182  519C               	movf	_anio_d& (0+255),w,b
  3234  001184  0D0A               	mullw	10
  3235  001186  50F3               	movf	prodl,w,c
  3236  001188  0800               	sublw	0
  3237  00118A  2444               	addwf	_anio,w,c
  3238  00118C  0100               	movlb	0	; () banked
  3239  00118E  6F9D               	movwf	_anio_u& (0+255),b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;unmc_rtcc_01.c: 38: RtccDate.f.year=anio_d*16+anio_u;
  3243  001190  0100               	movlb	0	; () banked
  3244  001192  519C               	movf	_anio_d& (0+255),w,b
  3245  001194  0D10               	mullw	16
  3246  001196  50F3               	movf	prodl,w,c
  3247  001198  0100               	movlb	0	; () banked
  3248  00119A  259D               	addwf	_anio_u& (0+255),w,b
  3249  00119C  6E55               	movwf	_RtccDate+3,c
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;unmc_rtcc_01.c: 39: mes_d=mes/10;
  3253  00119E  C04C  F001         	movff	_mes,___awdiv@dividend
  3254  0011A2  C04D  F002         	movff	_mes+1,___awdiv@dividend+1
  3255  0011A6  0E00               	movlw	0
  3256  0011A8  6E04               	movwf	___awdiv@divisor+1,c
  3257  0011AA  0E0A               	movlw	10
  3258  0011AC  6E03               	movwf	___awdiv@divisor,c
  3259  0011AE  EC7B  F00C         	call	___awdiv	;wreg free
  3260  0011B2  5001               	movf	?___awdiv,w,c
  3261  0011B4  6E5C               	movwf	_mes_d,c
  3262                           
  3263                           ;unmc_rtcc_01.c: 40: mes_u=mes-mes_d*10;
  3264  0011B6  505C               	movf	_mes_d,w,c
  3265  0011B8  0D0A               	mullw	10
  3266  0011BA  50F3               	movf	prodl,w,c
  3267  0011BC  0800               	sublw	0
  3268  0011BE  244C               	addwf	_mes,w,c
  3269  0011C0  0100               	movlb	0	; () banked
  3270  0011C2  6FA1               	movwf	_mes_u& (0+255),b
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;unmc_rtcc_01.c: 41: RtccDate.f.mon=mes_d*16+mes_u;
  3274  0011C4  505C               	movf	_mes_d,w,c
  3275  0011C6  0D10               	mullw	16
  3276  0011C8  50F3               	movf	prodl,w,c
  3277  0011CA  0100               	movlb	0	; () banked
  3278  0011CC  25A1               	addwf	_mes_u& (0+255),w,b
  3279  0011CE  6E54               	movwf	_RtccDate+2,c
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;unmc_rtcc_01.c: 42: fecha_d=dia/10;
  3283  0011D0  C046  F001         	movff	_dia,___awdiv@dividend
  3284  0011D4  C047  F002         	movff	_dia+1,___awdiv@dividend+1
  3285  0011D8  0E00               	movlw	0
  3286  0011DA  6E04               	movwf	___awdiv@divisor+1,c
  3287  0011DC  0E0A               	movlw	10
  3288  0011DE  6E03               	movwf	___awdiv@divisor,c
  3289  0011E0  EC7B  F00C         	call	___awdiv	;wreg free
  3290  0011E4  5001               	movf	?___awdiv,w,c
  3291  0011E6  6E5A               	movwf	_fecha_d,c
  3292                           
  3293                           ;unmc_rtcc_01.c: 43: fecha_u=dia-fecha_d*10;
  3294  0011E8  505A               	movf	_fecha_d,w,c
  3295  0011EA  0D0A               	mullw	10
  3296  0011EC  50F3               	movf	prodl,w,c
  3297  0011EE  0800               	sublw	0
  3298  0011F0  2446               	addwf	_dia,w,c
  3299  0011F2  0100               	movlb	0	; () banked
  3300  0011F4  6F9F               	movwf	_fecha_u& (0+255),b
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;unmc_rtcc_01.c: 44: RtccDate.f.mday=fecha_d*16+fecha_u;
  3304  0011F6  505A               	movf	_fecha_d,w,c
  3305  0011F8  0D10               	mullw	16
  3306  0011FA  50F3               	movf	prodl,w,c
  3307  0011FC  0100               	movlb	0	; () banked
  3308  0011FE  259F               	addwf	_fecha_u& (0+255),w,b
  3309  001200  6E53               	movwf	_RtccDate+1,c
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;unmc_rtcc_01.c: 45: dia_semana=diasem;
  3313  001202  C048  F09E         	movff	_diasem,_dia_semana
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;unmc_rtcc_01.c: 46: RtccDate.f.wday =diasem;
  3317  001206  C048  F052         	movff	_diasem,_RtccDate
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;unmc_rtcc_01.c: 47: RtccWriteTime(&RtccTime,1);
  3321  00120A  0E56               	movlw	low _RtccTime
  3322  00120C  6E01               	movwf	RtccWriteTime@pTm,c
  3323  00120E  0E00               	movlw	high _RtccTime
  3324  001210  6E02               	movwf	RtccWriteTime@pTm+1,c
  3325  001212  0E01               	movlw	1
  3326  001214  6E03               	movwf	RtccWriteTime@di,c
  3327  001216  ECBB  F009         	call	_RtccWriteTime	;wreg free
  3328                           
  3329                           ;unmc_rtcc_01.c: 48: RtccWriteDate(&RtccDate,1);
  3330  00121A  0E52               	movlw	low _RtccDate
  3331  00121C  6E01               	movwf	RtccWriteDate@pDt,c
  3332  00121E  0E00               	movlw	high _RtccDate
  3333  001220  6E02               	movwf	RtccWriteDate@pDt+1,c
  3334  001222  0E01               	movlw	1
  3335  001224  6E03               	movwf	RtccWriteDate@di,c
  3336  001226  EC18  F009         	call	_RtccWriteDate	;wreg free
  3337                           
  3338                           ;unmc_rtcc_01.c: 49: (RTCCFGbits.RTCEN=1);
  3339  00122A  010F               	movlb	15	; () banked
  3340  00122C  8F3F               	bsf	63,7,b	;volatile
  3341                           
  3342                           ; BSR set to: 15
  3343  00122E  0012               	return		;funcret
  3344  001230                     __end_of_Write_RTC:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           postdec1	equ	0xFE5
  3355                           fsr1l	equ	0xFE1
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function ___awdiv *****************
  3359 ;; Defined at:
  3360 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  dividend        2    0[COMRAM] int 
  3363 ;;  divisor         2    2[COMRAM] int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  quotient        2    6[COMRAM] int 
  3366 ;;  sign            1    5[COMRAM] unsigned char 
  3367 ;;  counter         1    4[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2    0[COMRAM] int 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;Total ram usage:        8 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_Write_RTC
  3387 ;;		_write
  3388 ;;		__delay_s
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text21
  3393  0018F6                     __ptext21:
  3394                           	opt stack 0
  3395  0018F6                     ___awdiv:
  3396                           	opt stack 29
  3397                           
  3398                           ; BSR set to: 15
  3399                           ;incstack = 0
  3400  0018F6  0E00               	movlw	0
  3401  0018F8  6E06               	movwf	___awdiv@sign,c
  3402  0018FA  AE04               	btfss	___awdiv@divisor+1,7,c
  3403  0018FC  D007               	goto	l2180
  3404  0018FE  6C03               	negf	___awdiv@divisor,c
  3405  001900  1E04               	comf	___awdiv@divisor+1,f,c
  3406  001902  B0D8               	btfsc	status,0,c
  3407  001904  2A04               	incf	___awdiv@divisor+1,f,c
  3408  001906  0E01               	movlw	1
  3409  001908  6E06               	movwf	___awdiv@sign,c
  3410  00190A  D000               	goto	l2180
  3411  00190C                     l2180:
  3412  00190C  AE02               	btfss	___awdiv@dividend+1,7,c
  3413  00190E  D007               	goto	l2186
  3414  001910  6C01               	negf	___awdiv@dividend,c
  3415  001912  1E02               	comf	___awdiv@dividend+1,f,c
  3416  001914  B0D8               	btfsc	status,0,c
  3417  001916  2A02               	incf	___awdiv@dividend+1,f,c
  3418  001918  0E01               	movlw	1
  3419  00191A  1A06               	xorwf	___awdiv@sign,f,c
  3420  00191C  D000               	goto	l2186
  3421  00191E                     l2186:
  3422  00191E  0E00               	movlw	0
  3423  001920  6E08               	movwf	___awdiv@quotient+1,c
  3424  001922  0E00               	movlw	0
  3425  001924  6E07               	movwf	___awdiv@quotient,c
  3426  001926  5003               	movf	___awdiv@divisor,w,c
  3427  001928  1004               	iorwf	___awdiv@divisor+1,w,c
  3428  00192A  B4D8               	btfsc	status,2,c
  3429  00192C  D021               	goto	l2208
  3430  00192E  0E01               	movlw	1
  3431  001930  6E05               	movwf	___awdiv@counter,c
  3432  001932  D005               	goto	l2194
  3433  001934                     l2192:
  3434  001934  90D8               	bcf	status,0,c
  3435  001936  3603               	rlcf	___awdiv@divisor,f,c
  3436  001938  3604               	rlcf	___awdiv@divisor+1,f,c
  3437  00193A  2A05               	incf	___awdiv@counter,f,c
  3438  00193C  D000               	goto	l2194
  3439  00193E                     l2194:
  3440  00193E  BE04               	btfsc	___awdiv@divisor+1,7,c
  3441  001940  D002               	goto	l2196
  3442  001942  D7F8               	goto	l2192
  3443  001944  D000               	goto	l2196
  3444  001946                     l2196:
  3445  001946  90D8               	bcf	status,0,c
  3446  001948  3607               	rlcf	___awdiv@quotient,f,c
  3447  00194A  3608               	rlcf	___awdiv@quotient+1,f,c
  3448  00194C  5003               	movf	___awdiv@divisor,w,c
  3449  00194E  5C01               	subwf	___awdiv@dividend,w,c
  3450  001950  5004               	movf	___awdiv@divisor+1,w,c
  3451  001952  5802               	subwfb	___awdiv@dividend+1,w,c
  3452  001954  A0D8               	btfss	status,0,c
  3453  001956  D006               	goto	l2204
  3454  001958  5003               	movf	___awdiv@divisor,w,c
  3455  00195A  5E01               	subwf	___awdiv@dividend,f,c
  3456  00195C  5004               	movf	___awdiv@divisor+1,w,c
  3457  00195E  5A02               	subwfb	___awdiv@dividend+1,f,c
  3458  001960  8007               	bsf	___awdiv@quotient,0,c
  3459  001962  D000               	goto	l2204
  3460  001964                     l2204:
  3461  001964  90D8               	bcf	status,0,c
  3462  001966  3204               	rrcf	___awdiv@divisor+1,f,c
  3463  001968  3203               	rrcf	___awdiv@divisor,f,c
  3464  00196A  2E05               	decfsz	___awdiv@counter,f,c
  3465  00196C  D7EC               	goto	l2196
  3466  00196E  D000               	goto	l2208
  3467  001970                     l2208:
  3468  001970  5006               	movf	___awdiv@sign,w,c
  3469  001972  B4D8               	btfsc	status,2,c
  3470  001974  D005               	goto	l2212
  3471  001976  6C07               	negf	___awdiv@quotient,c
  3472  001978  1E08               	comf	___awdiv@quotient+1,f,c
  3473  00197A  B0D8               	btfsc	status,0,c
  3474  00197C  2A08               	incf	___awdiv@quotient+1,f,c
  3475  00197E  D000               	goto	l2212
  3476  001980                     l2212:
  3477  001980  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3478  001984  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3479  001988  0012               	return	
  3480  00198A  0012               	return		;funcret
  3481  00198C                     __end_of___awdiv:
  3482                           	opt stack 0
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           postdec1	equ	0xFE5
  3492                           fsr1l	equ	0xFE1
  3493                           status	equ	0xFD8
  3494                           
  3495 ;; *************** function _RtccWriteTime *****************
  3496 ;; Defined at:
  3497 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  pTm             2    0[COMRAM] PTR const struct .
  3500 ;;		 -> RtccTime(4), 
  3501 ;;  di              1    2[COMRAM] enum E7121
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  tempHourWDay    2    9[COMRAM] struct .
  3504 ;;  tempMinSec      2    7[COMRAM] struct .
  3505 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3506 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3507 ;;  wasOn           1    4[COMRAM] enum E7121
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      enum E7121
  3510 ;; Registers used:
  3511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3517 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;Total ram usage:       11 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    1
  3524 ;; This function calls:
  3525 ;;		_RtccWrOn
  3526 ;; This function is called by:
  3527 ;;		_Write_RTC
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text22
  3532  001376                     __ptext22:
  3533                           	opt stack 0
  3534  001376                     _RtccWriteTime:
  3535                           	opt stack 27
  3536                           
  3537                           ;incstack = 0
  3538  001376  0E00               	movlw	0
  3539  001378  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3540  00137A  EE20 F002          	lfsr	2,2
  3541  00137E  5001               	movf	RtccWriteTime@pTm,w,c
  3542  001380  26D9               	addwf	fsr2l,f,c
  3543  001382  5002               	movf	RtccWriteTime@pTm+1,w,c
  3544  001384  22DA               	addwfc	fsr2h,f,c
  3545  001386  0E5A               	movlw	90
  3546  001388  60DF               	cpfslt	indf2,c
  3547  00138A  0012               	return	
  3548  00138C  EE20 F001          	lfsr	2,1
  3549  001390  5001               	movf	RtccWriteTime@pTm,w,c
  3550  001392  26D9               	addwf	fsr2l,f,c
  3551  001394  5002               	movf	RtccWriteTime@pTm+1,w,c
  3552  001396  22DA               	addwfc	fsr2h,f,c
  3553  001398  0E5A               	movlw	90
  3554  00139A  60DF               	cpfslt	indf2,c
  3555  00139C  0012               	return	
  3556  00139E  EE20 F003          	lfsr	2,3
  3557  0013A2  5001               	movf	RtccWriteTime@pTm,w,c
  3558  0013A4  26D9               	addwf	fsr2l,f,c
  3559  0013A6  5002               	movf	RtccWriteTime@pTm+1,w,c
  3560  0013A8  22DA               	addwfc	fsr2h,f,c
  3561  0013AA  0E24               	movlw	36
  3562  0013AC  64DF               	cpfsgt	indf2,c
  3563  0013AE  D002               	goto	l1916
  3564  0013B0  0012               	return	
  3565                           
  3566                           ;	Return value of _RtccWriteTime is never used
  3567  0013B2  0012               	return	
  3568  0013B4                     l1916:
  3569  0013B4  EE20 F002          	lfsr	2,2
  3570  0013B8  5001               	movf	RtccWriteTime@pTm,w,c
  3571  0013BA  26D9               	addwf	fsr2l,f,c
  3572  0013BC  5002               	movf	RtccWriteTime@pTm+1,w,c
  3573  0013BE  22DA               	addwfc	fsr2h,f,c
  3574  0013C0  50DF               	movf	indf2,w,c
  3575  0013C2  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3576  0013C4  EE20 F001          	lfsr	2,1
  3577  0013C8  5001               	movf	RtccWriteTime@pTm,w,c
  3578  0013CA  26D9               	addwf	fsr2l,f,c
  3579  0013CC  5002               	movf	RtccWriteTime@pTm+1,w,c
  3580  0013CE  22DA               	addwfc	fsr2h,f,c
  3581  0013D0  50DF               	movf	indf2,w,c
  3582  0013D2  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3583  0013D4  5003               	movf	RtccWriteTime@di,w,c
  3584  0013D6  B4D8               	btfsc	status,2,c
  3585  0013D8  D002               	goto	l1922
  3586  0013DA  9CF2               	bcf	intcon,6,c	;volatile
  3587  0013DC  D000               	goto	l1922
  3588  0013DE                     l1922:
  3589  0013DE  0E00               	movlw	0
  3590  0013E0  BB3F               	btfsc	63,5,b	;volatile
  3591  0013E2  0E01               	movlw	1
  3592  0013E4  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3593  0013E6  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3594  0013E8  A4D8               	btfss	status,2,c
  3595  0013EA  D003               	goto	l1926
  3596  0013EC  EC72  F00E         	call	_RtccWrOn	;wreg free
  3597  0013F0  D000               	goto	l1926
  3598  0013F2                     l1926:
  3599  0013F2  0E00               	movlw	0
  3600  0013F4  BF3F               	btfsc	63,7,b	;volatile
  3601  0013F6  0E01               	movlw	1
  3602  0013F8  6E05               	movwf	RtccWriteTime@wasOn,c
  3603  0013FA  5005               	movf	RtccWriteTime@wasOn,w,c
  3604  0013FC  B4D8               	btfsc	status,2,c
  3605  0013FE  D007               	goto	l1932
  3606  001400  0E00               	movlw	0
  3607  001402  BE91               	btfsc	3985,7,c	;volatile
  3608  001404  0E01               	movlw	1
  3609  001406  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3610  001408  010F               	movlb	15	; () banked
  3611  00140A  9F3F               	bcf	63,7,b	;volatile
  3612  00140C  D000               	goto	l1932
  3613  00140E                     l1932:
  3614  00140E  0EFC               	movlw	252
  3615  001410  010F               	movlb	15	; () banked
  3616  001412  173F               	andwf	63,f,b	;volatile
  3617  001414  010F               	movlb	15	; () banked
  3618  001416  813F               	bsf	63,0,b	;volatile
  3619                           
  3620                           ; BSR set to: 15
  3621  001418  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3622                           
  3623                           ; BSR set to: 15
  3624  00141C  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3625                           
  3626                           ; BSR set to: 15
  3627  001420  EE20 F003          	lfsr	2,3
  3628  001424  5001               	movf	RtccWriteTime@pTm,w,c
  3629  001426  26D9               	addwf	fsr2l,f,c
  3630  001428  5002               	movf	RtccWriteTime@pTm+1,w,c
  3631  00142A  22DA               	addwfc	fsr2h,f,c
  3632  00142C  50DF               	movf	indf2,w,c
  3633  00142E  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3634                           
  3635                           ; BSR set to: 15
  3636  001430  0EFC               	movlw	252
  3637  001432  010F               	movlb	15	; () banked
  3638  001434  173F               	andwf	63,f,b	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641  001436  010F               	movlb	15	; () banked
  3642  001438  813F               	bsf	63,0,b	;volatile
  3643                           
  3644                           ; BSR set to: 15
  3645  00143A  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3646                           
  3647                           ; BSR set to: 15
  3648  00143E  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651  001442  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3652                           
  3653                           ; BSR set to: 15
  3654  001446  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657  00144A  5005               	movf	RtccWriteTime@wasOn,w,c
  3658  00144C  B4D8               	btfsc	status,2,c
  3659  00144E  D00D               	goto	l1964
  3660                           
  3661                           ; BSR set to: 15
  3662  001450  010F               	movlb	15	; () banked
  3663  001452  8F3F               	bsf	63,7,b	;volatile
  3664                           
  3665                           ; BSR set to: 15
  3666  001454  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3667  001456  B4D8               	btfsc	status,2,c
  3668  001458  D002               	goto	l1960
  3669                           
  3670                           ; BSR set to: 15
  3671  00145A  8E91               	bsf	3985,7,c	;volatile
  3672  00145C  D000               	goto	l1960
  3673  00145E                     l1960:
  3674                           
  3675                           ; BSR set to: 15
  3676  00145E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3677  001460  B4D8               	btfsc	status,2,c
  3678  001462  D009               	goto	l1968
  3679                           
  3680                           ; BSR set to: 15
  3681  001464  EC72  F00E         	call	_RtccWrOn	;wreg free
  3682  001468  D006               	goto	l1968
  3683  00146A                     l1964:
  3684  00146A  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3685  00146C  A4D8               	btfss	status,2,c
  3686  00146E  D003               	goto	l1968
  3687  001470  010F               	movlb	15	; () banked
  3688  001472  9B3F               	bcf	63,5,b	;volatile
  3689                           
  3690                           ; BSR set to: 15
  3691  001474  D000               	goto	l1968
  3692  001476                     l1968:
  3693  001476  5003               	movf	RtccWriteTime@di,w,c
  3694  001478  B4D8               	btfsc	status,2,c
  3695  00147A  0012               	return	
  3696  00147C  8CF2               	bsf	intcon,6,c	;volatile
  3697  00147E  0012               	return	
  3698                           
  3699                           ;	Return value of _RtccWriteTime is never used
  3700  001480  0012               	return		;funcret
  3701  001482                     __end_of_RtccWriteTime:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec1	equ	0xFE5
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _RtccWriteDate *****************
  3720 ;; Defined at:
  3721 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  pDt             2    0[COMRAM] PTR const struct .
  3724 ;;		 -> RtccDate(4), 
  3725 ;;  di              1    2[COMRAM] enum E7121
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  tempHourWDay    2   11[COMRAM] struct .
  3728 ;;  tempDayMonth    2    9[COMRAM] struct .
  3729 ;;  tempYear        2    6[COMRAM] struct .
  3730 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3731 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3732 ;;  wasOn           1    4[COMRAM] enum E7121
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      enum E7121
  3735 ;; Registers used:
  3736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;Total ram usage:       13 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    1
  3749 ;; This function calls:
  3750 ;;		_RtccWrOn
  3751 ;; This function is called by:
  3752 ;;		_Write_RTC
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text23
  3757  001230                     __ptext23:
  3758                           	opt stack 0
  3759  001230                     _RtccWriteDate:
  3760                           	opt stack 27
  3761                           
  3762                           ;incstack = 0
  3763  001230  0E00               	movlw	0
  3764  001232  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3765  001234  EE20 F002          	lfsr	2,2
  3766  001238  5001               	movf	RtccWriteDate@pDt,w,c
  3767  00123A  26D9               	addwf	fsr2l,f,c
  3768  00123C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3769  00123E  22DA               	addwfc	fsr2h,f,c
  3770  001240  0E13               	movlw	19
  3771  001242  60DF               	cpfslt	indf2,c
  3772  001244  0012               	return	
  3773  001246  EE20 F002          	lfsr	2,2
  3774  00124A  5001               	movf	RtccWriteDate@pDt,w,c
  3775  00124C  26D9               	addwf	fsr2l,f,c
  3776  00124E  5002               	movf	RtccWriteDate@pDt+1,w,c
  3777  001250  22DA               	addwfc	fsr2h,f,c
  3778  001252  50DF               	movf	indf2,w,c
  3779  001254  B4D8               	btfsc	status,2,c
  3780  001256  0012               	return	
  3781  001258  EE20 F001          	lfsr	2,1
  3782  00125C  5001               	movf	RtccWriteDate@pDt,w,c
  3783  00125E  26D9               	addwf	fsr2l,f,c
  3784  001260  5002               	movf	RtccWriteDate@pDt+1,w,c
  3785  001262  22DA               	addwfc	fsr2h,f,c
  3786  001264  0E32               	movlw	50
  3787  001266  60DF               	cpfslt	indf2,c
  3788  001268  0012               	return	
  3789  00126A  EE20 F001          	lfsr	2,1
  3790  00126E  5001               	movf	RtccWriteDate@pDt,w,c
  3791  001270  26D9               	addwf	fsr2l,f,c
  3792  001272  5002               	movf	RtccWriteDate@pDt+1,w,c
  3793  001274  22DA               	addwfc	fsr2h,f,c
  3794  001276  50DF               	movf	indf2,w,c
  3795  001278  B4D8               	btfsc	status,2,c
  3796  00127A  0012               	return	
  3797  00127C  EE20 F003          	lfsr	2,3
  3798  001280  5001               	movf	RtccWriteDate@pDt,w,c
  3799  001282  26D9               	addwf	fsr2l,f,c
  3800  001284  5002               	movf	RtccWriteDate@pDt+1,w,c
  3801  001286  22DA               	addwfc	fsr2h,f,c
  3802  001288  0E99               	movlw	153
  3803  00128A  64DF               	cpfsgt	indf2,c
  3804  00128C  D002               	goto	l1984
  3805  00128E  0012               	return	
  3806                           
  3807                           ;	Return value of _RtccWriteDate is never used
  3808  001290  0012               	return	
  3809  001292                     l1984:
  3810  001292  EE20 F003          	lfsr	2,3
  3811  001296  5001               	movf	RtccWriteDate@pDt,w,c
  3812  001298  26D9               	addwf	fsr2l,f,c
  3813  00129A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3814  00129C  22DA               	addwfc	fsr2h,f,c
  3815  00129E  50DF               	movf	indf2,w,c
  3816  0012A0  6E07               	movwf	RtccWriteDate@tempYear,c
  3817  0012A2  EE20 F001          	lfsr	2,1
  3818  0012A6  5001               	movf	RtccWriteDate@pDt,w,c
  3819  0012A8  26D9               	addwf	fsr2l,f,c
  3820  0012AA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3821  0012AC  22DA               	addwfc	fsr2h,f,c
  3822  0012AE  50DF               	movf	indf2,w,c
  3823  0012B0  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3824  0012B2  EE20 F002          	lfsr	2,2
  3825  0012B6  5001               	movf	RtccWriteDate@pDt,w,c
  3826  0012B8  26D9               	addwf	fsr2l,f,c
  3827  0012BA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3828  0012BC  22DA               	addwfc	fsr2h,f,c
  3829  0012BE  50DF               	movf	indf2,w,c
  3830  0012C0  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3831  0012C2  5003               	movf	RtccWriteDate@di,w,c
  3832  0012C4  B4D8               	btfsc	status,2,c
  3833  0012C6  D002               	goto	l1990
  3834  0012C8  9CF2               	bcf	intcon,6,c	;volatile
  3835  0012CA  D000               	goto	l1990
  3836  0012CC                     l1990:
  3837  0012CC  0E00               	movlw	0
  3838  0012CE  BB3F               	btfsc	63,5,b	;volatile
  3839  0012D0  0E01               	movlw	1
  3840  0012D2  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3841  0012D4  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3842  0012D6  A4D8               	btfss	status,2,c
  3843  0012D8  D003               	goto	l1994
  3844  0012DA  EC72  F00E         	call	_RtccWrOn	;wreg free
  3845  0012DE  D000               	goto	l1994
  3846  0012E0                     l1994:
  3847  0012E0  0E00               	movlw	0
  3848  0012E2  BF3F               	btfsc	63,7,b	;volatile
  3849  0012E4  0E01               	movlw	1
  3850  0012E6  6E05               	movwf	RtccWriteDate@wasOn,c
  3851  0012E8  5005               	movf	RtccWriteDate@wasOn,w,c
  3852  0012EA  B4D8               	btfsc	status,2,c
  3853  0012EC  D007               	goto	l2000
  3854  0012EE  0E00               	movlw	0
  3855  0012F0  BE91               	btfsc	3985,7,c	;volatile
  3856  0012F2  0E01               	movlw	1
  3857  0012F4  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3858  0012F6  010F               	movlb	15	; () banked
  3859  0012F8  9F3F               	bcf	63,7,b	;volatile
  3860  0012FA  D000               	goto	l2000
  3861  0012FC                     l2000:
  3862  0012FC  0EFC               	movlw	252
  3863  0012FE  010F               	movlb	15	; () banked
  3864  001300  173F               	andwf	63,f,b	;volatile
  3865  001302  010F               	movlb	15	; () banked
  3866  001304  813F               	bsf	63,0,b	;volatile
  3867                           
  3868                           ; BSR set to: 15
  3869  001306  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3870                           
  3871                           ; BSR set to: 15
  3872  00130A  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3873                           
  3874                           ; BSR set to: 15
  3875  00130E  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3876  001312  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3877  001316  50DF               	movf	indf2,w,c
  3878  001318  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3879                           
  3880                           ; BSR set to: 15
  3881  00131A  0EFC               	movlw	252
  3882  00131C  010F               	movlb	15	; () banked
  3883  00131E  173F               	andwf	63,f,b	;volatile
  3884                           
  3885                           ; BSR set to: 15
  3886  001320  0E03               	movlw	3
  3887  001322  010F               	movlb	15	; () banked
  3888  001324  133F               	iorwf	63,f,b	;volatile
  3889                           
  3890                           ; BSR set to: 15
  3891  001326  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3892                           
  3893                           ; BSR set to: 15
  3894  00132A  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3895                           
  3896                           ; BSR set to: 15
  3897  00132E  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3898                           
  3899                           ; BSR set to: 15
  3900  001332  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3901                           
  3902                           ; BSR set to: 15
  3903  001336  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3904                           
  3905                           ; BSR set to: 15
  3906  00133A  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3907                           
  3908                           ; BSR set to: 15
  3909  00133E  5005               	movf	RtccWriteDate@wasOn,w,c
  3910  001340  B4D8               	btfsc	status,2,c
  3911  001342  D00D               	goto	l2036
  3912                           
  3913                           ; BSR set to: 15
  3914  001344  010F               	movlb	15	; () banked
  3915  001346  8F3F               	bsf	63,7,b	;volatile
  3916                           
  3917                           ; BSR set to: 15
  3918  001348  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3919  00134A  B4D8               	btfsc	status,2,c
  3920  00134C  D002               	goto	l2032
  3921                           
  3922                           ; BSR set to: 15
  3923  00134E  8E91               	bsf	3985,7,c	;volatile
  3924  001350  D000               	goto	l2032
  3925  001352                     l2032:
  3926                           
  3927                           ; BSR set to: 15
  3928  001352  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3929  001354  B4D8               	btfsc	status,2,c
  3930  001356  D009               	goto	l2040
  3931                           
  3932                           ; BSR set to: 15
  3933  001358  EC72  F00E         	call	_RtccWrOn	;wreg free
  3934  00135C  D006               	goto	l2040
  3935  00135E                     l2036:
  3936  00135E  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3937  001360  A4D8               	btfss	status,2,c
  3938  001362  D003               	goto	l2040
  3939  001364  010F               	movlb	15	; () banked
  3940  001366  9B3F               	bcf	63,5,b	;volatile
  3941                           
  3942                           ; BSR set to: 15
  3943  001368  D000               	goto	l2040
  3944  00136A                     l2040:
  3945  00136A  5003               	movf	RtccWriteDate@di,w,c
  3946  00136C  B4D8               	btfsc	status,2,c
  3947  00136E  0012               	return	
  3948  001370  9CF2               	bcf	intcon,6,c	;volatile
  3949  001372  0012               	return	
  3950                           
  3951                           ;	Return value of _RtccWriteDate is never used
  3952  001374  0012               	return		;funcret
  3953  001376                     __end_of_RtccWriteDate:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           postinc0	equ	0xFEE
  3963                           wreg	equ	0xFE8
  3964                           postdec1	equ	0xFE5
  3965                           fsr1l	equ	0xFE1
  3966                           indf2	equ	0xFDF
  3967                           fsr2h	equ	0xFDA
  3968                           fsr2l	equ	0xFD9
  3969                           status	equ	0xFD8
  3970                           
  3971 ;; *************** function _RtccWrOn *****************
  3972 ;; Defined at:
  3973 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  data            2    0        unsigned int 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;		None               void
  3980 ;; Registers used:
  3981 ;;		wreg, status,2
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_Write_RTC
  3997 ;;		_RtccWriteDate
  3998 ;;		_RtccWriteTime
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text24
  4003  001CE4                     __ptext24:
  4004                           	opt stack 0
  4005  001CE4                     _RtccWrOn:
  4006                           	opt stack 27
  4007                           
  4008                           ;incstack = 0
  4009  001CE4  9CF2               	bcf	intcon,6,c	;volatile
  4010  001CE6  0E55               	movlw	85
  4011  001CE8  6EA7               	movwf	4007,c	;volatile
  4012  001CEA  0EAA               	movlw	170
  4013  001CEC  6EA7               	movwf	4007,c	;volatile
  4014  001CEE  010F               	movlb	15	; () banked
  4015  001CF0  8B3F               	bsf	63,5,b	;volatile
  4016                           
  4017                           ; BSR set to: 15
  4018  001CF2  8CF2               	bsf	intcon,6,c	;volatile
  4019                           
  4020                           ; BSR set to: 15
  4021  001CF4  0012               	return		;funcret
  4022  001CF6                     __end_of_RtccWrOn:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           intcon	equ	0xFF2
  4046                           postinc0	equ	0xFEE
  4047                           wreg	equ	0xFE8
  4048                           postdec1	equ	0xFE5
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8
  4054                           
  4055                           	psect	rparam
  4056  0000                     tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           postdec1	equ	0xFE5
  4066                           fsr1l	equ	0xFE1
  4067                           indf2	equ	0xFDF
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     67      95
    BANK0           160      0      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_read_temperature
    _write->___awdiv
    _on_numbers->_on_number
    _read_temperature->___fttol
    _calculate_temperature->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    ___fttol->_calculate_temperature
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14022
                                             65 COMRAM     2     2      0
                              _Setup
                           _caratula
                   _read_temperature
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                9     7      2    2219
                                              8 COMRAM     9     7      2
                            ___awdiv
                             ___wmul
                      _clear_Segment
                         _on_numbers
 ---------------------------------------------------------------------------------
 (2) _on_numbers                                           3     0      3     386
                                              4 COMRAM     3     0      3
                          _on_number
 ---------------------------------------------------------------------------------
 (3) _on_number                                            4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _clear_Segment                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_temperature                                     5     3      2    8469
                                             60 COMRAM     5     3      2
                            ___fttol
              _calculate_temperature
 ---------------------------------------------------------------------------------
 (2) _calculate_temperature                                6     3      3    8107
                                             39 COMRAM     6     3      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2587
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3203
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             45 COMRAM    15    11      4
              _calculate_temperature (ARG)
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3311
                          _Write_RTC
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     778
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     589
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2533
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1324
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
   _read_temperature
     ___fttol
       _calculate_temperature (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _calculate_temperature
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _write
     ___awdiv
     ___wmul
     _clear_Segment
     _on_numbers
       _on_number

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      44       5       42.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     43      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3       6        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 18 19:08:45 2016

                               _a 0090                                 _b 0092  
                               _c 0094                                 _i 0096  
                               _j 0098                                 _k 009A  
                              u10 1A18                                u30 1A30  
                              u50 1A4A                                u28 1A1A  
                              u70 1A66                                u48 1A32  
                  ?_lcd_send_byte 0003                                u68 1A4C  
                              u88 1A68                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                      __CFG_CP0$OFF 000000  
                    ___ftadd@exp1 0027                      ___ftadd@exp2 0026  
                    ___ftadd@sign 0025                               l142 1C36  
                             l143 1C38                               l361 1698  
                             l362 16A8                               l363 16B8  
                             l364 16C8                               l365 16D8  
                             l366 16E8                               l367 16F8  
                             l359 1688                               l368 1708  
                             l376 1CB8                               l393 1AE4  
                             l369 1718                               l832 1816  
                             l861 0F4A                               l865 0F74  
                             l876 1036                               l885 1052  
                             _dia 0046                               _mes 004C  
                             wreg 000FE8                              l2000 12FC  
                            l1120 1CC2                              l2110 1070  
                            l2102 101E                              l2040 136A  
                            l2032 1352                              l2120 10A2  
                            l2104 102A                              l2130 14AA  
                            l2036 135E                              l2212 1980  
                            l2204 1964                              l2302 19DE  
                            l2062 0F58                              l2150 1506  
                            l2208 1970                              l2224 1BF4  
                            l2160 1534                              l2136 14D2  
                            l2048 1728                              l1186 1CD4  
                            l2090 0FDA                              l2074 0F8E  
                            l2154 1518                              l2180 190C  
                            l2092 0FE6                              l2084 0FB6  
                            l2068 0F82                              l2164 1546  
                            l2412 1B2A                              l2094 0FF2  
                            l2158 152E                              l2406 1AFC  
                            l2192 1934                              l2096 0FFA  
                            l2168 155C                              l2194 193E  
                            l2186 191E                              l2346 15B0  
                            l2426 1892                              l2196 1946  
                            l2284 19B2                              l2364 1618  
                            l2294 19CA                              l2382 1672  
                            l2374 1642                              l2438 18E4  
                            l2288 19BA                              l2376 1650  
                            l2368 1628                              l2472 1C5A  
                            l1922 13DE                              l2378 165A  
                            l1932 140E                              l1916 13B4  
                            l1926 13F2                              l1870 17DE  
                            l1862 179A                              l1960 145E  
                            l1880 181E                              l1872 17FE  
                            l1864 17A6                              l1874 180A  
                            l1866 17C6                              l1858 178A  
                            l1964 146A                              l1990 12CC  
                            l1886 1830                              l1984 1292  
                            l1968 1476                              l1994 12E0  
                            u1311 0F16                              u1321 0F2A  
                            u1521 1492                              u1541 14BA  
                            u1800 1B1A                              u1721 1594  
                            u1740 15CE                              u1745 15C6  
                            u1818 1B1C                              u1907 18CA  
                            u1917 1B02                              u1927 1CC4  
                            u1937 1CD6                              u1897 18A8  
                ?_lcd_send_nibble 0001                              _anio 0044  
                            _flag 02F8                              _main 1C4C  
                            _hora 004A                      ___ftpack@arg 0001  
                    ___ftpack@exp 0004                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                     __CFG_T1DIG$ON 000000  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                     __CFG_IESO$OFF 000000  
                    ___ftmul@cntr 001A                      ___param_bank 000010  
                    ___ftmul@sign 001B                      ___fttol@exp1 003C  
                    ___fttol@lval 0038                       _Delay1KTCYx 1CD2  
                   __CFG_PLLDIV$1 000000                             ?_main 0001  
                 __end_of___awdiv 198C                   __end_of___ftadd 10CA  
           __size_of_Delay100TCYx 0012                   __end_of___ftmul 1584  
                 ___awdiv@divisor 0003                   __end_of___fttol 1686  
                 ___awdiv@counter 0005                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                  __CFG_FCMEN$OFF 000000                             _Setup 1B9C  
                   ___awtoft@sign 000C           ??_calculate_temperature 002B  
                           _mes_d 005C                             _mes_u 00A1  
                   ___ftpack@sign 0005                             _write 1840  
                  __pbitbssCOMRAM 02F8                             tablat 000FF5  
                           status 000FD8          __end_of_read_temperature 1B58  
         __CFG_DSWDTOSC$INTOSCREF 000000                   __initialization 1B58  
                    _Delay100TCYx 1CC0                      __end_of_main 1C78  
                 ??_lcd_send_byte 0004                            ??_main 0042  
                   ___fttol@sign1 0037           read_temperature@voltage 0040  
                   __activetblptr 000002                  __end_of_RtccWrOn 1CF6  
           __end_of_clear_Segment 1D06                            ?_Setup 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADRESH 000FC4                            _EECON2 000FA7  
                          _ANCON0 000F48                            _ANCON1 000F49  
                ___awdiv@dividend 0001                  __end_of___awtoft 1C1A  
                __end_of___ftpack 1840                            ?_write 0009  
                  __CFG_WDTEN$OFF 000000                  RtccWriteDate@pDt 0001  
                          _RTCCFG 000F3F                    __CFG_WPCFG$OFF 000000  
                __end_of_caratula 1D14                    __CFG_WPDIS$OFF 000000  
                  __CFG_XINST$OFF 000000                  __end_of_lcd_init 1A0C  
                          ___wmul 1C78                         ??___awdiv 0005  
                       ??___ftadd 0022                    __CFG_STVREN$ON 000000  
                          _diasem 0048                         ??___ftmul 0013  
                          _anio_d 009C                         ??___fttol 0032  
                          _anio_u 009D                            _hora_d 005B  
                          _hora_u 00A0                            clear_0 1B5E  
                          clear_1 1B6C                  ___awdiv@quotient 0007  
                          _minuto 004E             __end_of_RtccWriteDate 1376  
           __end_of_RtccWriteTime 1482             ___ftmul@f3_as_product 0017  
                RtccWriteTime@pTm 0001                      __pdataCOMRAM 0044  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                      __accesstop 0060           __end_of__initialization 1B92  
                      ___ftadd@f1 001C                        ___ftadd@f2 001F  
              __size_of_Write_RTC 0166                     ___rparam_used 000001  
                      ___awtoft@c 0009                        ___ftmul@f1 000D  
                      ___ftmul@f2 0010                        ___fttol@f1 002E  
                  __pcstackCOMRAM 0001                     __end_of_Setup 1BDE  
                   __end_of_write 18F6                   __CFG_DSWDTPS$G2 000000  
                 __CFG_OSC$INTOSC 000000                           ??_Setup 000E  
                         ??_write 000B                        __pbssBANK0 0060  
                      _dia_semana 009E         RtccWriteTime@tempHourWDay 000A  
                      __pnvCOMRAM 005A                         ?_RtccWrOn 0001  
                  lcd_send_byte@n 0003                           ?___wmul 0001  
              __size_of_on_number 00F4                      ?_Delay1KTCYx 0001  
                       ?___awtoft 0009                         ?___ftpack 0001  
               __end_of_Write_RTC 1230                         ?_caratula 0001  
                         _RTCVALH 000F99                           _RTCVALL 000F98  
                       ?_lcd_init 0001    __size_of_calculate_temperature 0070  
   __end_of_calculate_temperature 1AF2                 ?_read_temperature 003D  
                         __Hparam 0000                           __Lparam 0000  
              ??_read_temperature 003F          __size_of_lcd_send_nibble 0076  
                      ??_RtccWrOn 0001                           ___awdiv 18F6  
                         ___ftadd 0F06                   __size_of___wmul 0028  
                         ___ftmul 1482                           ___fttol 1584  
                    __psmallconst 0F00                       _RtccTimeVal 008C  
                         __pcinit 1B58                           _fecha_d 005A  
                         _fecha_u 009F                        ??___awtoft 000C  
                      ??___ftpack 0006                           __ramtop 0F00  
                         __ptext0 1C4C                           __ptext1 1840  
                         __ptext2 1CA0                           __ptext3 1686  
                         __ptext4 1CF6                           __ptext5 1C78  
                         __ptext6 1AF2                           __ptext7 1A82  
                         __ptext8 1482                           __ptext9 0F06  
                         _buffer2 0060                         _T1CONbits 000FCD  
                      ??_caratula 0001                           _segundo 0050  
                   on_numbers@uni 0007                        ??_lcd_init 0005  
            end_of_initialization 1B92                 __end_of_on_number 177A  
                      _on_numbers 1CA0              lcd_send_byte@address 0004  
                   __Lmediumconst 0000                           postdec1 000FE5  
                         postinc0 000FEE             __end_of_lcd_send_byte 1C4C  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                __CFG_DSBOREN$OFF 000000                  __CFG_CPUDIV$OSC1 000000  
                       _TRISBbits 000F93                  on_numbers@number 0005  
                 _LCD_INIT_STRING 0F01                  __CFG_IOL1WAY$OFF 000000  
       RtccWriteDate@tempDayMonth 000A               __CFG_MSSP7B_EN$MSK7 000000  
                     ___ftmul@exp 0016            __size_of_clear_Segment 0010  
                Delay100TCYx@unit 0001                    __end_of___wmul 1CA0  
                   __pidataCOMRAM 1D06         RtccWriteDate@tempHourWDay 000C  
               ??_lcd_send_nibble 0001              __size_of_Delay1KTCYx 0012  
                __CFG_DSWDTEN$OFF 000000               start_initialization 1B58  
                     ?_on_numbers 0005              RtccWriteTime@wasAlrm 0006  
            RtccWriteTime@wasWrEn 0007            __size_of_RtccWriteDate 0146  
                 RtccWriteDate@di 0003            __size_of_RtccWriteTime 010C  
                        ??___wmul 0005                 __size_of_RtccWrOn 0012  
                 RtccWriteTime@di 0003                  __CFG_LPT1OSC$OFF 000000  
                     _ALRMCFGbits 000F91           __end_of_LCD_INIT_STRING 0F05  
               __size_of___awtoft 003C                 __size_of___ftpack 00C6  
                     __pbssCOMRAM 0050                     _clear_Segment 1CF6  
                       _Write_RTC 10CA                 __size_of_caratula 0002  
                 Delay1KTCYx@unit 0001                 __size_of_lcd_init 0080  
                       __pnvBANK0 009C                     ?_Delay100TCYx 0001  
                        ?___awdiv 0001                          ?___ftadd 001C  
                        ?___ftmul 000D                          ?___fttol 002E  
         RtccWriteTime@tempMinSec 0008               __size_of_on_numbers 0020  
                   _RtccWriteDate 1230         __size_of_read_temperature 0066  
                     __smallconst 0F00                     _RtccWriteTime 1376  
            __CFG_RTCOSC$T1OSCREF 000000                    ?_clear_Segment 0001  
                  __size_of_Setup 0042                        ?_Write_RTC 0001  
                  __size_of_write 00B6                  _RtccAlrmTimeDate 0074  
                  ___wmul@product 0005                          _LATBbits 000F8A  
                 on_number@number 0001             _calculate_temperature 1A82  
                       _on_number 1686                          _PIE3bits 000FA3  
                       _segundo_d 005E                    ??_Delay100TCYx 0001  
                       _segundo_u 00A3                       write@number 0009  
                __CFG_WDTPS$32768 000000  calculate_temperature@temperature 002B  
              RtccWriteDate@wasOn 0005                _Rtcc_read_TimeDate 0084  
                  ?_RtccWriteDate 0001                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0001                    ?_RtccWriteTime 0001  
                       lcd_init@i 0005      calculate_temperature@voltage 0028  
                       copy_data0 1B86                        ?_on_number 0001  
                 _lcd_send_nibble 1A0C                          __Hrparam 0000  
                        _RtccDate 0052                          __Lrparam 0000  
                        _RtccTime 0056                          _RtccWrOn 1CE4  
                __size_of___awdiv 0096                  __size_of___ftadd 01C4  
                __size_of___ftmul 0102                  __size_of___fttol 0102  
                        ___awtoft 1BDE                          ___ftpack 177A  
                 ??_clear_Segment 0001                      _RtccTimeDate 007C  
                        _caratula 1D12                       ??_Write_RTC 000E  
                        __ptext10 1BDE                          __ptext11 177A  
                        __ptext20 10CA                          __ptext12 1584  
                        __ptext21 18F6                          __ptext13 1D12  
                        __ptext22 1376                          __ptext14 1B9C  
                        __ptext23 1230                          __ptext15 198C  
                        __ptext24 1CE4                          __ptext16 1C1A  
                        __ptext17 1A0C                          __ptext18 1CC0  
                        __ptext19 1CD2                          _lcd_init 198C  
                    ??_on_numbers 0008            ?_calculate_temperature 0028  
          __size_of_lcd_send_byte 0032                     __size_of_main 002C  
                        _minuto_d 005D                          _minuto_u 00A2  
                   ??_Delay1KTCYx 0001                   ??_RtccWriteDate 0004  
                 ??_RtccWriteTime 0004                   main@temperature 0042  
                _read_temperature 1AF2                __end_of_on_numbers 1CC0  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
              RtccWriteTime@wasOn 0005              __end_of_Delay100TCYx 1CD2  
         __end_of_lcd_send_nibble 1A82                       ??_on_number 0003  
                      _OSCCONbits 000FD3                         write@time 0010  
           RtccWriteDate@tempYear 0007                     _lcd_send_byte 1C1A  
                      _RTCCFGbits 000F3F               __end_of_Delay1KTCYx 1CE4  
                        write@dec 000E              RtccWriteDate@wasAlrm 0006  
                        write@uni 000C              RtccWriteDate@wasWrEn 0009  
           lcd_send_nibble@nibble 0002  
